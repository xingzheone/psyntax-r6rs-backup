;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; automatically generated from psyntax sources
;;; for copyright details, see psyntax/main.ss

(begin (define g$745$13361 . #0=((quote #f))) (define g$745$13358 . #0#) ((lambda (g$745$13142 g$745$13339) (begin (set! g$745$13142 (lambda g$745$13355 ((lambda (g$745$13354) (if (= g$745$13354 (quote 1)) (apply (lambda (g$745$13341) (g$745$13142 g$745$13341 (lambda (g$745$13343) g$745$13343))) g$745$13355) (if (= g$745$13354 (quote 2)) (apply (lambda (g$745$13346 g$745$13347) (begin (if (procedure? g$745$13347) (void) (error (quote assert) (quote "assertion failed") (quote (procedure? fender)))) ((lambda (g$745$13349) (lambda g$745$13353 ((lambda (g$745$13352) (if (= g$745$13352 (quote 0)) (apply (lambda () g$745$13349) g$745$13353) (if (= g$745$13352 (quote 1)) (apply (lambda (g$745$13351) (set! g$745$13349 (g$745$13347 g$745$13351))) g$745$13353) (error #1=(quote apply) (quote #2="invalid arg count"))))) (length g$745$13353)))) (g$745$13347 g$745$13346)))) g$745$13355) (error #1# (quote #2#))))) (length g$745$13355)))) (set! g$745$13339 (lambda (g$745$13357) (error (quote file-options-spec) (quote "not implemented")))) (begin (set! g$745$13358 g$745$13339) (set! g$745$13361 g$745$13142)))) (quote #f) (quote #f)))


(begin (define g$745$13439 . #0=((quote #f))) (define g$745$13438 . #0#) (define g$745$13437 . #0#) (define g$745$13436 . #0#) (define g$745$13435 . #0#) (define g$745$13434 . #0#) ((lambda (g$745$13364 g$745$13366 g$745$13368 g$745$13370 g$745$13372 g$745$13374) (begin (set! g$745$13364 (g$745$13361 (lambda (g$745$13376) (quote #f)) (lambda (g$745$13378) (begin (if (procedure? g$745$13378) (void) (error (quote assert) (quote "assertion failed") (quote (procedure? p)))) g$745$13378)))) (set! g$745$13366 (lambda (g$745$13380) ((lambda (g$745$13382) (begin (set! g$745$13382 (lambda (g$745$13384) ((lambda (g$745$13386) (if g$745$13386 g$745$13386 ((lambda (g$745$13388) (if g$745$13388 g$745$13388 ((lambda (g$745$13390) (if g$745$13390 g$745$13390 ((lambda (g$745$13392) (if g$745$13392 g$745$13392 (begin (quote #f) (number? g$745$13384)))) (boolean? g$745$13384)))) (symbol? g$745$13384)))) (char? g$745$13384)))) (null? g$745$13384)))) (not (g$745$13382 g$745$13380)))) (quote #f)))) (set! g$745$13368 (lambda (g$745$13394) ((lambda (g$745$13396) (begin (set! g$745$13396 (lambda (g$745$13398) (if (pair? g$745$13398) ((lambda (g$745$13399) (if (memv g$745$13399 (quote (quote))) (if (if g$745$13394 (begin (quote #f) (g$745$13366 (cadr g$745$13398))) (quote #f)) ((lambda (g$745$13425) (begin (set-symbol-value! g$745$13425 (cadr g$745$13398)) g$745$13425)) (gensym)) g$745$13398) (if (memv g$745$13399 (quote (case-lambda))) (cons (quote case-lambda) (map (lambda (g$745$13423) (cons (car g$745$13423) (map g$745$13396 (cdr g$745$13423)))) (cdr g$745$13398))) (if (memv g$745$13399 (quote (lambda))) (cons* (quote lambda) (cadr g$745$13398) (map g$745$13396 (cddr g$745$13398))) (if (memv g$745$13399 (quote (letrec))) ((lambda (g$745$13416 g$745$13417) ((lambda (g$745$13420 g$745$13421) (cons* (quote letrec) (map list g$745$13420 (map g$745$13396 g$745$13421)) (map g$745$13396 g$745$13417))) (map car g$745$13416) (map cadr g$745$13416))) (cadr g$745$13398) (cddr g$745$13398)) (if (memv g$745$13399 (quote (letrec*))) ((lambda (g$745$13408 g$745$13409) ((lambda (g$745$13412 g$745$13413) (cons* (quote letrec*) (map list g$745$13412 (map g$745$13396 g$745$13413)) (map g$745$13396 g$745$13409))) (map car g$745$13408) (map cadr g$745$13408))) (cadr g$745$13398) (cddr g$745$13398)) (if (memv g$745$13399 (quote (begin))) (cons (quote begin) (map g$745$13396 (cdr g$745$13398))) (if (memv g$745$13399 (quote (set!))) (list (quote set!) (cadr g$745$13398) (g$745$13396 (caddr g$745$13398))) (if (memv g$745$13399 (quote (primitive))) ((lambda (g$745$13401) ((lambda (g$745$13403) (if g$745$13403 ((lambda (g$745$13405) g$745$13405) g$745$13403) g$745$13401)) ((g$745$13364) g$745$13401))) (cadr g$745$13398)) (if (memv g$745$13399 (quote (define))) g$745$13398 (if (list? g$745$13398) (map g$745$13396 g$745$13398) (error (quote rewrite) (quote "invalid form ~s ~s") g$745$13398 (list? g$745$13398))))))))))))) (car g$745$13398)) g$745$13398))) g$745$13396)) (quote #f)))) (set! g$745$13370 ((lambda (g$745$13427) (not (eq? (eval-core (list (quote quote) g$745$13427)) (eval-core (list (quote quote) g$745$13427))))) (cons (quote 1) (quote 2)))) (set! g$745$13372 (lambda (g$745$13429) ((g$745$13368 g$745$13370) g$745$13429))) (set! g$745$13374 (lambda (g$745$13432 g$745$13433) (begin (pretty-print ((g$745$13368 (quote #f)) g$745$13432) g$745$13433) (newline g$745$13433)))) (begin (set! g$745$13434 g$745$13374) (set! g$745$13435 g$745$13372) (set! g$745$13436 g$745$13370) (set! g$745$13437 g$745$13368) (set! g$745$13438 g$745$13366) (set! g$745$13439 g$745$13364)))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f)))


(void)


(begin (define g$745$13927 . #0=((quote #f))) (define g$745$13926 . #0#) (define g$745$13925 . #0#) (define g$745$13924 . #0#) (define g$745$13923 . #0#) (define g$745$13922 . #0#) (define g$745$13921 . #0#) (define g$745$13920 . #0#) (define g$745$13919 . #0#) (define g$745$13918 . #0#) (define g$745$13917 . #0#) (define g$745$13916 . #0#) (define g$745$13915 . #0#) (define g$745$13914 . #0#) (define g$745$13913 . #0#) (define g$745$13912 . #0#) (define g$745$13911 . #0#) (define g$745$13910 . #0#) (define g$745$13909 . #0#) (define g$745$13908 . #0#) (define g$745$13907 . #0#) (define g$745$13906 . #0#) (define g$745$13905 . #0#) (define g$745$13904 . #0#) (define g$745$13903 . #0#) (define g$745$13902 . #0#) (define g$745$13901 . #0#) (define g$745$13900 . #0#) (define g$745$13899 . #0#) (define g$745$13898 . #0#) (define g$745$13897 . #0#) (define g$745$13896 . #0#) (define g$745$13895 . #0#) (define g$745$13894 . #0#) (define g$745$13893 . #0#) (define g$745$13892 . #0#) (define g$745$13891 . #0#) (define g$745$13890 . #0#) (define g$745$13889 . #0#) (define g$745$13888 . #0#) (define g$745$13887 . #0#) (define g$745$13886 . #0#) (define g$745$13885 . #0#) (define g$745$13884 . #0#) (define g$745$13883 . #0#) (define g$745$13882 . #0#) (define g$745$13881 . #0#) (define g$745$13880 . #0#) (define g$745$13879 . #0#) ((lambda (g$745$13504 g$745$13506 g$745$13509 g$745$13511 g$745$13513 g$745$13515 g$745$13517 g$745$13519 g$745$13521 g$745$13523 g$745$13525 g$745$13527 g$745$13529 g$745$13531 g$745$13533 g$745$13535 g$745$13537 g$745$13539 g$745$13541 g$745$13543 g$745$13545 g$745$13547 g$745$13549 g$745$13551 g$745$13553 g$745$13555 g$745$13557 g$745$13559 g$745$13561 g$745$13563 g$745$13565 g$745$13567 g$745$13569 g$745$13571 g$745$13573 g$745$13575 g$745$13577 g$745$13579 g$745$13581 g$745$13583 g$745$13585 g$745$13587 g$745$13589 g$745$13591 g$745$13593 g$745$13595 g$745$13597 g$745$13599 g$745$13601) (begin (set! g$745$13504 (lambda () ((lambda (g$745$13603) ((lambda (g$745$13605) (begin (set! g$745$13605 (lambda (g$745$13612 g$745$13613) (if (memq g$745$13612 g$745$13613) g$745$13613 (cons g$745$13612 g$745$13613)))) (lambda g$745$13609 ((lambda (g$745$13608) (if (= g$745$13608 (quote 0)) (apply (lambda () g$745$13603) g$745$13609) (if (= g$745$13608 (quote 1)) (apply (lambda (g$745$13607) (set! g$745$13603 (g$745$13605 g$745$13607 g$745$13603))) g$745$13609) (error #1=(quote apply) (quote #2="invalid arg count"))))) (length g$745$13609))))) (quote #f))) (quote ())))) (set! g$745$13506 (g$745$13361 (g$745$13504) (lambda (g$745$13615) (begin (if (procedure? g$745$13615) (void) (error (quote current-library-collection) (quote "not a procedure") g$745$13615)) g$745$13615)))) (set! g$745$13509 (lambda (g$745$13627 g$745$13628 g$745$13629 g$745$13630 g$745$13631 g$745$13632 g$745$13633 g$745$13634 g$745$13635 g$745$13636 g$745$13637) (vector (quote g$745$13507) g$745$13627 g$745$13628 g$745$13629 g$745$13630 g$745$13631 g$745$13632 g$745$13633 g$745$13634 g$745$13635 g$745$13636 g$745$13637))) (set! g$745$13511 (lambda (g$745$13639) (if (vector? g$745$13639) (if (= (vector-length g$745$13639) (+ (quote 1) (length (quote (id name version imp* vis* inv* subst env visit-state invoke-state visible?))))) (begin (quote #f) (eq? (vector-ref g$745$13639 (quote 0)) (quote g$745$13507))) (quote #f)) (quote #f)))) (set! g$745$13513 (lambda (g$745$13641) (if (g$745$13511 g$745$13641) (vector-ref g$745$13641 (quote 1)) (error (quote library-id) (quote #3="~s is not of type ~s") g$745$13641 (quote library))))) (set! g$745$13515 (lambda (g$745$13643) (if (g$745$13511 g$745$13643) (vector-ref g$745$13643 (quote 2)) (error (quote library-name) (quote #3#) g$745$13643 (quote library))))) (set! g$745$13517 (lambda (g$745$13645) (if (g$745$13511 g$745$13645) (vector-ref g$745$13645 (quote 3)) (error (quote library-version) (quote #3#) g$745$13645 (quote library))))) (set! g$745$13519 (lambda (g$745$13647) (if (g$745$13511 g$745$13647) (vector-ref g$745$13647 (quote 4)) (error (quote library-imp*) (quote #3#) g$745$13647 (quote library))))) (set! g$745$13521 (lambda (g$745$13649) (if (g$745$13511 g$745$13649) (vector-ref g$745$13649 (quote 5)) (error (quote library-vis*) (quote #3#) g$745$13649 (quote library))))) (set! g$745$13523 (lambda (g$745$13651) (if (g$745$13511 g$745$13651) (vector-ref g$745$13651 (quote 6)) (error (quote library-inv*) (quote #3#) g$745$13651 (quote library))))) (set! g$745$13525 (lambda (g$745$13653) (if (g$745$13511 g$745$13653) (vector-ref g$745$13653 (quote 7)) (error (quote library-subst) (quote #3#) g$745$13653 (quote library))))) (set! g$745$13527 (lambda (g$745$13655) (if (g$745$13511 g$745$13655) (vector-ref g$745$13655 (quote 8)) (error (quote library-env) (quote #3#) g$745$13655 (quote library))))) (set! g$745$13529 (lambda (g$745$13657) (if (g$745$13511 g$745$13657) (vector-ref g$745$13657 (quote 9)) (error (quote library-visit-state) (quote #3#) g$745$13657 (quote library))))) (set! g$745$13531 (lambda (g$745$13659) (if (g$745$13511 g$745$13659) (vector-ref g$745$13659 (quote 10)) (error (quote library-invoke-state) (quote #3#) g$745$13659 (quote library))))) (set! g$745$13533 (lambda (g$745$13661) (if (g$745$13511 g$745$13661) (vector-ref g$745$13661 (quote 11)) (error (quote library-visible?) (quote #3#) g$745$13661 (quote library))))) (set! g$745$13535 (lambda (g$745$13664 g$745$13665) (if (g$745$13511 g$745$13664) (vector-set! g$745$13664 (quote 1) g$745$13665) (error (quote set-library-id!) (quote #4="~s is not of type ~s") g$745$13664 (quote library))))) (set! g$745$13537 (lambda (g$745$13668 g$745$13669) (if (g$745$13511 g$745$13668) (vector-set! g$745$13668 (quote 2) g$745$13669) (error (quote set-library-name!) (quote #4#) g$745$13668 (quote library))))) (set! g$745$13539 (lambda (g$745$13672 g$745$13673) (if (g$745$13511 g$745$13672) (vector-set! g$745$13672 (quote 3) g$745$13673) (error (quote set-library-version!) (quote #4#) g$745$13672 (quote library))))) (set! g$745$13541 (lambda (g$745$13676 g$745$13677) (if (g$745$13511 g$745$13676) (vector-set! g$745$13676 (quote 4) g$745$13677) (error (quote set-library-imp*!) (quote #4#) g$745$13676 (quote library))))) (set! g$745$13543 (lambda (g$745$13680 g$745$13681) (if (g$745$13511 g$745$13680) (vector-set! g$745$13680 (quote 5) g$745$13681) (error (quote set-library-vis*!) (quote #4#) g$745$13680 (quote library))))) (set! g$745$13545 (lambda (g$745$13684 g$745$13685) (if (g$745$13511 g$745$13684) (vector-set! g$745$13684 (quote 6) g$745$13685) (error (quote set-library-inv*!) (quote #4#) g$745$13684 (quote library))))) (set! g$745$13547 (lambda (g$745$13688 g$745$13689) (if (g$745$13511 g$745$13688) (vector-set! g$745$13688 (quote 7) g$745$13689) (error (quote set-library-subst!) (quote #4#) g$745$13688 (quote library))))) (set! g$745$13549 (lambda (g$745$13692 g$745$13693) (if (g$745$13511 g$745$13692) (vector-set! g$745$13692 (quote 8) g$745$13693) (error (quote set-library-env!) (quote #4#) g$745$13692 (quote library))))) (set! g$745$13551 (lambda (g$745$13696 g$745$13697) (if (g$745$13511 g$745$13696) (vector-set! g$745$13696 (quote 9) g$745$13697) (error (quote set-library-visit-state!) (quote #4#) g$745$13696 (quote library))))) (set! g$745$13553 (lambda (g$745$13700 g$745$13701) (if (g$745$13511 g$745$13700) (vector-set! g$745$13700 (quote 10) g$745$13701) (error (quote set-library-invoke-state!) (quote #4#) g$745$13700 (quote library))))) (set! g$745$13555 (lambda (g$745$13704 g$745$13705) (if (g$745$13511 g$745$13704) (vector-set! g$745$13704 (quote 11) g$745$13705) (error (quote set-library-visible?!) (quote #4#) g$745$13704 (quote library))))) (set! g$745$13557 (lambda (g$745$13707) (if (null? g$745$13707) (quote ()) (error (quote find-dependencies) (quote "cannot handle deps yet"))))) (set! g$745$13559 (lambda (g$745$13709) (letrec ((g$745$13711 (lambda (g$745$13713) (if (null? g$745$13713) (quote #f) (if (g$745$13709 (car g$745$13713)) (car g$745$13713) (g$745$13711 (cdr g$745$13713))))))) (g$745$13711 ((g$745$13506)))))) (set! g$745$13561 (g$745$13361 (quote (".")) (lambda (g$745$13715) (if (if (list? g$745$13715) (begin (quote #f) (for-all string? g$745$13715)) (quote #f)) (map (lambda (g$745$13717) g$745$13717) g$745$13715) (error (quote library-path) (quote "not a list of strings") g$745$13715))))) (set! g$745$13563 (lambda (g$745$13719) (call-with-values (lambda () (open-string-output-port)) (lambda (g$745$13722 g$745$13723) ((lambda (g$745$13725) (begin (set! g$745$13725 (lambda (g$745$13741) (if (<= (quote 0) g$745$13741 (quote 9)) (display g$745$13741 g$745$13722) (display (integer->char (+ (char->integer (quote #5=#\A)) (- g$745$13741 (quote 10)))) g$745$13722)))) (begin (letrec ((g$745$13727 (lambda (g$745$13729) (if (null? g$745$13729) (display (quote ".ss") g$745$13722) (begin (display (quote "/") g$745$13722) (for-each (lambda (g$745$13731) (if ((lambda (g$745$13735) (if g$745$13735 g$745$13735 ((lambda (g$745$13737) (if g$745$13737 g$745$13737 ((lambda (g$745$13739) (if g$745$13739 g$745$13739 (begin (quote #f) (memv g$745$13731 (quote (#\- #\. #\_ #\~)))))) (char<=? (quote #\0) g$745$13731 (quote #\9))))) (char<=? (quote #5#) g$745$13731 (quote #\Z))))) (char<=? (quote #\a) g$745$13731 (quote #\z))) (display g$745$13731 g$745$13722) (begin (display (quote "%") g$745$13722) ((lambda (g$745$13733) (begin (g$745$13725 (quotient g$745$13733 (quote 16))) (g$745$13725 (remainder g$745$13733 (quote 16))))) (char->integer g$745$13731))))) (string->list (symbol->string (car g$745$13729)))) (g$745$13727 (cdr g$745$13729))))))) (g$745$13727 g$745$13719)) (g$745$13723)))) (quote #f)))))) (set! g$745$13565 (g$745$13361 (lambda (g$745$13743) ((lambda (g$745$13745) (letrec ((g$745$13747 (lambda (g$745$13749) (if (pair? g$745$13749) (begin (quote #f) ((lambda (g$745$13751) (if (file-exists? g$745$13751) g$745$13751 (g$745$13747 (cdr g$745$13749)))) (string-append (car g$745$13749) g$745$13745))) (quote #f))))) (g$745$13747 (g$745$13561)))) (g$745$13563 g$745$13743))) (lambda (g$745$13753) (if (procedure? g$745$13753) g$745$13753 (error (quote file-locator) (quote "not a procedure") g$745$13753))))) (set! g$745$13567 (g$745$13361 (lambda (g$745$13755) ((lambda (g$745$13757) (if (string? g$745$13757) (begin (quote #f) (with-input-from-file g$745$13757 read)) (quote #f))) ((g$745$13565) g$745$13755))) (lambda (g$745$13759) (if (procedure? g$745$13759) g$745$13759 (error (quote library-locator) (quote "not a procedure") g$745$13759))))) (set! g$745$13569 (g$745$13361 (lambda (g$745$13761) (error (quote library-expander) (quote "not initialized"))) (lambda (g$745$13763) (if (procedure? g$745$13763) g$745$13763 (error (quote library-expander) (quote "not a procedure") g$745$13763))))) (set! g$745$13571 (g$745$13361 (quote ()))) (set! g$745$13573 (lambda (g$745$13765) (begin (if (member g$745$13765 (g$745$13571)) (error (quote #f) (quote "circular attempt to import library was detected") g$745$13765) (void)) ((lambda (g$745$13770 g$745$13771) ((lambda (g$745$13773) (dynamic-wind g$745$13773 (lambda () ((lambda (g$745$13775) (begin (if g$745$13775 (void) (error (quote #f) (quote "cannot find library") g$745$13765)) ((g$745$13569) g$745$13775) ((lambda (g$745$13777) (if g$745$13777 g$745$13777 (begin (quote #f) (error (quote #f) (quote "handling external library did not yield the currect library") g$745$13765)))) (g$745$13559 (lambda (g$745$13779) (equal? (g$745$13515 g$745$13779) g$745$13765)))))) ((g$745$13567) g$745$13765))) g$745$13773)) (lambda () ((lambda (g$745$13781) (begin (g$745$13770 g$745$13771) (set! g$745$13771 g$745$13781))) (g$745$13770))))) g$745$13571 (cons g$745$13765 (g$745$13571)))))) (set! g$745$13575 (lambda (g$745$13783) ((lambda (g$745$13785) (if g$745$13785 g$745$13785 (begin (quote #f) (g$745$13573 g$745$13783)))) (g$745$13559 (lambda (g$745$13787) (equal? (g$745$13515 g$745$13787) g$745$13783)))))) (set! g$745$13577 (lambda (g$745$13789) (if (g$745$13559 (lambda (g$745$13791) (equal? (g$745$13515 g$745$13791) g$745$13789))) (begin (quote #f) (quote #t)) (quote #f)))) (set! g$745$13579 (lambda (g$745$13793) ((lambda (g$745$13795) ((lambda (g$745$13797) (if g$745$13797 g$745$13797 (begin (quote #f) (error (quote #f) (quote "cannot find library with required spec") g$745$13793)))) (g$745$13559 (lambda (g$745$13799) (eq? g$745$13795 (g$745$13513 g$745$13799)))))) (car g$745$13793)))) (set! g$745$13581 (make-eq-hashtable)) (set! g$745$13583 (lambda (g$745$13801) (begin ((lambda (g$745$13803) (for-each (lambda (g$745$13805) ((lambda (g$745$13808 g$745$13809) ((lambda (g$745$13811) (hashtable-set! g$745$13581 g$745$13808 g$745$13811)) ((lambda (g$745$13812) (if (memv g$745$13812 (quote (global))) (cons (quote global) (cons g$745$13801 (cdr g$745$13809))) (if (memv g$745$13812 (quote (global-macro))) (cons (quote global-macro) (cons g$745$13801 (cdr g$745$13809))) (if (memv g$745$13812 (quote (global-macro!))) (cons (quote global-macro!) (cons g$745$13801 (cdr g$745$13809))) g$745$13809)))) (car g$745$13809)))) (car g$745$13805) (cdr g$745$13805))) g$745$13803)) (g$745$13527 g$745$13801)) ((g$745$13506) g$745$13801)))) (set! g$745$13585 (lambda (g$745$13824 g$745$13825 g$745$13826 g$745$13827 g$745$13828 g$745$13829 g$745$13830 g$745$13831 g$745$13832 g$745$13833 g$745$13834) ((lambda (g$745$13838 g$745$13839 g$745$13840) (begin (if (if (symbol? g$745$13824) (if (list? g$745$13825) (begin (quote #f) (list? g$745$13826)) (quote #f)) (quote #f)) (void) (error (quote install-library) (quote "invalid spec with id/name/ver") g$745$13824 g$745$13825 g$745$13826)) (if (g$745$13577 g$745$13825) (error (quote install-library) (quote "library is already installed") g$745$13825) (void)) ((lambda (g$745$13842) (g$745$13583 g$745$13842)) (g$745$13509 g$745$13824 g$745$13825 g$745$13826 g$745$13838 g$745$13839 g$745$13840 g$745$13830 g$745$13831 g$745$13832 g$745$13833 g$745$13834)))) (map g$745$13579 g$745$13827) (map g$745$13579 g$745$13828) (map g$745$13579 g$745$13829)))) (set! g$745$13587 (lambda (g$745$13846 g$745$13847 g$745$13848) (g$745$13547 g$745$13846 (cons (cons g$745$13847 g$745$13848) (g$745$13525 g$745$13846))))) (set! g$745$13589 (lambda (g$745$13852 g$745$13853 g$745$13854) (begin (g$745$13549 g$745$13852 (cons (cons g$745$13853 g$745$13854) (g$745$13527 g$745$13852))) (hashtable-set! g$745$13581 g$745$13853 g$745$13854)))) (set! g$745$13591 (lambda (g$745$13856) (hashtable-ref g$745$13581 g$745$13856 (quote #f)))) (set! g$745$13593 (lambda (g$745$13858) ((lambda (g$745$13860) (if (procedure? g$745$13860) (begin (g$745$13553 g$745$13858 (lambda () (error (quote invoke) (quote "circularity detected") g$745$13858))) (for-each g$745$13593 (g$745$13523 g$745$13858)) (g$745$13553 g$745$13858 (lambda () (error (quote invoke) (quote "first invoke did not return") g$745$13858))) (g$745$13860) (g$745$13553 g$745$13858 (quote #t))) (void))) (g$745$13531 g$745$13858)))) (set! g$745$13595 (lambda (g$745$13862) ((lambda (g$745$13864) (if (procedure? g$745$13864) (begin (g$745$13551 g$745$13862 (lambda () (error (quote visit) (quote "circularity detected") g$745$13862))) (for-each g$745$13593 (g$745$13521 g$745$13862)) (g$745$13551 g$745$13862 (lambda () (error (quote invoke) (quote "first visit did not return") g$745$13862))) (g$745$13864) (g$745$13551 g$745$13862 (quote #t))) (void))) (g$745$13529 g$745$13862)))) (set! g$745$13597 (lambda (g$745$13866) (g$745$13593 (g$745$13579 g$745$13866)))) (set! g$745$13599 (lambda g$745$13876 ((lambda (g$745$13875) (if (= g$745$13875 (quote 1)) (apply (lambda (g$745$13868) (letrec ((g$745$13870 (lambda (g$745$13872) (if (null? g$745$13872) (quote ()) (if ((lambda (g$745$13874) (if g$745$13874 g$745$13874 (begin (quote #f) (g$745$13533 (car g$745$13872))))) g$745$13868) (cons (car g$745$13872) (g$745$13870 (cdr g$745$13872))) (g$745$13870 (cdr g$745$13872))))))) (g$745$13870 ((g$745$13506))))) g$745$13876) (if (= g$745$13875 (quote 0)) (apply (lambda () (g$745$13599 (quote #f))) g$745$13876) (error #1# (quote #2#))))) (length g$745$13876)))) (set! g$745$13601 (lambda (g$745$13878) (begin (if (g$745$13511 g$745$13878) (void) (error (quote library-spec) (quote "not a library") g$745$13878)) (list (g$745$13513 g$745$13878) (g$745$13515 g$745$13878) (g$745$13517 g$745$13878))))) (begin (set! g$745$13879 g$745$13601) (set! g$745$13880 g$745$13599) (set! g$745$13881 g$745$13597) (set! g$745$13882 g$745$13595) (set! g$745$13883 g$745$13593) (set! g$745$13884 g$745$13591) (set! g$745$13885 g$745$13589) (set! g$745$13886 g$745$13587) (set! g$745$13887 g$745$13585) (set! g$745$13888 g$745$13583) (set! g$745$13889 g$745$13581) (set! g$745$13890 g$745$13579) (set! g$745$13891 g$745$13577) (set! g$745$13892 g$745$13575) (set! g$745$13893 g$745$13573) (set! g$745$13894 g$745$13571) (set! g$745$13895 g$745$13569) (set! g$745$13896 g$745$13567) (set! g$745$13897 g$745$13565) (set! g$745$13898 g$745$13563) (set! g$745$13899 g$745$13561) (set! g$745$13900 g$745$13559) (set! g$745$13901 g$745$13557) (set! g$745$13902 g$745$13555) (set! g$745$13903 g$745$13553) (set! g$745$13904 g$745$13551) (set! g$745$13905 g$745$13549) (set! g$745$13906 g$745$13547) (set! g$745$13907 g$745$13545) (set! g$745$13908 g$745$13543) (set! g$745$13909 g$745$13541) (set! g$745$13910 g$745$13539) (set! g$745$13911 g$745$13537) (set! g$745$13912 g$745$13535) (set! g$745$13913 g$745$13533) (set! g$745$13914 g$745$13531) (set! g$745$13915 g$745$13529) (set! g$745$13916 g$745$13527) (set! g$745$13917 g$745$13525) (set! g$745$13918 g$745$13523) (set! g$745$13919 g$745$13521) (set! g$745$13920 g$745$13519) (set! g$745$13921 g$745$13517) (set! g$745$13922 g$745$13515) (set! g$745$13923 g$745$13513) (set! g$745$13924 g$745$13511) (set! g$745$13925 g$745$13509) (set! g$745$13926 g$745$13506) (set! g$745$13927 g$745$13504)))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f)))


(begin (define g$745$14242 . #0=((quote #f))) (define g$745$14234 . #0#) (define g$745$14233 . #0#) (define g$745$14232 . #0#) (define g$745$14228 . #0#) (define g$745$14227 . #0#) (define g$745$14226 . #0#) (define g$745$14225 . #0#) ((lambda (g$745$13930 g$745$14048 g$745$14050 g$745$14052 g$745$14116 g$745$14118 g$745$14120 g$745$14122) (begin (set! g$745$13930 (lambda (g$745$14124) (cons (quote define) (cons g$745$14124 (quote ((quote #f))))))) (set! g$745$14048 (lambda (g$745$14128 g$745$14129 g$745$14130) (list (quote lambda) g$745$14129 g$745$14130))) (set! g$745$14050 (lambda (g$745$14134 g$745$14135 g$745$14136) ((lambda (g$745$14138 g$745$14140 g$745$14142 g$745$14144) (begin (set! g$745$14138 (lambda (g$745$14186) (list (quote (primitive error)) (quote (quote apply)) (list (quote quote) (quote "invalid arg count"))))) (set! g$745$14140 (lambda (g$745$14172 g$745$14173 g$745$14174) (call-with-values (lambda () (letrec ((g$745$14176 (lambda (g$745$14179 g$745$14180) (if (pair? g$745$14179) (g$745$14176 (cdr g$745$14179) (+ g$745$14180 (quote 1))) (if (null? g$745$14179) (values g$745$14180 (quote =)) (values g$745$14180 (quote >=))))))) (g$745$14176 g$745$14174 (quote 0)))) (lambda (g$745$14183 g$745$14184) (list (list (quote primitive) g$745$14184) g$745$14173 (list (quote quote) g$745$14183)))))) (set! g$745$14142 (lambda (g$745$14165 g$745$14166 g$745$14167 g$745$14168) (list (quote (primitive apply)) (g$745$14048 g$745$14165 g$745$14167 g$745$14168) g$745$14166))) (set! g$745$14144 (lambda (g$745$14148 g$745$14149 g$745$14150) ((lambda (g$745$14153 g$745$14154) (list (quote lambda) g$745$14153 (g$745$14052 g$745$14148 (list g$745$14154) (list (list (quote (primitive length)) g$745$14153)) (letrec ((g$745$14156 (lambda (g$745$14159 g$745$14160) (if (null? g$745$14159) (g$745$14138 g$745$14148) (list (quote if) (g$745$14140 g$745$14148 g$745$14154 (car g$745$14159)) (g$745$14142 g$745$14148 g$745$14153 (car g$745$14159) (car g$745$14160)) (g$745$14156 (cdr g$745$14159) (cdr g$745$14160))))))) (g$745$14156 g$745$14135 g$745$14150))))) (gensym) (gensym)))) (if (= (length g$745$14136) (quote 1)) (g$745$14048 g$745$14134 (car g$745$14135) (car g$745$14136)) (g$745$14144 g$745$14134 g$745$14135 g$745$14136)))) (quote #f) (quote #f) (quote #f) (quote #f)))) (set! g$745$14052 (lambda (g$745$14191 g$745$14192 g$745$14193 g$745$14194) (cons (g$745$14048 g$745$14191 g$745$14192 g$745$14194) g$745$14193))) (set! g$745$14116 (lambda (g$745$14197 g$745$14198) (letrec ((g$745$14200 (lambda (g$745$14202) (if (null? (cdr g$745$14202)) (car g$745$14202) (if (equal? (car g$745$14202) (g$745$14118)) (g$745$14200 (cdr g$745$14202)) (cons (quote begin) g$745$14202)))))) (g$745$14200 g$745$14198)))) (set! g$745$14118 (lambda () (quote ((primitive void))))) (set! g$745$14120 (lambda (g$745$14207 g$745$14208 g$745$14209 g$745$14210) (if (null? g$745$14208) g$745$14210 (list (quote letrec) (map list g$745$14208 g$745$14209) g$745$14210)))) (set! g$745$14122 (lambda (g$745$14215 g$745$14216 g$745$14217 g$745$14218) (if (null? g$745$14216) g$745$14218 (g$745$14052 g$745$14215 g$745$14216 (map (lambda (g$745$14220) (list (quote quote) (quote #f))) g$745$14216) (g$745$14116 g$745$14215 (append (map (lambda (g$745$14223 g$745$14224) (list (quote set!) g$745$14223 g$745$14224)) g$745$14216 g$745$14217) (list g$745$14218))))))) (begin (set! g$745$14225 g$745$14122) (set! g$745$14226 g$745$14120) (set! g$745$14227 g$745$14118) (set! g$745$14228 g$745$14116) (set! g$745$14232 g$745$14052) (set! g$745$14233 g$745$14050) (set! g$745$14234 g$745$14048) (set! g$745$14242 g$745$13930)))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f)))


(begin (define g$745$24668 . #0=((quote #f))) (define g$745$24667 . #0#) (define g$745$24665 . #0#) (define g$745$24664 . #0#) (define g$745$24663 . #0#) (define g$745$24662 . #0#) (define g$745$24661 . #0#) (define g$745$24660 . #0#) (define g$745$24659 . #0#) (define g$745$24658 . #0#) (define g$745$24657 . #0#) (define g$745$24656 . #0#) (define g$745$24655 . #0#) (define g$745$24654 . #0#) (define g$745$24653 . #0#) (define g$745$24652 . #0#) (define g$745$24651 . #0#) (define g$745$24650 . #0#) (define g$745$24649 . #0#) (define g$745$24648 . #0#) (define g$745$24647 . #0#) (define g$745$24646 . #0#) (define g$745$24645 . #0#) (define g$745$24644 . #0#) (define g$745$24643 . #0#) (define g$745$24642 . #0#) (define g$745$24641 . #0#) (define g$745$24640 . #0#) (define g$745$24639 . #0#) (define g$745$24638 . #0#) (define g$745$24637 . #0#) (define g$745$24636 . #0#) (define g$745$24635 . #0#) (define g$745$24634 . #0#) (define g$745$24633 . #0#) (define g$745$24632 . #0#) (define g$745$24631 . #0#) (define g$745$24630 . #0#) (define g$745$24629 . #0#) (define g$745$24628 . #0#) (define g$745$24627 . #0#) (define g$745$24626 . #0#) (define g$745$24625 . #0#) (define g$745$24624 . #0#) (define g$745$24623 . #0#) (define g$745$24622 . #0#) (define g$745$24621 . #0#) (define g$745$24620 . #0#) (define g$745$24619 . #0#) (define g$745$24618 . #0#) (define g$745$24617 . #0#) (define g$745$24616 . #0#) (define g$745$24615 . #0#) (define g$745$24614 . #0#) (define g$745$24613 . #0#) (define g$745$24612 . #0#) (define g$745$24611 . #0#) (define g$745$24610 . #0#) (define g$745$24609 . #0#) (define g$745$24608 . #0#) (define g$745$24607 . #0#) (define g$745$24606 . #0#) (define g$745$24605 . #0#) (define g$745$24604 . #0#) (define g$745$24603 . #0#) (define g$745$24601 . #0#) (define g$745$24600 . #0#) (define g$745$24599 . #0#) (define g$745$24597 . #0#) (define g$745$24596 . #0#) (define g$745$24595 . #0#) (define g$745$24594 . #0#) (define g$745$24593 . #0#) (define g$745$24592 . #0#) (define g$745$24591 . #0#) (define g$745$24590 . #0#) (define g$745$24589 . #0#) (define g$745$24588 . #0#) (define g$745$24587 . #0#) (define g$745$24586 . #0#) (define g$745$24585 . #0#) (define g$745$24584 . #0#) (define g$745$24583 . #0#) (define g$745$24582 . #0#) (define g$745$24581 . #0#) (define g$745$24580 . #0#) (define g$745$24579 . #0#) (define g$745$24578 . #0#) (define g$745$24577 . #0#) (define g$745$24576 . #0#) (define g$745$24575 . #0#) (define g$745$24574 . #0#) (define g$745$24573 . #0#) (define g$745$24572 . #0#) (define g$745$24571 . #0#) (define g$745$24570 . #0#) (define g$745$24569 . #0#) (define g$745$24568 . #0#) (define g$745$24567 . #0#) (define g$745$24566 . #0#) (define g$745$24565 . #0#) (define g$745$24564 . #0#) (define g$745$24563 . #0#) (define g$745$24562 . #0#) (define g$745$24561 . #0#) (define g$745$24560 . #0#) (define g$745$24559 . #0#) (define g$745$24558 . #0#) (define g$745$24557 . #0#) (define g$745$24556 . #0#) (define g$745$24555 . #0#) (define g$745$24554 . #0#) (define g$745$24553 . #0#) (define g$745$24552 . #0#) (define g$745$24551 . #0#) (define g$745$24550 . #0#) (define g$745$24549 . #0#) (define g$745$24548 . #0#) (define g$745$24547 . #0#) (define g$745$24546 . #0#) (define g$745$24545 . #0#) (define g$745$24544 . #0#) (define g$745$24543 . #0#) (define g$745$24542 . #0#) (define g$745$24541 . #0#) (define g$745$24540 . #0#) (define g$745$24539 . #0#) (define g$745$24538 . #0#) (define g$745$24537 . #0#) (define g$745$24536 . #0#) (define g$745$24535 . #0#) (define g$745$24534 . #0#) (define g$745$24533 . #0#) (define g$745$24532 . #0#) (define g$745$24531 . #0#) (define g$745$24530 . #0#) (define g$745$24529 . #0#) (define g$745$24528 . #0#) (define g$745$24527 . #0#) (define g$745$24526 . #0#) (define g$745$24525 . #0#) (define g$745$24524 . #0#) (define g$745$24523 . #0#) (define g$745$24522 . #0#) (define g$745$24521 . #0#) (define g$745$24520 . #0#) (define g$745$24519 . #0#) (define g$745$24518 . #0#) (define g$745$24517 . #0#) (define g$745$24516 . #0#) (define g$745$24515 . #0#) (define g$745$24514 . #0#) (define g$745$24513 . #0#) (define g$745$24512 . #0#) (define g$745$24511 . #0#) (define g$745$24510 . #0#) (define g$745$24509 . #0#) (define g$745$24508 . #0#) (define g$745$24507 . #0#) (define g$745$24506 . #0#) (define g$745$24505 . #0#) (define g$745$24504 . #0#) (define g$745$24503 . #0#) (define g$745$24502 . #0#) (define g$745$24501 . #0#) (define g$745$24500 . #0#) (define g$745$24499 . #0#) (define g$745$24498 . #0#) (define g$745$24497 . #0#) (define g$745$24496 . #0#) (define g$745$24495 . #0#) (define g$745$24494 . #0#) (define g$745$24493 . #0#) (define g$745$24492 . #0#) (define g$745$24491 . #0#) (define g$745$24490 . #0#) (define g$745$24489 . #0#) (define g$745$24488 . #0#) (define g$745$24487 . #0#) (define g$745$24486 . #0#) (define g$745$24485 . #0#) (define g$745$24484 . #0#) (define g$745$24483 . #0#) (define g$745$24482 . #0#) (define g$745$24481 . #0#) (define g$745$24480 . #0#) (define g$745$24479 . #0#) (define g$745$24478 . #0#) (define g$745$24477 . #0#) ((lambda (g$745$14245 g$745$14247 g$745$14252 g$745$14254 g$745$14256 g$745$14258 g$745$14260 g$745$14263 g$745$14265 g$745$14267 g$745$14269 g$745$14271 g$745$14273 g$745$14275 g$745$14277 g$745$14279 g$745$14281 g$745$14283 g$745$14285 g$745$14287 g$745$14289 g$745$14291 g$745$14293 g$745$14296 g$745$14298 g$745$14300 g$745$14302 g$745$14304 g$745$14306 g$745$14308 g$745$14310 g$745$14312 g$745$14314 g$745$14316 g$745$14318 g$745$14320 g$745$14322 g$745$14324 g$745$14326 g$745$14328 g$745$14330 g$745$14332 g$745$14334 g$745$14336 g$745$14338 g$745$14340 g$745$14342 g$745$14344 g$745$14346 g$745$14348 g$745$14350 g$745$14352 g$745$14354 g$745$14356 g$745$14358 g$745$14360 g$745$14362 g$745$14364 g$745$14366 g$745$14368 g$745$14370 g$745$14372 g$745$14374 g$745$14376 g$745$14378 g$745$14405 g$745$14407 g$745$14409 g$745$14771 g$745$14773 g$745$14775 g$745$14777 g$745$14779 g$745$14781 g$745$14783 g$745$14785 g$745$14787 g$745$14789 g$745$14791 g$745$14793 g$745$14795 g$745$14797 g$745$14799 g$745$14801 g$745$14803 g$745$14805 g$745$14807 g$745$14809 g$745$14811 g$745$14813 g$745$14815 g$745$14817 g$745$14819 g$745$14821 g$745$14823 g$745$14825 g$745$14827 g$745$14829 g$745$14831 g$745$14833 g$745$14835 g$745$14837 g$745$14839 g$745$14841 g$745$14843 g$745$14845 g$745$14847 g$745$14849 g$745$14851 g$745$14853 g$745$14855 g$745$14857 g$745$14859 g$745$14861 g$745$14863 g$745$14865 g$745$14867 g$745$14869 g$745$14871 g$745$14873 g$745$14875 g$745$14877 g$745$14879 g$745$14881 g$745$14883 g$745$14885 g$745$14887 g$745$14889 g$745$14891 g$745$14893 g$745$14895 g$745$14897 g$745$14899 g$745$14901 g$745$14903 g$745$14905 g$745$14907 g$745$14909 g$745$14911 g$745$14913 g$745$14915 g$745$14917 g$745$14919 g$745$14921 g$745$14923 g$745$14925 g$745$14927 g$745$14929 g$745$14931 g$745$14933 g$745$14935 g$745$14937 g$745$14939 g$745$14941 g$745$14943 g$745$14945 g$745$14947 g$745$14949 g$745$14951 g$745$14953 g$745$14956 g$745$14958 g$745$14960 g$745$14962 g$745$14964 g$745$14966 g$745$14968 g$745$14970 g$745$14972 g$745$14974 g$745$14976 g$745$14978 g$745$14980 g$745$14982 g$745$14984 g$745$14986 g$745$14988 g$745$14990 g$745$14992 g$745$14994 g$745$14996 g$745$14998 g$745$15000 g$745$15002 g$745$15004 g$745$15006 g$745$15008 g$745$15010 g$745$15012) (begin (set! g$745$14245 (lambda (g$745$15015 g$745$15016) (if (memq g$745$15015 g$745$15016) g$745$15016 (cons g$745$15015 g$745$15016)))) (set! g$745$14247 (lambda (g$745$15019 g$745$15020) (if (null? g$745$15019) g$745$15020 (if (memq (car g$745$15019) g$745$15020) (g$745$14247 (cdr g$745$15019) g$745$15020) (cons (car g$745$15019) (g$745$14247 (cdr g$745$15019) g$745$15020)))))) (set! g$745$14252 (quote (top))) (set! g$745$14254 (lambda (g$745$15022) (memq (quote top) g$745$15022))) (set! g$745$14256 (lambda (g$745$15024) (if (symbol? g$745$15024) (gensym g$745$15024) (if (g$745$14298 g$745$15024) (g$745$14256 (g$745$14348 g$745$15024)) (error (quote gen-lexical) (quote "BUG: invalid arg") g$745$15024))))) (set! g$745$14258 (lambda (g$745$15026) (g$745$14256 g$745$15026))) (set! g$745$14260 (lambda (g$745$15028) (gensym))) (set! g$745$14263 (lambda (g$745$15033 g$745$15034 g$745$15035 g$745$15036) (vector (quote g$745$14261) g$745$15033 g$745$15034 g$745$15035 g$745$15036))) (set! g$745$14265 (lambda (g$745$15038) (if (vector? g$745$15038) (if (= (vector-length g$745$15038) (+ (quote 1) (length (quote (sym* mark** label* sealed/freq))))) (begin (quote #f) (eq? (vector-ref g$745$15038 (quote 0)) (quote g$745$14261))) (quote #f)) (quote #f)))) (set! g$745$14267 (lambda (g$745$15040) (if (g$745$14265 g$745$15040) (vector-ref g$745$15040 (quote 1)) (error (quote rib-sym*) (quote #1="~s is not of type ~s") g$745$15040 (quote rib))))) (set! g$745$14269 (lambda (g$745$15042) (if (g$745$14265 g$745$15042) (vector-ref g$745$15042 (quote 2)) (error (quote rib-mark**) (quote #1#) g$745$15042 (quote rib))))) (set! g$745$14271 (lambda (g$745$15044) (if (g$745$14265 g$745$15044) (vector-ref g$745$15044 (quote 3)) (error (quote rib-label*) (quote #1#) g$745$15044 (quote rib))))) (set! g$745$14273 (lambda (g$745$15046) (if (g$745$14265 g$745$15046) (vector-ref g$745$15046 (quote 4)) (error (quote rib-sealed/freq) (quote #1#) g$745$15046 (quote rib))))) (set! g$745$14275 (lambda (g$745$15049 g$745$15050) (if (g$745$14265 g$745$15049) (vector-set! g$745$15049 (quote 1) g$745$15050) (error (quote set-rib-sym*!) (quote #2="~s is not of type ~s") g$745$15049 (quote rib))))) (set! g$745$14277 (lambda (g$745$15053 g$745$15054) (if (g$745$14265 g$745$15053) (vector-set! g$745$15053 (quote 2) g$745$15054) (error (quote set-rib-mark**!) (quote #2#) g$745$15053 (quote rib))))) (set! g$745$14279 (lambda (g$745$15057 g$745$15058) (if (g$745$14265 g$745$15057) (vector-set! g$745$15057 (quote 3) g$745$15058) (error (quote set-rib-label*!) (quote #2#) g$745$15057 (quote rib))))) (set! g$745$14281 (lambda (g$745$15061 g$745$15062) (if (g$745$14265 g$745$15061) (vector-set! g$745$15061 (quote 4) g$745$15062) (error (quote set-rib-sealed/freq!) (quote #2#) g$745$15061 (quote rib))))) (set! g$745$14283 (lambda () (g$745$14263 (quote ()) (quote ()) (quote ()) (quote #f)))) (set! g$745$14285 (lambda (g$745$15066 g$745$15067 g$745$15068) ((lambda (g$745$15070) (begin (set! g$745$15070 (lambda (g$745$15081 g$745$15082 g$745$15083 g$745$15084) (if (pair? g$745$15083) (begin (quote #f) ((lambda (g$745$15086) (if g$745$15086 g$745$15086 (begin (quote #f) (g$745$15070 g$745$15081 g$745$15082 (cdr g$745$15083) (cdr g$745$15084))))) (if (eq? g$745$15081 (car g$745$15083)) (begin (quote #f) (g$745$14350 g$745$15082 (car g$745$15084))) (quote #f)))) (quote #f)))) (begin (if (g$745$14273 g$745$15066) (error (quote extend-rib!) (quote "rib is sealed") g$745$15066) (void)) ((lambda (g$745$15073 g$745$15074) ((lambda (g$745$15076) (begin (if (if (memq g$745$15073 (g$745$14267 g$745$15066)) (begin (quote #f) (g$745$15070 g$745$15073 g$745$15074 g$745$15076 (g$745$14269 g$745$15066))) (quote #f)) (error (quote expander) (quote "cannot redefine") (g$745$14364 g$745$15067 (quote ()))) (void)) (g$745$14275 g$745$15066 (cons g$745$15073 g$745$15076)) (g$745$14277 g$745$15066 (cons g$745$15074 (g$745$14269 g$745$15066))) (g$745$14279 g$745$15066 (cons g$745$15068 (g$745$14271 g$745$15066))))) (g$745$14267 g$745$15066))) (g$745$14348 g$745$15067) (g$745$14302 g$745$15067))))) (quote #f)))) (set! g$745$14287 (lambda (g$745$15088) ((lambda (g$745$15090) (if (null? g$745$15090) (void) ((lambda (g$745$15092) (begin (g$745$14275 g$745$15088 g$745$15092) (g$745$14277 g$745$15088 (list->vector (g$745$14269 g$745$15088))) (g$745$14279 g$745$15088 (list->vector (g$745$14271 g$745$15088))) (g$745$14281 g$745$15088 (make-vector (vector-length g$745$15092) (quote 0))))) (list->vector g$745$15090)))) (g$745$14267 g$745$15088)))) (set! g$745$14289 (lambda (g$745$15094) (if (g$745$14273 g$745$15094) (begin (g$745$14281 g$745$15094 (quote #f)) (g$745$14275 g$745$15094 (vector->list (g$745$14267 g$745$15094))) (g$745$14277 g$745$15094 (vector->list (g$745$14269 g$745$15094))) (g$745$14279 g$745$15094 (vector->list (g$745$14271 g$745$15094)))) (void)))) (set! g$745$14291 (lambda (g$745$15097 g$745$15098) ((lambda (g$745$15100) ((lambda (g$745$15102) ((lambda (g$745$15104) (begin (vector-set! g$745$15100 g$745$15104 (+ g$745$15102 (quote 1))) (if (= g$745$15104 g$745$15098) (void) ((lambda (g$745$15108 g$745$15109 g$745$15110) (begin ((lambda (g$745$15112) (begin (vector-set! g$745$15108 g$745$15098 (vector-ref g$745$15108 g$745$15104)) (vector-set! g$745$15108 g$745$15104 g$745$15112))) (vector-ref g$745$15108 g$745$15098)) ((lambda (g$745$15114) (begin (vector-set! g$745$15109 g$745$15098 (vector-ref g$745$15109 g$745$15104)) (vector-set! g$745$15109 g$745$15104 g$745$15114))) (vector-ref g$745$15109 g$745$15098)) ((lambda (g$745$15116) (begin (vector-set! g$745$15110 g$745$15098 (vector-ref g$745$15110 g$745$15104)) (vector-set! g$745$15110 g$745$15104 g$745$15116))) (vector-ref g$745$15110 g$745$15098)))) (g$745$14267 g$745$15097) (g$745$14269 g$745$15097) (g$745$14271 g$745$15097))))) (letrec ((g$745$15118 (lambda (g$745$15120) (if (zero? g$745$15120) (quote 0) ((lambda (g$745$15122) (if (= g$745$15102 (vector-ref g$745$15100 g$745$15122)) (g$745$15118 g$745$15122) g$745$15120)) (- g$745$15120 (quote 1))))))) (g$745$15118 g$745$15098)))) (vector-ref g$745$15100 g$745$15098))) (g$745$14273 g$745$15097)))) (set! g$745$14293 (lambda (g$745$15125 g$745$15126) (g$745$14263 (map g$745$14348 g$745$15125) (map g$745$14302 g$745$15125) g$745$15126 (quote #f)))) (set! g$745$14296 (lambda (g$745$15130 g$745$15131 g$745$15132) (vector (quote g$745$14294) g$745$15130 g$745$15131 g$745$15132))) (set! g$745$14298 (lambda (g$745$15134) (if (vector? g$745$15134) (if (= (vector-length g$745$15134) (+ (quote 1) (length (quote (expr mark* subst*))))) (begin (quote #f) (eq? (vector-ref g$745$15134 (quote 0)) (quote g$745$14294))) (quote #f)) (quote #f)))) (set! g$745$14300 (lambda (g$745$15136) (if (g$745$14298 g$745$15136) (vector-ref g$745$15136 (quote 1)) (error (quote stx-expr) (quote #1#) g$745$15136 (quote stx))))) (set! g$745$14302 (lambda (g$745$15138) (if (g$745$14298 g$745$15138) (vector-ref g$745$15138 (quote 2)) (error (quote stx-mark*) (quote #1#) g$745$15138 (quote stx))))) (set! g$745$14304 (lambda (g$745$15140) (if (g$745$14298 g$745$15140) (vector-ref g$745$15140 (quote 3)) (error (quote stx-subst*) (quote #1#) g$745$15140 (quote stx))))) (set! g$745$14306 (lambda (g$745$15143 g$745$15144) (if (g$745$14298 g$745$15143) (vector-set! g$745$15143 (quote 1) g$745$15144) (error (quote set-stx-expr!) (quote #2#) g$745$15143 (quote stx))))) (set! g$745$14308 (lambda (g$745$15147 g$745$15148) (if (g$745$14298 g$745$15147) (vector-set! g$745$15147 (quote 2) g$745$15148) (error (quote set-stx-mark*!) (quote #2#) g$745$15147 (quote stx))))) (set! g$745$14310 (lambda (g$745$15151 g$745$15152) (if (g$745$14298 g$745$15151) (vector-set! g$745$15151 (quote 3) g$745$15152) (error (quote set-stx-subst*!) (quote #2#) g$745$15151 (quote stx))))) (set! g$745$14312 (lambda (g$745$15155 g$745$15156) (g$745$14296 g$745$15156 (g$745$14302 g$745$15155) (g$745$14304 g$745$15155)))) (set! g$745$14314 (lambda () (string (quote #\m)))) (set! g$745$14316 (quote #f)) (set! g$745$14318 not) (set! g$745$14320 (lambda (g$745$15160 g$745$15161 g$745$15162) ((lambda (g$745$15164) (begin (set! g$745$15164 (lambda (g$745$15171 g$745$15172) (letrec ((g$745$15174 (lambda (g$745$15177 g$745$15178) (if (null? g$745$15178) (cdr g$745$15172) (cons g$745$15177 (g$745$15174 (car g$745$15178) (cdr g$745$15178))))))) (g$745$15174 (car g$745$15171) (cdr g$745$15171))))) ((lambda (g$745$15167 g$745$15168) (if (if (not (null? g$745$15160)) (if (not (null? g$745$15167)) (begin (quote #f) (g$745$14318 (car g$745$15167))) (quote #f)) (quote #f)) (values (g$745$15164 g$745$15160 g$745$15167) (g$745$15164 g$745$15161 g$745$15168)) (values (append g$745$15160 g$745$15167) (append g$745$15161 g$745$15168)))) (g$745$14302 g$745$15162) (g$745$14304 g$745$15162)))) (quote #f)))) (set! g$745$14322 (lambda (g$745$15182 g$745$15183 g$745$15184) (if (g$745$14298 g$745$15182) (call-with-values (lambda () (g$745$14320 g$745$15183 g$745$15184 g$745$15182)) (lambda (g$745$15187 g$745$15188) (g$745$14296 (g$745$14300 g$745$15182) g$745$15187 g$745$15188))) (g$745$14296 g$745$15182 g$745$15183 g$745$15184)))) (set! g$745$14324 (lambda (g$745$15191 g$745$15192) (g$745$14322 g$745$15192 (list g$745$15191) (quote (shift))))) (set! g$745$14326 (lambda (g$745$15195 g$745$15196) (g$745$14322 g$745$15196 (quote ()) (list g$745$15195)))) (set! g$745$14328 (lambda (g$745$15199 g$745$15200) (if (g$745$14298 g$745$15199) (g$745$14328 (g$745$14300 g$745$15199) g$745$15200) (g$745$15200 g$745$15199)))) (set! g$745$14330 (lambda (g$745$15202) (if (g$745$14298 g$745$15202) ((lambda (g$745$15206 g$745$15207 g$745$15208) (map (lambda (g$745$15210) (g$745$14322 g$745$15210 g$745$15207 g$745$15208)) g$745$15206)) (g$745$14330 (g$745$14300 g$745$15202)) (g$745$14302 g$745$15202) (g$745$14304 g$745$15202)) (if (vector? g$745$15202) (vector->list g$745$15202) (error (quote syntax-vector->list) (quote "not a syntax vector") g$745$15202))))) (set! g$745$14332 (lambda (g$745$15212) (g$745$14328 g$745$15212 pair?))) (set! g$745$14334 (lambda (g$745$15214) (g$745$14328 g$745$15214 vector?))) (set! g$745$14336 (lambda (g$745$15216) (g$745$14328 g$745$15216 null?))) (set! g$745$14338 (lambda (g$745$15218) ((lambda (g$745$15220) (if g$745$15220 g$745$15220 (begin (quote #f) (if (g$745$14332 g$745$15218) (begin (quote #f) (g$745$14338 (g$745$14344 g$745$15218))) (quote #f))))) (g$745$14336 g$745$15218)))) (set! g$745$14340 (lambda (g$745$15222) (if (g$745$14298 g$745$15222) (g$745$14322 (g$745$14340 (g$745$14300 g$745$15222)) (g$745$14302 g$745$15222) (g$745$14304 g$745$15222)) (if (pair? g$745$15222) (car g$745$15222) (error (quote syntax-car) (quote "not a pair") g$745$15222))))) (set! g$745$14342 (lambda (g$745$15224) (if (g$745$14332 g$745$15224) (cons (g$745$14340 g$745$15224) (g$745$14342 (g$745$14344 g$745$15224))) (if (g$745$14336 g$745$15224) (quote ()) (error (quote syntax->list) (quote "invalid argument") g$745$15224))))) (set! g$745$14344 (lambda (g$745$15226) (if (g$745$14298 g$745$15226) (g$745$14322 (g$745$14344 (g$745$14300 g$745$15226)) (g$745$14302 g$745$15226) (g$745$14304 g$745$15226)) (if (pair? g$745$15226) (cdr g$745$15226) (error (quote syntax-cdr) (quote "not a pair") g$745$15226))))) (set! g$745$14346 (lambda (g$745$15228) (g$745$14328 g$745$15228 symbol?))) (set! g$745$14348 (lambda (g$745$15230) (if (g$745$14298 g$745$15230) (g$745$14348 (g$745$14300 g$745$15230)) (if (symbol? g$745$15230) g$745$15230 (error (quote id->sym) (quote "not an id") g$745$15230))))) (set! g$745$14350 (lambda (g$745$15233 g$745$15234) ((lambda (g$745$15236) (if g$745$15236 g$745$15236 (begin (quote #f) (if (pair? g$745$15233) (if (pair? g$745$15234) (if (eq? (car g$745$15233) (car g$745$15234)) (begin (quote #f) (g$745$14350 (cdr g$745$15233) (cdr g$745$15234))) (quote #f)) (quote #f)) (quote #f))))) (if (null? g$745$15233) (begin (quote #f) (null? g$745$15234)) (quote #f))))) (set! g$745$14352 (lambda (g$745$15239 g$745$15240) (if (eq? (g$745$14348 g$745$15239) (g$745$14348 g$745$15240)) (begin (quote #f) (g$745$14350 (g$745$14302 g$745$15239) (g$745$14302 g$745$15240))) (quote #f)))) (set! g$745$14354 (lambda (g$745$15243 g$745$15244) ((lambda (g$745$15247 g$745$15248) (if ((lambda (g$745$15250) (if g$745$15250 g$745$15250 (begin (quote #f) g$745$15248))) g$745$15247) (eq? g$745$15247 g$745$15248) (eq? (g$745$14348 g$745$15243) (g$745$14348 g$745$15244)))) (g$745$14368 g$745$15243) (g$745$14368 g$745$15244)))) (set! g$745$14356 (lambda (g$745$15252) (if (for-all g$745$14346 g$745$15252) (begin (quote #f) (g$745$14358 g$745$15252)) (quote #f)))) (set! g$745$14358 (lambda (g$745$15254) ((lambda (g$745$15256) (if g$745$15256 g$745$15256 (begin (quote #f) (if (not (g$745$14360 (car g$745$15254) (cdr g$745$15254))) (begin (quote #f) (g$745$14358 (cdr g$745$15254))) (quote #f))))) (null? g$745$15254)))) (set! g$745$14360 (lambda (g$745$15259 g$745$15260) (if (pair? g$745$15260) (begin (quote #f) ((lambda (g$745$15262) (if g$745$15262 g$745$15262 (begin (quote #f) (g$745$14360 g$745$15259 (cdr g$745$15260))))) (g$745$14352 g$745$15259 (car g$745$15260)))) (quote #f)))) (set! g$745$14362 (lambda (g$745$15264) ((lambda (g$745$15266) (if g$745$15266 g$745$15266 ((lambda (g$745$15268) (if g$745$15268 g$745$15268 ((lambda (g$745$15270) (if g$745$15270 g$745$15270 (begin (quote #f) (boolean? g$745$15264)))) (char? g$745$15264)))) (string? g$745$15264)))) (number? g$745$15264)))) (set! g$745$14364 (lambda (g$745$15273 g$745$15274) (if (g$745$14254 g$745$15274) g$745$15273 (letrec ((g$745$15276 (lambda (g$745$15278) (if (g$745$14298 g$745$15278) (g$745$14364 (g$745$14300 g$745$15278) (g$745$14302 g$745$15278)) (if (pair? g$745$15278) ((lambda (g$745$15285 g$745$15286) (if (if (eq? g$745$15285 (car g$745$15278)) (begin (quote #f) (eq? g$745$15286 (cdr g$745$15278))) (quote #f)) g$745$15278 (cons g$745$15285 g$745$15286))) (g$745$15276 (car g$745$15278)) (g$745$15276 (cdr g$745$15278))) (if (vector? g$745$15278) ((lambda (g$745$15280) ((lambda (g$745$15282) (if (for-all eq? g$745$15280 g$745$15282) g$745$15278 (list->vector g$745$15282))) (map g$745$15276 g$745$15280))) (vector->list g$745$15278)) g$745$15278)))))) (g$745$15276 g$745$15273))))) (set! g$745$14366 (lambda (g$745$15288) (g$745$14364 g$745$15288 (quote ())))) (set! g$745$14368 (lambda (g$745$15290) ((lambda (g$745$15292) (letrec ((g$745$15294 (lambda (g$745$15297 g$745$15298) (if (null? g$745$15297) (g$745$15010 g$745$15292) (if (eq? (car g$745$15297) (quote shift)) (g$745$15294 (cdr g$745$15297) (cdr g$745$15298)) ((lambda (g$745$15300) (if (g$745$14273 g$745$15300) ((lambda (g$745$15310) (letrec ((g$745$15312 (lambda (g$745$15315 g$745$15316) (if (= g$745$15315 g$745$15316) (g$745$15294 (cdr g$745$15297) g$745$15298) (if (if (eq? (vector-ref g$745$15310 g$745$15315) g$745$15292) (begin (quote #f) (g$745$14350 g$745$15298 (vector-ref (g$745$14269 g$745$15300) g$745$15315))) (quote #f)) ((lambda (g$745$15318) (begin (g$745$14291 g$745$15300 g$745$15315) g$745$15318)) (vector-ref (g$745$14271 g$745$15300) g$745$15315)) (g$745$15312 (+ g$745$15315 (quote 1)) g$745$15316)))))) (g$745$15312 (quote 0) (vector-length g$745$15310)))) (g$745$14267 g$745$15300)) (letrec ((g$745$15302 (lambda (g$745$15306 g$745$15307 g$745$15308) (if (null? g$745$15306) (g$745$15294 (cdr g$745$15297) g$745$15298) (if (if (eq? (car g$745$15306) g$745$15292) (begin (quote #f) (g$745$14350 (car g$745$15307) g$745$15298)) (quote #f)) (car g$745$15308) (g$745$15302 (cdr g$745$15306) (cdr g$745$15307) (cdr g$745$15308))))))) (g$745$15302 (g$745$14267 g$745$15300) (g$745$14269 g$745$15300) (g$745$14271 g$745$15300))))) (car g$745$15297))))))) (g$745$15294 (g$745$14304 g$745$15290) (g$745$14302 g$745$15290)))) (g$745$14348 g$745$15290)))) (set! g$745$14370 (lambda (g$745$15321 g$745$15322) ((lambda (g$745$15324) (if g$745$15324 ((lambda (g$745$15328) (if (if (pair? g$745$15328) (begin (quote #f) (eq? (car g$745$15328) (quote $core-rtd))) (quote #f)) (cons (quote $rtd) (map g$745$14809 (cdr g$745$15328))) g$745$15328)) g$745$15324) ((lambda (g$745$15326) (if g$745$15326 (cdr g$745$15326) (quote (displaced-lexical . #f)))) (assq g$745$15321 g$745$15322)))) (g$745$13884 g$745$15321)))) (set! g$745$14372 cons) (set! g$745$14374 car) (set! g$745$14376 cdr) (set! g$745$14378 (lambda (g$745$15331 g$745$15332) (if (g$745$14346 g$745$15331) ((lambda (g$745$15345) ((lambda (g$745$15347) ((lambda (g$745$15349) ((lambda (g$745$15351) ((lambda () (begin (if g$745$15347 (void) (error (quote expander) (quote "unbound identifier") (g$745$14364 g$745$15331 (quote ())))) ((lambda (g$745$15352) (if (memv g$745$15352 (quote (lexical core-prim macro macro! global local-macro local-macro! global-macro global-macro! displaced-lexical syntax import $module $core-rtd))) (values g$745$15351 (g$745$14376 g$745$15349) g$745$15345) (values (quote other) (quote #f) (quote #f)))) g$745$15351))))) (g$745$14374 g$745$15349))) (g$745$14370 g$745$15347 g$745$15332))) (g$745$14368 g$745$15345))) g$745$15331) (if (g$745$14332 g$745$15331) ((lambda (g$745$15336) (if (g$745$14346 g$745$15336) ((lambda (g$745$15338) ((lambda (g$745$15340) ((lambda (g$745$15342) ((lambda () (begin (if g$745$15338 (void) (error (quote expander) (quote "unbound identifier") (g$745$14364 g$745$15331 (quote ())))) ((lambda (g$745$15343) (if (memv g$745$15343 (quote (define define-syntax core-macro begin macro macro! local-macro local-macro! global-macro global-macro! module set! let-syntax letrec-syntax import $core-rtd))) (values g$745$15342 (g$745$14376 g$745$15340) g$745$15336) (values (quote call) (quote #f) (quote #f)))) g$745$15342))))) (g$745$14374 g$745$15340))) (g$745$14370 g$745$15338 g$745$15332))) (g$745$14368 g$745$15336)) (values (quote call) (quote #f) (quote #f)))) (g$745$14340 g$745$15331)) ((lambda (g$745$15334) (if (g$745$14362 g$745$15334) (values (quote constant) g$745$15334 (quote #f)) (values (quote other) (quote #f) (quote #f)))) (g$745$14366 g$745$15331)))))) (set! g$745$14405 (lambda (g$745$15355 g$745$15356) (if (procedure? g$745$15355) (cons* (quote local-macro) g$745$15355 g$745$15356) (if (if (pair? g$745$15355) (if (eq? (car g$745$15355) (quote macro!)) (begin (quote #f) (procedure? (cdr g$745$15355))) (quote #f)) (quote #f)) (cons* (quote local-macro!) (cdr g$745$15355) g$745$15356) (if (if (pair? g$745$15355) (begin (quote #f) (eq? (car g$745$15355) (quote $rtd))) (quote #f)) g$745$15355 (error (quote expand) (quote "invalid transformer") g$745$15355)))))) (set! g$745$14407 (lambda (g$745$15358) (if (procedure? g$745$15358) (cons (quote macro!) g$745$15358) (error (quote make-variable-transformer) (quote "not a procedure") g$745$15358)))) (set! g$745$14409 (lambda (g$745$15360) (g$745$14405 (eval-core (g$745$13435 g$745$15360)) g$745$15360))) (set! g$745$14771 (lambda (g$745$15362) ((lambda (g$745$15364) ((lambda (g$745$15366) (if (if g$745$15366 (begin (quote #f) (apply (lambda (g$745$15417 g$745$15418 g$745$15419 g$745$15420) (g$745$14346 g$745$15417)) g$745$15366)) (quote #f)) (apply (lambda (g$745$15409 g$745$15410 g$745$15411 g$745$15412) (values g$745$15409 (cons (quote defun) (cons g$745$15410 (cons g$745$15411 g$745$15412))))) g$745$15366) ((lambda (g$745$15368) ((lambda (g$745$15370) (if (if g$745$15370 (begin (quote #f) (apply (lambda (g$745$15377 g$745$15378) (g$745$14346 g$745$15377)) g$745$15370)) (quote #f)) (apply (lambda (g$745$15373 g$745$15374) (values g$745$15373 (cons (quote expr) g$745$15374))) g$745$15370) (error (quote expander) (quote #3="invalid syntax") (g$745$14364 g$745$15368 (quote ()))))) ((lambda (g$745$15380) (if (g$745$14332 g$745$15380) (begin (quote #f) ((lambda (g$745$15382) (if g$745$15382 (begin (quote #f) ((lambda (g$745$15384) (if g$745$15384 (begin (quote #f) (append g$745$15382 g$745$15384)) (quote #f))) ((lambda (g$745$15386) (if (g$745$14332 g$745$15386) (begin (quote #f) ((lambda (g$745$15388) (if g$745$15388 (begin (quote #f) ((lambda (g$745$15390) (if g$745$15390 (begin (quote #f) (append g$745$15388 g$745$15390)) (quote #f))) ((lambda (g$745$15392) (if (g$745$14332 g$745$15392) (begin (quote #f) ((lambda (g$745$15394) (if g$745$15394 (begin (quote #f) ((lambda (g$745$15396) (if g$745$15396 (begin (quote #f) (append g$745$15394 g$745$15396)) (quote #f))) ((lambda (g$745$15398) (if (equal? (g$745$14366 g$745$15398) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$15392)))) (quote #f))) ((lambda (g$745$15400) (list g$745$15400)) (g$745$14340 g$745$15392)))) (quote #f))) (g$745$14344 g$745$15386)))) (quote #f))) ((lambda (g$745$15402) (list g$745$15402)) (g$745$14340 g$745$15386)))) (quote #f))) (g$745$14344 g$745$15380)))) (quote #f))) ((lambda (g$745$15404) (quote ())) (g$745$14340 g$745$15380)))) (quote #f))) g$745$15368))) g$745$15364))) ((lambda (g$745$15422) (if (g$745$14332 g$745$15422) (begin (quote #f) ((lambda (g$745$15424) (if g$745$15424 (begin (quote #f) ((lambda (g$745$15426) (if g$745$15426 (begin (quote #f) (append g$745$15424 g$745$15426)) (quote #f))) ((lambda (g$745$15428) (if (g$745$14332 g$745$15428) (begin (quote #f) ((lambda (g$745$15430) (if g$745$15430 (begin (quote #f) ((lambda (g$745$15432) (if g$745$15432 (begin (quote #f) (append g$745$15430 g$745$15432)) (quote #f))) ((lambda (g$745$15434) (if (g$745$14332 g$745$15434) (begin (quote #f) ((lambda (g$745$15436) (if g$745$15436 (begin (quote #f) ((lambda (g$745$15438) (if g$745$15438 (begin (quote #f) (append g$745$15436 g$745$15438)) (quote #f))) ((letrec ((g$745$15440 (lambda (g$745$15442) (if (g$745$14332 g$745$15442) ((lambda (g$745$15444) (if g$745$15444 (begin (quote #f) ((lambda (g$745$15446) (if g$745$15446 (begin (quote #f) (map cons g$745$15444 g$745$15446)) (quote #f))) (g$745$15440 (g$745$14344 g$745$15442)))) (quote #f))) ((lambda (g$745$15448) (list g$745$15448)) (g$745$14340 g$745$15442))) (if (g$745$14336 g$745$15442) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$15440) (g$745$14344 g$745$15434)))) (quote #f))) ((lambda (g$745$15450) (list g$745$15450)) (g$745$14340 g$745$15434)))) (quote #f))) (g$745$14344 g$745$15428)))) (quote #f))) ((lambda (g$745$15452) (if (g$745$14332 g$745$15452) (begin (quote #f) ((lambda (g$745$15454) (if g$745$15454 (begin (quote #f) ((lambda (g$745$15456) (if g$745$15456 (begin (quote #f) (append g$745$15454 g$745$15456)) (quote #f))) ((lambda (g$745$15458) (list g$745$15458)) (g$745$14344 g$745$15452)))) (quote #f))) ((lambda (g$745$15460) (list g$745$15460)) (g$745$14340 g$745$15452)))) (quote #f))) (g$745$14340 g$745$15428)))) (quote #f))) (g$745$14344 g$745$15422)))) (quote #f))) ((lambda (g$745$15462) (quote ())) (g$745$14340 g$745$15422)))) (quote #f))) g$745$15364))) g$745$15362))) (set! g$745$14773 (lambda (g$745$15464) ((lambda (g$745$15466) ((lambda (g$745$15468) (if (if g$745$15468 (begin (quote #f) (apply (lambda (g$745$15475 g$745$15476) (g$745$14346 g$745$15475)) g$745$15468)) (quote #f)) (apply (lambda (g$745$15471 g$745$15472) (values g$745$15471 g$745$15472)) g$745$15468) (error (quote expander) (quote #3#) (g$745$14364 g$745$15466 (quote ()))))) ((lambda (g$745$15478) (if (g$745$14332 g$745$15478) (begin (quote #f) ((lambda (g$745$15480) (if g$745$15480 (begin (quote #f) ((lambda (g$745$15482) (if g$745$15482 (begin (quote #f) (append g$745$15480 g$745$15482)) (quote #f))) ((lambda (g$745$15484) (if (g$745$14332 g$745$15484) (begin (quote #f) ((lambda (g$745$15486) (if g$745$15486 (begin (quote #f) ((lambda (g$745$15488) (if g$745$15488 (begin (quote #f) (append g$745$15486 g$745$15488)) (quote #f))) ((lambda (g$745$15490) (if (g$745$14332 g$745$15490) (begin (quote #f) ((lambda (g$745$15492) (if g$745$15492 (begin (quote #f) ((lambda (g$745$15494) (if g$745$15494 (begin (quote #f) (append g$745$15492 g$745$15494)) (quote #f))) ((lambda (g$745$15496) (if (equal? (g$745$14366 g$745$15496) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$15490)))) (quote #f))) ((lambda (g$745$15498) (list g$745$15498)) (g$745$14340 g$745$15490)))) (quote #f))) (g$745$14344 g$745$15484)))) (quote #f))) ((lambda (g$745$15500) (list g$745$15500)) (g$745$14340 g$745$15484)))) (quote #f))) (g$745$14344 g$745$15478)))) (quote #f))) ((lambda (g$745$15502) (quote ())) (g$745$14340 g$745$15478)))) (quote #f))) g$745$15466))) g$745$15464))) (set! g$745$14775 (lambda (g$745$15504) ((lambda (g$745$15506) ((lambda (g$745$15508) (if g$745$15508 ((lambda (g$745$15510) ((lambda (g$745$15513 g$745$15514) (g$745$14326 (g$745$14263 (list g$745$15513) (list g$745$14252) (list g$745$15514) (quote #f)) (g$745$14322 g$745$15504 g$745$14252 (quote ())))) (car g$745$15510) (cdr g$745$15510))) g$745$15508) (g$745$14322 g$745$15504 g$745$14252 (quote ())))) (assq g$745$15504 g$745$15506))) (g$745$13917 (g$745$13892 (quote (psyntax system $all))))))) (set! g$745$14777 (lambda (g$745$15518 g$745$15519 g$745$15520) (cons (cons* g$745$15518 (quote lexical) g$745$15519) g$745$15520))) (set! g$745$14779 (lambda (g$745$15524 g$745$15525 g$745$15526) (if (null? g$745$15524) g$745$15526 (g$745$14779 (cdr g$745$15524) (cdr g$745$15525) (g$745$14777 (car g$745$15524) (car g$745$15525) g$745$15526))))) (set! g$745$14781 (lambda (g$745$15530 g$745$15531 g$745$15532) ((lambda (g$745$15534) ((lambda (g$745$15536) (if (if g$745$15536 (begin (quote #f) (apply (lambda (g$745$15571 g$745$15572 g$745$15573 g$745$15574) (quote #t)) g$745$15536)) (quote #f)) (apply (lambda (g$745$15541 g$745$15542 g$745$15543 g$745$15544) ((lambda (g$745$15546) ((lambda (g$745$15549 g$745$15550) ((lambda (g$745$15554 g$745$15555 g$745$15556) (letrec ((g$745$15558 (lambda (g$745$15561 g$745$15562) (if (null? g$745$15561) (g$745$14909 (g$745$14326 (g$745$14293 g$745$15554 g$745$15555) (cons g$745$15543 g$745$15544)) (g$745$14779 g$745$15555 g$745$15556 g$745$15531) g$745$15532) (list (quote (primitive call-with-values)) (g$745$14234 (quote #f) (quote ()) (car g$745$15562)) (g$745$14234 (quote #f) (car g$745$15561) (g$745$15558 (cdr g$745$15561) (cdr g$745$15562)))))))) (g$745$15558 g$745$15549 g$745$15546))) (apply append g$745$15541) (apply append g$745$15550) (apply append g$745$15549))) (map (lambda (g$745$15564) (map g$745$14256 g$745$15564)) g$745$15541) (map (lambda (g$745$15566) (map g$745$14260 g$745$15566)) g$745$15541))) (g$745$14889 g$745$15542 g$745$15531 g$745$15532))) g$745$15536) (error (quote expander) (quote #3#) (g$745$14364 g$745$15534 (quote ()))))) ((lambda (g$745$15576) (if (g$745$14332 g$745$15576) (begin (quote #f) ((lambda (g$745$15578) (if g$745$15578 (begin (quote #f) ((lambda (g$745$15580) (if g$745$15580 (begin (quote #f) (append g$745$15578 g$745$15580)) (quote #f))) ((lambda (g$745$15582) (if (g$745$14332 g$745$15582) (begin (quote #f) ((lambda (g$745$15584) (if g$745$15584 (begin (quote #f) ((lambda (g$745$15586) (if g$745$15586 (begin (quote #f) (append g$745$15584 g$745$15586)) (quote #f))) ((lambda (g$745$15588) (if (g$745$14332 g$745$15588) (begin (quote #f) ((lambda (g$745$15590) (if g$745$15590 (begin (quote #f) ((lambda (g$745$15592) (if g$745$15592 (begin (quote #f) (append g$745$15590 g$745$15592)) (quote #f))) ((letrec ((g$745$15594 (lambda (g$745$15596) (if (g$745$14332 g$745$15596) ((lambda (g$745$15598) (if g$745$15598 (begin (quote #f) ((lambda (g$745$15600) (if g$745$15600 (begin (quote #f) (map cons g$745$15598 g$745$15600)) (quote #f))) (g$745$15594 (g$745$14344 g$745$15596)))) (quote #f))) ((lambda (g$745$15602) (list g$745$15602)) (g$745$14340 g$745$15596))) (if (g$745$14336 g$745$15596) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$15594) (g$745$14344 g$745$15588)))) (quote #f))) ((lambda (g$745$15604) (list g$745$15604)) (g$745$14340 g$745$15588)))) (quote #f))) (g$745$14344 g$745$15582)))) (quote #f))) ((letrec ((g$745$15606 (lambda (g$745$15608) (if (g$745$14332 g$745$15608) ((lambda (g$745$15610) (if g$745$15610 (begin (quote #f) ((lambda (g$745$15612) (if g$745$15612 (begin (quote #f) (map cons g$745$15610 g$745$15612)) (quote #f))) (g$745$15606 (g$745$14344 g$745$15608)))) (quote #f))) ((lambda (g$745$15614) (if (g$745$14332 g$745$15614) (begin (quote #f) ((lambda (g$745$15616) (if g$745$15616 (begin (quote #f) ((lambda (g$745$15618) (if g$745$15618 (begin (quote #f) (append g$745$15616 g$745$15618)) (quote #f))) ((lambda (g$745$15620) (if (g$745$14332 g$745$15620) (begin (quote #f) ((lambda (g$745$15622) (if g$745$15622 (begin (quote #f) ((lambda (g$745$15624) (if g$745$15624 (begin (quote #f) (append g$745$15622 g$745$15624)) (quote #f))) ((lambda (g$745$15626) (if (equal? (g$745$14366 g$745$15626) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$15620)))) (quote #f))) ((lambda (g$745$15628) (list g$745$15628)) (g$745$14340 g$745$15620)))) (quote #f))) (g$745$14344 g$745$15614)))) (quote #f))) ((letrec ((g$745$15630 (lambda (g$745$15632) (if (g$745$14332 g$745$15632) ((lambda (g$745$15634) (if g$745$15634 (begin (quote #f) ((lambda (g$745$15636) (if g$745$15636 (begin (quote #f) (map cons g$745$15634 g$745$15636)) (quote #f))) (g$745$15630 (g$745$14344 g$745$15632)))) (quote #f))) ((lambda (g$745$15638) (list g$745$15638)) (g$745$14340 g$745$15632))) (if (g$745$14336 g$745$15632) (list (begin (quote fml**) (quote ()))) (quote #f)))))) g$745$15630) (g$745$14340 g$745$15614)))) (quote #f))) (g$745$14340 g$745$15608))) (if (g$745$14336 g$745$15608) (list (begin (quote fml**) (quote ())) (begin (quote rhs*) (quote ()))) (quote #f)))))) g$745$15606) (g$745$14340 g$745$15582)))) (quote #f))) (g$745$14344 g$745$15576)))) (quote #f))) ((lambda (g$745$15640) (quote ())) (g$745$14340 g$745$15576)))) (quote #f))) g$745$15534))) g$745$15530))) (set! g$745$14783 (lambda (g$745$15645 g$745$15646 g$745$15647 g$745$15648) ((lambda (g$745$15650) ((lambda (g$745$15652) (if (if g$745$15652 (begin (quote #f) (apply (lambda (g$745$15679 g$745$15680 g$745$15681 g$745$15682) (quote #t)) g$745$15652)) (quote #f)) (apply (lambda (g$745$15657 g$745$15658 g$745$15659 g$745$15660) (if (not (g$745$14356 g$745$15657)) (error (quote expander) (quote "invalid identifiers") (g$745$14364 g$745$15645 (quote ()))) ((lambda (g$745$15663 g$745$15664) ((lambda (g$745$15667 g$745$15668) ((lambda (g$745$15671 g$745$15672) (g$745$15648 (quote #f) g$745$15663 g$745$15672 g$745$15671)) (g$745$14909 (g$745$14326 g$745$15667 (cons g$745$15659 g$745$15660)) g$745$15668 g$745$15647) (g$745$14889 (map (lambda (g$745$15674) (g$745$14326 g$745$15667 g$745$15674)) g$745$15658) g$745$15668 g$745$15647))) (g$745$14293 g$745$15657 g$745$15664) (g$745$14779 g$745$15664 g$745$15663 g$745$15646))) (map g$745$14256 g$745$15657) (map g$745$14260 g$745$15657)))) g$745$15652) (error (quote expander) (quote #3#) (g$745$14364 g$745$15650 (quote ()))))) ((lambda (g$745$15684) (if (g$745$14332 g$745$15684) (begin (quote #f) ((lambda (g$745$15686) (if g$745$15686 (begin (quote #f) ((lambda (g$745$15688) (if g$745$15688 (begin (quote #f) (append g$745$15686 g$745$15688)) (quote #f))) ((lambda (g$745$15690) (if (g$745$14332 g$745$15690) (begin (quote #f) ((lambda (g$745$15692) (if g$745$15692 (begin (quote #f) ((lambda (g$745$15694) (if g$745$15694 (begin (quote #f) (append g$745$15692 g$745$15694)) (quote #f))) ((lambda (g$745$15696) (if (g$745$14332 g$745$15696) (begin (quote #f) ((lambda (g$745$15698) (if g$745$15698 (begin (quote #f) ((lambda (g$745$15700) (if g$745$15700 (begin (quote #f) (append g$745$15698 g$745$15700)) (quote #f))) ((letrec ((g$745$15702 (lambda (g$745$15704) (if (g$745$14332 g$745$15704) ((lambda (g$745$15706) (if g$745$15706 (begin (quote #f) ((lambda (g$745$15708) (if g$745$15708 (begin (quote #f) (map cons g$745$15706 g$745$15708)) (quote #f))) (g$745$15702 (g$745$14344 g$745$15704)))) (quote #f))) ((lambda (g$745$15710) (list g$745$15710)) (g$745$14340 g$745$15704))) (if (g$745$14336 g$745$15704) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$15702) (g$745$14344 g$745$15696)))) (quote #f))) ((lambda (g$745$15712) (list g$745$15712)) (g$745$14340 g$745$15696)))) (quote #f))) (g$745$14344 g$745$15690)))) (quote #f))) ((letrec ((g$745$15714 (lambda (g$745$15716) (if (g$745$14332 g$745$15716) ((lambda (g$745$15718) (if g$745$15718 (begin (quote #f) ((lambda (g$745$15720) (if g$745$15720 (begin (quote #f) (map cons g$745$15718 g$745$15720)) (quote #f))) (g$745$15714 (g$745$14344 g$745$15716)))) (quote #f))) ((lambda (g$745$15722) (if (g$745$14332 g$745$15722) (begin (quote #f) ((lambda (g$745$15724) (if g$745$15724 (begin (quote #f) ((lambda (g$745$15726) (if g$745$15726 (begin (quote #f) (append g$745$15724 g$745$15726)) (quote #f))) ((lambda (g$745$15728) (if (g$745$14332 g$745$15728) (begin (quote #f) ((lambda (g$745$15730) (if g$745$15730 (begin (quote #f) ((lambda (g$745$15732) (if g$745$15732 (begin (quote #f) (append g$745$15730 g$745$15732)) (quote #f))) ((lambda (g$745$15734) (if (equal? (g$745$14366 g$745$15734) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$15728)))) (quote #f))) ((lambda (g$745$15736) (list g$745$15736)) (g$745$14340 g$745$15728)))) (quote #f))) (g$745$14344 g$745$15722)))) (quote #f))) ((lambda (g$745$15738) (list g$745$15738)) (g$745$14340 g$745$15722)))) (quote #f))) (g$745$14340 g$745$15716))) (if (g$745$14336 g$745$15716) (list (begin (quote lhs*) (quote ())) (begin (quote rhs*) (quote ()))) (quote #f)))))) g$745$15714) (g$745$14340 g$745$15690)))) (quote #f))) (g$745$14344 g$745$15684)))) (quote #f))) ((lambda (g$745$15740) (quote ())) (g$745$14340 g$745$15684)))) (quote #f))) g$745$15650))) g$745$15645))) (set! g$745$14785 (lambda (g$745$15744 g$745$15745 g$745$15746) (g$745$14783 g$745$15744 g$745$15745 g$745$15746 g$745$14226))) (set! g$745$14787 (lambda (g$745$15750 g$745$15751 g$745$15752) (g$745$14783 g$745$15750 g$745$15751 g$745$15752 g$745$14225))) (set! g$745$14789 (lambda (g$745$15756 g$745$15757 g$745$15758) ((lambda (g$745$15760) ((lambda (g$745$15762) (if (if g$745$15762 (begin (quote #f) (apply (lambda (g$745$15772) (g$745$14346 g$745$15772)) g$745$15762)) (quote #f)) (apply (lambda (g$745$15764) ((lambda (g$745$15766) ((lambda (g$745$15768) ((lambda (g$745$15770) ((lambda () (begin (if g$745$15766 (void) (error (quote expander) (quote "unbound identifier") (g$745$14364 g$745$15756 (quote ())))) (if (if (eq? g$745$15770 (quote $rtd)) (begin (quote #f) (not (list? (g$745$14376 g$745$15768)))) (quote #f)) (void) (error (quote expander) (quote "invalid type") (g$745$14364 g$745$15756 (quote ())))) (list (quote quote) (g$745$14376 g$745$15768)))))) (g$745$14374 g$745$15768))) (g$745$14370 g$745$15766 g$745$15757))) (g$745$14368 g$745$15764))) g$745$15762) (error (quote expander) (quote #3#) (g$745$14364 g$745$15760 (quote ()))))) ((lambda (g$745$15774) (if (g$745$14332 g$745$15774) (begin (quote #f) ((lambda (g$745$15776) (if g$745$15776 (begin (quote #f) ((lambda (g$745$15778) (if g$745$15778 (begin (quote #f) (append g$745$15776 g$745$15778)) (quote #f))) ((lambda (g$745$15780) (if (g$745$14332 g$745$15780) (begin (quote #f) ((lambda (g$745$15782) (if g$745$15782 (begin (quote #f) ((lambda (g$745$15784) (if g$745$15784 (begin (quote #f) (append g$745$15782 g$745$15784)) (quote #f))) ((lambda (g$745$15786) (if (equal? (g$745$14366 g$745$15786) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$15780)))) (quote #f))) ((lambda (g$745$15788) (list g$745$15788)) (g$745$14340 g$745$15780)))) (quote #f))) (g$745$14344 g$745$15774)))) (quote #f))) ((lambda (g$745$15790) (quote ())) (g$745$14340 g$745$15774)))) (quote #f))) g$745$15760))) g$745$15756))) (set! g$745$14791 (lambda (g$745$15794 g$745$15795 g$745$15796) ((lambda (g$745$15798) ((lambda (g$745$15800) (if (if g$745$15800 (begin (quote #f) (apply (lambda (g$745$15810) (g$745$14346 g$745$15810)) g$745$15800)) (quote #f)) (apply (lambda (g$745$15802) ((lambda (g$745$15804) ((lambda (g$745$15806) ((lambda (g$745$15808) ((lambda () (begin (if g$745$15804 (void) (error (quote expander) (quote "unbound identifier") (g$745$14364 g$745$15794 (quote ())))) (if (if (eq? g$745$15808 (quote $rtd)) (begin (quote #f) (list? (g$745$14376 g$745$15806))) (quote #f)) (void) (error (quote expander) (quote "invalid type") (g$745$14364 g$745$15794 (quote ())))) (g$745$14893 (car (g$745$14376 g$745$15806)) g$745$15795 g$745$15796))))) (g$745$14374 g$745$15806))) (g$745$14370 g$745$15804 g$745$15795))) (g$745$14368 g$745$15802))) g$745$15800) (error (quote expander) (quote #3#) (g$745$14364 g$745$15798 (quote ()))))) ((lambda (g$745$15812) (if (g$745$14332 g$745$15812) (begin (quote #f) ((lambda (g$745$15814) (if g$745$15814 (begin (quote #f) ((lambda (g$745$15816) (if g$745$15816 (begin (quote #f) (append g$745$15814 g$745$15816)) (quote #f))) ((lambda (g$745$15818) (if (g$745$14332 g$745$15818) (begin (quote #f) ((lambda (g$745$15820) (if g$745$15820 (begin (quote #f) ((lambda (g$745$15822) (if g$745$15822 (begin (quote #f) (append g$745$15820 g$745$15822)) (quote #f))) ((lambda (g$745$15824) (if (equal? (g$745$14366 g$745$15824) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$15818)))) (quote #f))) ((lambda (g$745$15826) (list g$745$15826)) (g$745$14340 g$745$15818)))) (quote #f))) (g$745$14344 g$745$15812)))) (quote #f))) ((lambda (g$745$15828) (quote ())) (g$745$14340 g$745$15812)))) (quote #f))) g$745$15798))) g$745$15794))) (set! g$745$14793 (lambda (g$745$15832 g$745$15833 g$745$15834) ((lambda (g$745$15836) ((lambda (g$745$15838) (if (if g$745$15838 (begin (quote #f) (apply (lambda (g$745$15848) (g$745$14346 g$745$15848)) g$745$15838)) (quote #f)) (apply (lambda (g$745$15840) ((lambda (g$745$15842) ((lambda (g$745$15844) ((lambda (g$745$15846) ((lambda () (begin (if g$745$15842 (void) (error (quote expander) (quote "unbound identifier") (g$745$14364 g$745$15832 (quote ())))) (if (if (eq? g$745$15846 (quote $rtd)) (begin (quote #f) (list? (g$745$14376 g$745$15844))) (quote #f)) (void) (error (quote expander) (quote "invalid type") (g$745$14364 g$745$15832 (quote ())))) (g$745$14893 (cadr (g$745$14376 g$745$15844)) g$745$15833 g$745$15834))))) (g$745$14374 g$745$15844))) (g$745$14370 g$745$15842 g$745$15833))) (g$745$14368 g$745$15840))) g$745$15838) (error (quote expander) (quote #3#) (g$745$14364 g$745$15836 (quote ()))))) ((lambda (g$745$15850) (if (g$745$14332 g$745$15850) (begin (quote #f) ((lambda (g$745$15852) (if g$745$15852 (begin (quote #f) ((lambda (g$745$15854) (if g$745$15854 (begin (quote #f) (append g$745$15852 g$745$15854)) (quote #f))) ((lambda (g$745$15856) (if (g$745$14332 g$745$15856) (begin (quote #f) ((lambda (g$745$15858) (if g$745$15858 (begin (quote #f) ((lambda (g$745$15860) (if g$745$15860 (begin (quote #f) (append g$745$15858 g$745$15860)) (quote #f))) ((lambda (g$745$15862) (if (equal? (g$745$14366 g$745$15862) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$15856)))) (quote #f))) ((lambda (g$745$15864) (list g$745$15864)) (g$745$14340 g$745$15856)))) (quote #f))) (g$745$14344 g$745$15850)))) (quote #f))) ((lambda (g$745$15866) (quote ())) (g$745$14340 g$745$15850)))) (quote #f))) g$745$15836))) g$745$15832))) (set! g$745$14795 (lambda (g$745$15870 g$745$15871 g$745$15872) ((lambda (g$745$15874) ((lambda (g$745$15876) (if (if g$745$15876 (begin (quote #f) (apply (lambda (g$745$15886 g$745$15887 g$745$15888) (quote #t)) g$745$15876)) (quote #f)) (apply (lambda (g$745$15880 g$745$15881 g$745$15882) (list (quote if) (g$745$14893 g$745$15880 g$745$15871 g$745$15872) (g$745$14228 (quote #f) (g$745$14889 (cons g$745$15881 g$745$15882) g$745$15871 g$745$15872)) (g$745$14227))) g$745$15876) (error (quote expander) (quote #3#) (g$745$14364 g$745$15874 (quote ()))))) ((lambda (g$745$15890) (if (g$745$14332 g$745$15890) (begin (quote #f) ((lambda (g$745$15892) (if g$745$15892 (begin (quote #f) ((lambda (g$745$15894) (if g$745$15894 (begin (quote #f) (append g$745$15892 g$745$15894)) (quote #f))) ((lambda (g$745$15896) (if (g$745$14332 g$745$15896) (begin (quote #f) ((lambda (g$745$15898) (if g$745$15898 (begin (quote #f) ((lambda (g$745$15900) (if g$745$15900 (begin (quote #f) (append g$745$15898 g$745$15900)) (quote #f))) ((lambda (g$745$15902) (if (g$745$14332 g$745$15902) (begin (quote #f) ((lambda (g$745$15904) (if g$745$15904 (begin (quote #f) ((lambda (g$745$15906) (if g$745$15906 (begin (quote #f) (append g$745$15904 g$745$15906)) (quote #f))) ((letrec ((g$745$15908 (lambda (g$745$15910) (if (g$745$14332 g$745$15910) ((lambda (g$745$15912) (if g$745$15912 (begin (quote #f) ((lambda (g$745$15914) (if g$745$15914 (begin (quote #f) (map cons g$745$15912 g$745$15914)) (quote #f))) (g$745$15908 (g$745$14344 g$745$15910)))) (quote #f))) ((lambda (g$745$15916) (list g$745$15916)) (g$745$14340 g$745$15910))) (if (g$745$14336 g$745$15910) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$15908) (g$745$14344 g$745$15902)))) (quote #f))) ((lambda (g$745$15918) (list g$745$15918)) (g$745$14340 g$745$15902)))) (quote #f))) (g$745$14344 g$745$15896)))) (quote #f))) ((lambda (g$745$15920) (list g$745$15920)) (g$745$14340 g$745$15896)))) (quote #f))) (g$745$14344 g$745$15890)))) (quote #f))) ((lambda (g$745$15922) (quote ())) (g$745$14340 g$745$15890)))) (quote #f))) g$745$15874))) g$745$15870))) (set! g$745$14797 (lambda (g$745$15926 g$745$15927 g$745$15928) ((lambda (g$745$15930) ((lambda (g$745$15932) (if (if g$745$15932 (begin (quote #f) (apply (lambda (g$745$15942 g$745$15943 g$745$15944) (quote #t)) g$745$15932)) (quote #f)) (apply (lambda (g$745$15936 g$745$15937 g$745$15938) (list (quote if) (g$745$14893 g$745$15936 g$745$15927 g$745$15928) (g$745$14227) (g$745$14228 (quote #f) (g$745$14889 (cons g$745$15937 g$745$15938) g$745$15927 g$745$15928)))) g$745$15932) (error (quote expander) (quote #3#) (g$745$14364 g$745$15930 (quote ()))))) ((lambda (g$745$15946) (if (g$745$14332 g$745$15946) (begin (quote #f) ((lambda (g$745$15948) (if g$745$15948 (begin (quote #f) ((lambda (g$745$15950) (if g$745$15950 (begin (quote #f) (append g$745$15948 g$745$15950)) (quote #f))) ((lambda (g$745$15952) (if (g$745$14332 g$745$15952) (begin (quote #f) ((lambda (g$745$15954) (if g$745$15954 (begin (quote #f) ((lambda (g$745$15956) (if g$745$15956 (begin (quote #f) (append g$745$15954 g$745$15956)) (quote #f))) ((lambda (g$745$15958) (if (g$745$14332 g$745$15958) (begin (quote #f) ((lambda (g$745$15960) (if g$745$15960 (begin (quote #f) ((lambda (g$745$15962) (if g$745$15962 (begin (quote #f) (append g$745$15960 g$745$15962)) (quote #f))) ((letrec ((g$745$15964 (lambda (g$745$15966) (if (g$745$14332 g$745$15966) ((lambda (g$745$15968) (if g$745$15968 (begin (quote #f) ((lambda (g$745$15970) (if g$745$15970 (begin (quote #f) (map cons g$745$15968 g$745$15970)) (quote #f))) (g$745$15964 (g$745$14344 g$745$15966)))) (quote #f))) ((lambda (g$745$15972) (list g$745$15972)) (g$745$14340 g$745$15966))) (if (g$745$14336 g$745$15966) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$15964) (g$745$14344 g$745$15958)))) (quote #f))) ((lambda (g$745$15974) (list g$745$15974)) (g$745$14340 g$745$15958)))) (quote #f))) (g$745$14344 g$745$15952)))) (quote #f))) ((lambda (g$745$15976) (list g$745$15976)) (g$745$14340 g$745$15952)))) (quote #f))) (g$745$14344 g$745$15946)))) (quote #f))) ((lambda (g$745$15978) (quote ())) (g$745$14340 g$745$15946)))) (quote #f))) g$745$15930))) g$745$15926))) (set! g$745$14799 (lambda (g$745$15982 g$745$15983 g$745$15984) ((lambda (g$745$15986) ((lambda (g$745$15988) (if (if g$745$15988 (begin (quote #f) (apply (lambda (g$745$16036 g$745$16037 g$745$16038) (quote #t)) g$745$15988)) (quote #f)) (apply (lambda (g$745$16030 g$745$16031 g$745$16032) (list (quote if) (g$745$14893 g$745$16030 g$745$15983 g$745$15984) (g$745$14893 g$745$16031 g$745$15983 g$745$15984) (g$745$14893 g$745$16032 g$745$15983 g$745$15984))) g$745$15988) ((lambda (g$745$15990) ((lambda (g$745$15992) (if (if g$745$15992 (begin (quote #f) (apply (lambda (g$745$15999 g$745$16000) (quote #t)) g$745$15992)) (quote #f)) (apply (lambda (g$745$15995 g$745$15996) (list (quote if) (g$745$14893 g$745$15995 g$745$15983 g$745$15984) (g$745$14893 g$745$15996 g$745$15983 g$745$15984) (g$745$14227))) g$745$15992) (error (quote expander) (quote #3#) (g$745$14364 g$745$15990 (quote ()))))) ((lambda (g$745$16002) (if (g$745$14332 g$745$16002) (begin (quote #f) ((lambda (g$745$16004) (if g$745$16004 (begin (quote #f) ((lambda (g$745$16006) (if g$745$16006 (begin (quote #f) (append g$745$16004 g$745$16006)) (quote #f))) ((lambda (g$745$16008) (if (g$745$14332 g$745$16008) (begin (quote #f) ((lambda (g$745$16010) (if g$745$16010 (begin (quote #f) ((lambda (g$745$16012) (if g$745$16012 (begin (quote #f) (append g$745$16010 g$745$16012)) (quote #f))) ((lambda (g$745$16014) (if (g$745$14332 g$745$16014) (begin (quote #f) ((lambda (g$745$16016) (if g$745$16016 (begin (quote #f) ((lambda (g$745$16018) (if g$745$16018 (begin (quote #f) (append g$745$16016 g$745$16018)) (quote #f))) ((lambda (g$745$16020) (if (equal? (g$745$14366 g$745$16020) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$16014)))) (quote #f))) ((lambda (g$745$16022) (list g$745$16022)) (g$745$14340 g$745$16014)))) (quote #f))) (g$745$14344 g$745$16008)))) (quote #f))) ((lambda (g$745$16024) (list g$745$16024)) (g$745$14340 g$745$16008)))) (quote #f))) (g$745$14344 g$745$16002)))) (quote #f))) ((lambda (g$745$16026) (quote ())) (g$745$14340 g$745$16002)))) (quote #f))) g$745$15990))) g$745$15986))) ((lambda (g$745$16040) (if (g$745$14332 g$745$16040) (begin (quote #f) ((lambda (g$745$16042) (if g$745$16042 (begin (quote #f) ((lambda (g$745$16044) (if g$745$16044 (begin (quote #f) (append g$745$16042 g$745$16044)) (quote #f))) ((lambda (g$745$16046) (if (g$745$14332 g$745$16046) (begin (quote #f) ((lambda (g$745$16048) (if g$745$16048 (begin (quote #f) ((lambda (g$745$16050) (if g$745$16050 (begin (quote #f) (append g$745$16048 g$745$16050)) (quote #f))) ((lambda (g$745$16052) (if (g$745$14332 g$745$16052) (begin (quote #f) ((lambda (g$745$16054) (if g$745$16054 (begin (quote #f) ((lambda (g$745$16056) (if g$745$16056 (begin (quote #f) (append g$745$16054 g$745$16056)) (quote #f))) ((lambda (g$745$16058) (if (g$745$14332 g$745$16058) (begin (quote #f) ((lambda (g$745$16060) (if g$745$16060 (begin (quote #f) ((lambda (g$745$16062) (if g$745$16062 (begin (quote #f) (append g$745$16060 g$745$16062)) (quote #f))) ((lambda (g$745$16064) (if (equal? (g$745$14366 g$745$16064) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$16058)))) (quote #f))) ((lambda (g$745$16066) (list g$745$16066)) (g$745$14340 g$745$16058)))) (quote #f))) (g$745$14344 g$745$16052)))) (quote #f))) ((lambda (g$745$16068) (list g$745$16068)) (g$745$14340 g$745$16052)))) (quote #f))) (g$745$14344 g$745$16046)))) (quote #f))) ((lambda (g$745$16070) (list g$745$16070)) (g$745$14340 g$745$16046)))) (quote #f))) (g$745$14344 g$745$16040)))) (quote #f))) ((lambda (g$745$16072) (quote ())) (g$745$14340 g$745$16040)))) (quote #f))) g$745$15986))) g$745$15982))) (set! g$745$14801 (lambda (g$745$16076 g$745$16077 g$745$16078) ((lambda (g$745$16080 g$745$16082) (begin (set! g$745$16080 (lambda (g$745$16276 g$745$16277 g$745$16278) ((lambda (g$745$16280) ((lambda (g$745$16282) (if (if g$745$16282 (begin (quote #f) (apply (lambda (g$745$16302 g$745$16303 g$745$16304) (quote #t)) g$745$16282)) (quote #f)) (apply (lambda (g$745$16296 g$745$16297 g$745$16298) (list (quote if) (list (quote (primitive memv)) g$745$16276 (list (quote quote) (g$745$14366 g$745$16296))) (g$745$14228 (quote #f) (g$745$14889 (cons g$745$16297 g$745$16298) g$745$16077 g$745$16078)) g$745$16278)) g$745$16282) ((lambda (g$745$16284) ((lambda (g$745$16286) (if (if g$745$16286 (begin (quote #f) (apply (lambda (g$745$16290) (quote #t)) g$745$16286)) (quote #f)) (apply (lambda (g$745$16288) (error (quote expander) (quote #4="invalid syntax") (g$745$14366 g$745$16076))) g$745$16286) (error (quote expander) (quote #3#) (g$745$14364 g$745$16284 (quote ()))))) ((lambda (g$745$16292) (list g$745$16292)) g$745$16284))) g$745$16280))) ((lambda (g$745$16306) (if (g$745$14332 g$745$16306) (begin (quote #f) ((lambda (g$745$16308) (if g$745$16308 (begin (quote #f) ((lambda (g$745$16310) (if g$745$16310 (begin (quote #f) (append g$745$16308 g$745$16310)) (quote #f))) ((lambda (g$745$16312) (if (g$745$14332 g$745$16312) (begin (quote #f) ((lambda (g$745$16314) (if g$745$16314 (begin (quote #f) ((lambda (g$745$16316) (if g$745$16316 (begin (quote #f) (append g$745$16314 g$745$16316)) (quote #f))) ((letrec ((g$745$16318 (lambda (g$745$16320) (if (g$745$14332 g$745$16320) ((lambda (g$745$16322) (if g$745$16322 (begin (quote #f) ((lambda (g$745$16324) (if g$745$16324 (begin (quote #f) (map cons g$745$16322 g$745$16324)) (quote #f))) (g$745$16318 (g$745$14344 g$745$16320)))) (quote #f))) ((lambda (g$745$16326) (list g$745$16326)) (g$745$14340 g$745$16320))) (if (g$745$14336 g$745$16320) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$16318) (g$745$14344 g$745$16312)))) (quote #f))) ((lambda (g$745$16328) (list g$745$16328)) (g$745$14340 g$745$16312)))) (quote #f))) (g$745$14344 g$745$16306)))) (quote #f))) ((letrec ((g$745$16330 (lambda (g$745$16332) (if (g$745$14332 g$745$16332) ((lambda (g$745$16334) (if g$745$16334 (begin (quote #f) ((lambda (g$745$16336) (if g$745$16336 (begin (quote #f) (map cons g$745$16334 g$745$16336)) (quote #f))) (g$745$16330 (g$745$14344 g$745$16332)))) (quote #f))) ((lambda (g$745$16338) (list g$745$16338)) (g$745$14340 g$745$16332))) (if (g$745$14336 g$745$16332) (list (begin (quote d*) (quote ()))) (quote #f)))))) g$745$16330) (g$745$14340 g$745$16306)))) (quote #f))) g$745$16280))) g$745$16277))) (set! g$745$16082 (lambda (g$745$16169 g$745$16170) ((lambda (g$745$16172) ((lambda (g$745$16174) (if (if g$745$16174 (begin (quote #f) (apply (lambda (g$745$16236 g$745$16237 g$745$16238) (quote #t)) g$745$16174)) (quote #f)) (apply (lambda (g$745$16230 g$745$16231 g$745$16232) (g$745$16080 g$745$16169 g$745$16170 (g$745$14227))) g$745$16174) ((lambda (g$745$16176) ((lambda (g$745$16178) (if (if g$745$16178 (begin (quote #f) (apply (lambda (g$745$16198 g$745$16199 g$745$16200) (quote #t)) g$745$16178)) (quote #f)) (apply (lambda (g$745$16192 g$745$16193 g$745$16194) (if (if (g$745$14346 g$745$16192) (begin (quote #f) (g$745$14354 g$745$16192 (g$745$14775 (quote else)))) (quote #f)) (g$745$14228 (quote #f) (g$745$14889 (cons g$745$16193 g$745$16194) g$745$16077 g$745$16078)) (error (quote expander) (quote #4#) (g$745$14366 g$745$16076)))) g$745$16178) ((lambda (g$745$16180) ((lambda (g$745$16182) (if (if g$745$16182 (begin (quote #f) (apply (lambda (g$745$16186) (quote #t)) g$745$16182)) (quote #f)) (apply (lambda (g$745$16184) (error (quote expander) (quote #4#) (g$745$14366 g$745$16076))) g$745$16182) (error (quote expander) (quote #3#) (g$745$14364 g$745$16180 (quote ()))))) ((lambda (g$745$16188) (list g$745$16188)) g$745$16180))) g$745$16176))) ((lambda (g$745$16202) (if (g$745$14332 g$745$16202) (begin (quote #f) ((lambda (g$745$16204) (if g$745$16204 (begin (quote #f) ((lambda (g$745$16206) (if g$745$16206 (begin (quote #f) (append g$745$16204 g$745$16206)) (quote #f))) ((lambda (g$745$16208) (if (g$745$14332 g$745$16208) (begin (quote #f) ((lambda (g$745$16210) (if g$745$16210 (begin (quote #f) ((lambda (g$745$16212) (if g$745$16212 (begin (quote #f) (append g$745$16210 g$745$16212)) (quote #f))) ((letrec ((g$745$16214 (lambda (g$745$16216) (if (g$745$14332 g$745$16216) ((lambda (g$745$16218) (if g$745$16218 (begin (quote #f) ((lambda (g$745$16220) (if g$745$16220 (begin (quote #f) (map cons g$745$16218 g$745$16220)) (quote #f))) (g$745$16214 (g$745$14344 g$745$16216)))) (quote #f))) ((lambda (g$745$16222) (list g$745$16222)) (g$745$14340 g$745$16216))) (if (g$745$14336 g$745$16216) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$16214) (g$745$14344 g$745$16208)))) (quote #f))) ((lambda (g$745$16224) (list g$745$16224)) (g$745$14340 g$745$16208)))) (quote #f))) (g$745$14344 g$745$16202)))) (quote #f))) ((lambda (g$745$16226) (list g$745$16226)) (g$745$14340 g$745$16202)))) (quote #f))) g$745$16176))) g$745$16172))) ((lambda (g$745$16240) (if (g$745$14332 g$745$16240) (begin (quote #f) ((lambda (g$745$16242) (if g$745$16242 (begin (quote #f) ((lambda (g$745$16244) (if g$745$16244 (begin (quote #f) (append g$745$16242 g$745$16244)) (quote #f))) ((lambda (g$745$16246) (if (g$745$14332 g$745$16246) (begin (quote #f) ((lambda (g$745$16248) (if g$745$16248 (begin (quote #f) ((lambda (g$745$16250) (if g$745$16250 (begin (quote #f) (append g$745$16248 g$745$16250)) (quote #f))) ((letrec ((g$745$16252 (lambda (g$745$16254) (if (g$745$14332 g$745$16254) ((lambda (g$745$16256) (if g$745$16256 (begin (quote #f) ((lambda (g$745$16258) (if g$745$16258 (begin (quote #f) (map cons g$745$16256 g$745$16258)) (quote #f))) (g$745$16252 (g$745$14344 g$745$16254)))) (quote #f))) ((lambda (g$745$16260) (list g$745$16260)) (g$745$14340 g$745$16254))) (if (g$745$14336 g$745$16254) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$16252) (g$745$14344 g$745$16246)))) (quote #f))) ((lambda (g$745$16262) (list g$745$16262)) (g$745$14340 g$745$16246)))) (quote #f))) (g$745$14344 g$745$16240)))) (quote #f))) ((letrec ((g$745$16264 (lambda (g$745$16266) (if (g$745$14332 g$745$16266) ((lambda (g$745$16268) (if g$745$16268 (begin (quote #f) ((lambda (g$745$16270) (if g$745$16270 (begin (quote #f) (map cons g$745$16268 g$745$16270)) (quote #f))) (g$745$16264 (g$745$14344 g$745$16266)))) (quote #f))) ((lambda (g$745$16272) (list g$745$16272)) (g$745$14340 g$745$16266))) (if (g$745$14336 g$745$16266) (list (begin (quote d*) (quote ()))) (quote #f)))))) g$745$16264) (g$745$14340 g$745$16240)))) (quote #f))) g$745$16172))) g$745$16170))) ((lambda (g$745$16084) ((lambda (g$745$16086) (if (if g$745$16086 (begin (quote #f) (apply (lambda (g$745$16148) (quote #t)) g$745$16086)) (quote #f)) (apply (lambda (g$745$16146) (g$745$14228 (quote #f) (list (g$745$14893 g$745$16146 g$745$16077 g$745$16078) (g$745$14227)))) g$745$16086) ((lambda (g$745$16088) ((lambda (g$745$16090) (if (if g$745$16090 (begin (quote #f) (apply (lambda (g$745$16108 g$745$16109 g$745$16110) (quote #t)) g$745$16090)) (quote #f)) (apply (lambda (g$745$16094 g$745$16095 g$745$16096) ((lambda (g$745$16098) (g$745$14232 (quote #f) (list g$745$16098) (list (g$745$14893 g$745$16094 g$745$16077 g$745$16078)) (letrec ((g$745$16100 (lambda (g$745$16103 g$745$16104) (if (null? g$745$16104) (g$745$16082 g$745$16098 g$745$16103) (g$745$16080 g$745$16098 g$745$16103 (g$745$16100 (car g$745$16104) (cdr g$745$16104))))))) (g$745$16100 g$745$16095 g$745$16096)))) (g$745$14256 (quote t)))) g$745$16090) (error (quote expander) (quote #3#) (g$745$14364 g$745$16088 (quote ()))))) ((lambda (g$745$16112) (if (g$745$14332 g$745$16112) (begin (quote #f) ((lambda (g$745$16114) (if g$745$16114 (begin (quote #f) ((lambda (g$745$16116) (if g$745$16116 (begin (quote #f) (append g$745$16114 g$745$16116)) (quote #f))) ((lambda (g$745$16118) (if (g$745$14332 g$745$16118) (begin (quote #f) ((lambda (g$745$16120) (if g$745$16120 (begin (quote #f) ((lambda (g$745$16122) (if g$745$16122 (begin (quote #f) (append g$745$16120 g$745$16122)) (quote #f))) ((lambda (g$745$16124) (if (g$745$14332 g$745$16124) (begin (quote #f) ((lambda (g$745$16126) (if g$745$16126 (begin (quote #f) ((lambda (g$745$16128) (if g$745$16128 (begin (quote #f) (append g$745$16126 g$745$16128)) (quote #f))) ((letrec ((g$745$16130 (lambda (g$745$16132) (if (g$745$14332 g$745$16132) ((lambda (g$745$16134) (if g$745$16134 (begin (quote #f) ((lambda (g$745$16136) (if g$745$16136 (begin (quote #f) (map cons g$745$16134 g$745$16136)) (quote #f))) (g$745$16130 (g$745$14344 g$745$16132)))) (quote #f))) ((lambda (g$745$16138) (list g$745$16138)) (g$745$14340 g$745$16132))) (if (g$745$14336 g$745$16132) (list (begin (quote cls*) (quote ()))) (quote #f)))))) g$745$16130) (g$745$14344 g$745$16124)))) (quote #f))) ((lambda (g$745$16140) (list g$745$16140)) (g$745$14340 g$745$16124)))) (quote #f))) (g$745$14344 g$745$16118)))) (quote #f))) ((lambda (g$745$16142) (list g$745$16142)) (g$745$14340 g$745$16118)))) (quote #f))) (g$745$14344 g$745$16112)))) (quote #f))) ((lambda (g$745$16144) (quote ())) (g$745$14340 g$745$16112)))) (quote #f))) g$745$16088))) g$745$16084))) ((lambda (g$745$16150) (if (g$745$14332 g$745$16150) (begin (quote #f) ((lambda (g$745$16152) (if g$745$16152 (begin (quote #f) ((lambda (g$745$16154) (if g$745$16154 (begin (quote #f) (append g$745$16152 g$745$16154)) (quote #f))) ((lambda (g$745$16156) (if (g$745$14332 g$745$16156) (begin (quote #f) ((lambda (g$745$16158) (if g$745$16158 (begin (quote #f) ((lambda (g$745$16160) (if g$745$16160 (begin (quote #f) (append g$745$16158 g$745$16160)) (quote #f))) ((lambda (g$745$16162) (if (equal? (g$745$14366 g$745$16162) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$16156)))) (quote #f))) ((lambda (g$745$16164) (list g$745$16164)) (g$745$14340 g$745$16156)))) (quote #f))) (g$745$14344 g$745$16150)))) (quote #f))) ((lambda (g$745$16166) (quote ())) (g$745$14340 g$745$16150)))) (quote #f))) g$745$16084))) g$745$16076))) (quote #f) (quote #f)))) (set! g$745$14803 (lambda (g$745$16342 g$745$16343 g$745$16344) ((lambda (g$745$16346) ((lambda (g$745$16348) (if (if g$745$16348 (begin (quote #f) (apply (lambda (g$745$16352) (quote #t)) g$745$16348)) (quote #f)) (apply (lambda (g$745$16350) (list (quote quote) (g$745$14366 g$745$16350))) g$745$16348) (error (quote expander) (quote #3#) (g$745$14364 g$745$16346 (quote ()))))) ((lambda (g$745$16354) (if (g$745$14332 g$745$16354) (begin (quote #f) ((lambda (g$745$16356) (if g$745$16356 (begin (quote #f) ((lambda (g$745$16358) (if g$745$16358 (begin (quote #f) (append g$745$16356 g$745$16358)) (quote #f))) ((lambda (g$745$16360) (if (g$745$14332 g$745$16360) (begin (quote #f) ((lambda (g$745$16362) (if g$745$16362 (begin (quote #f) ((lambda (g$745$16364) (if g$745$16364 (begin (quote #f) (append g$745$16362 g$745$16364)) (quote #f))) ((lambda (g$745$16366) (if (equal? (g$745$14366 g$745$16366) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$16360)))) (quote #f))) ((lambda (g$745$16368) (list g$745$16368)) (g$745$14340 g$745$16360)))) (quote #f))) (g$745$14344 g$745$16354)))) (quote #f))) ((lambda (g$745$16370) (quote ())) (g$745$14340 g$745$16354)))) (quote #f))) g$745$16346))) g$745$16342))) (set! g$745$14805 (lambda (g$745$16374 g$745$16375 g$745$16376) ((lambda (g$745$16378) ((lambda (g$745$16380) (if (if g$745$16380 (begin (quote #f) (apply (lambda (g$745$16394 g$745$16395 g$745$16396) (quote #t)) g$745$16380)) (quote #f)) (apply (lambda (g$745$16384 g$745$16385 g$745$16386) (call-with-values (lambda () (g$745$14899 g$745$16384 (map cons g$745$16385 g$745$16386) g$745$16375 g$745$16376)) (lambda (g$745$16389 g$745$16390) (g$745$14233 (quote #f) g$745$16389 g$745$16390)))) g$745$16380) (error (quote expander) (quote #3#) (g$745$14364 g$745$16378 (quote ()))))) ((lambda (g$745$16398) (if (g$745$14332 g$745$16398) (begin (quote #f) ((lambda (g$745$16400) (if g$745$16400 (begin (quote #f) ((lambda (g$745$16402) (if g$745$16402 (begin (quote #f) (append g$745$16400 g$745$16402)) (quote #f))) ((letrec ((g$745$16404 (lambda (g$745$16406) (if (g$745$14332 g$745$16406) ((lambda (g$745$16408) (if g$745$16408 (begin (quote #f) ((lambda (g$745$16410) (if g$745$16410 (begin (quote #f) (map cons g$745$16408 g$745$16410)) (quote #f))) (g$745$16404 (g$745$14344 g$745$16406)))) (quote #f))) ((lambda (g$745$16412) (if (g$745$14332 g$745$16412) (begin (quote #f) ((lambda (g$745$16414) (if g$745$16414 (begin (quote #f) ((lambda (g$745$16416) (if g$745$16416 (begin (quote #f) (append g$745$16414 g$745$16416)) (quote #f))) ((lambda (g$745$16418) (if (g$745$14332 g$745$16418) (begin (quote #f) ((lambda (g$745$16420) (if g$745$16420 (begin (quote #f) ((lambda (g$745$16422) (if g$745$16422 (begin (quote #f) (append g$745$16420 g$745$16422)) (quote #f))) ((letrec ((g$745$16424 (lambda (g$745$16426) (if (g$745$14332 g$745$16426) ((lambda (g$745$16428) (if g$745$16428 (begin (quote #f) ((lambda (g$745$16430) (if g$745$16430 (begin (quote #f) (map cons g$745$16428 g$745$16430)) (quote #f))) (g$745$16424 (g$745$14344 g$745$16426)))) (quote #f))) ((lambda (g$745$16432) (list g$745$16432)) (g$745$14340 g$745$16426))) (if (g$745$14336 g$745$16426) (list (begin (quote b**) (quote ()))) (quote #f)))))) g$745$16424) (g$745$14344 g$745$16418)))) (quote #f))) ((lambda (g$745$16434) (list g$745$16434)) (g$745$14340 g$745$16418)))) (quote #f))) (g$745$14344 g$745$16412)))) (quote #f))) ((lambda (g$745$16436) (list g$745$16436)) (g$745$14340 g$745$16412)))) (quote #f))) (g$745$14340 g$745$16406))) (if (g$745$14336 g$745$16406) (list (begin (quote fmls*) (quote ())) (begin (quote b*) (quote ())) (begin (quote b**) (quote ()))) (quote #f)))))) g$745$16404) (g$745$14344 g$745$16398)))) (quote #f))) ((lambda (g$745$16438) (quote ())) (g$745$14340 g$745$16398)))) (quote #f))) g$745$16378))) g$745$16374))) (set! g$745$14807 (lambda (g$745$16442 g$745$16443 g$745$16444) ((lambda (g$745$16446) ((lambda (g$745$16448) (if (if g$745$16448 (begin (quote #f) (apply (lambda (g$745$16462 g$745$16463 g$745$16464) (quote #t)) g$745$16448)) (quote #f)) (apply (lambda (g$745$16452 g$745$16453 g$745$16454) (call-with-values (lambda () (g$745$14897 g$745$16452 (cons g$745$16453 g$745$16454) g$745$16443 g$745$16444)) (lambda (g$745$16457 g$745$16458) (g$745$14234 (quote #f) g$745$16457 g$745$16458)))) g$745$16448) (error (quote expander) (quote #3#) (g$745$14364 g$745$16446 (quote ()))))) ((lambda (g$745$16466) (if (g$745$14332 g$745$16466) (begin (quote #f) ((lambda (g$745$16468) (if g$745$16468 (begin (quote #f) ((lambda (g$745$16470) (if g$745$16470 (begin (quote #f) (append g$745$16468 g$745$16470)) (quote #f))) ((lambda (g$745$16472) (if (g$745$14332 g$745$16472) (begin (quote #f) ((lambda (g$745$16474) (if g$745$16474 (begin (quote #f) ((lambda (g$745$16476) (if g$745$16476 (begin (quote #f) (append g$745$16474 g$745$16476)) (quote #f))) ((lambda (g$745$16478) (if (g$745$14332 g$745$16478) (begin (quote #f) ((lambda (g$745$16480) (if g$745$16480 (begin (quote #f) ((lambda (g$745$16482) (if g$745$16482 (begin (quote #f) (append g$745$16480 g$745$16482)) (quote #f))) ((letrec ((g$745$16484 (lambda (g$745$16486) (if (g$745$14332 g$745$16486) ((lambda (g$745$16488) (if g$745$16488 (begin (quote #f) ((lambda (g$745$16490) (if g$745$16490 (begin (quote #f) (map cons g$745$16488 g$745$16490)) (quote #f))) (g$745$16484 (g$745$14344 g$745$16486)))) (quote #f))) ((lambda (g$745$16492) (list g$745$16492)) (g$745$14340 g$745$16486))) (if (g$745$14336 g$745$16486) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$16484) (g$745$14344 g$745$16478)))) (quote #f))) ((lambda (g$745$16494) (list g$745$16494)) (g$745$14340 g$745$16478)))) (quote #f))) (g$745$14344 g$745$16472)))) (quote #f))) ((lambda (g$745$16496) (list g$745$16496)) (g$745$14340 g$745$16472)))) (quote #f))) (g$745$14344 g$745$16466)))) (quote #f))) ((lambda (g$745$16498) (quote ())) (g$745$14340 g$745$16466)))) (quote #f))) g$745$16446))) g$745$16442))) (set! g$745$14809 (lambda (g$745$16500) (g$745$14322 (letrec ((g$745$16502 (lambda (g$745$16504) (if (g$745$14298 g$745$16504) g$745$16504 (if (pair? g$745$16504) (cons (g$745$16502 (car g$745$16504)) (g$745$16502 (cdr g$745$16504))) (if (symbol? g$745$16504) (g$745$14775 g$745$16504) (if (vector? g$745$16504) (list->vector (map g$745$16502 (vector->list g$745$16504))) g$745$16504))))))) (g$745$16502 g$745$16500)) (quote ()) (quote ())))) (set! g$745$14811 (lambda (g$745$16506) ((lambda (g$745$16508) ((lambda (g$745$16510) (if (if g$745$16510 (begin (quote #f) (apply (lambda (g$745$16523 g$745$16524 g$745$16525 g$745$16526) (quote #t)) g$745$16510)) (quote #f)) (apply (lambda (g$745$16515 g$745$16516 g$745$16517 g$745$16518) (g$745$14809 (list (quote syntax-case) (cons (quote list) g$745$16516) (quote ()) (list g$745$16515 (cons (quote begin) (cons g$745$16517 g$745$16518)))))) g$745$16510) (error (quote expander) (quote #3#) (g$745$14364 g$745$16508 (quote ()))))) ((lambda (g$745$16528) (if (g$745$14332 g$745$16528) (begin (quote #f) ((lambda (g$745$16530) (if g$745$16530 (begin (quote #f) ((lambda (g$745$16532) (if g$745$16532 (begin (quote #f) (append g$745$16530 g$745$16532)) (quote #f))) ((lambda (g$745$16534) (if (g$745$14332 g$745$16534) (begin (quote #f) ((lambda (g$745$16536) (if g$745$16536 (begin (quote #f) ((lambda (g$745$16538) (if g$745$16538 (begin (quote #f) (append g$745$16536 g$745$16538)) (quote #f))) ((lambda (g$745$16540) (if (g$745$14332 g$745$16540) (begin (quote #f) ((lambda (g$745$16542) (if g$745$16542 (begin (quote #f) ((lambda (g$745$16544) (if g$745$16544 (begin (quote #f) (append g$745$16542 g$745$16544)) (quote #f))) ((letrec ((g$745$16546 (lambda (g$745$16548) (if (g$745$14332 g$745$16548) ((lambda (g$745$16550) (if g$745$16550 (begin (quote #f) ((lambda (g$745$16552) (if g$745$16552 (begin (quote #f) (map cons g$745$16550 g$745$16552)) (quote #f))) (g$745$16546 (g$745$14344 g$745$16548)))) (quote #f))) ((lambda (g$745$16554) (list g$745$16554)) (g$745$14340 g$745$16548))) (if (g$745$14336 g$745$16548) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$16546) (g$745$14344 g$745$16540)))) (quote #f))) ((lambda (g$745$16556) (list g$745$16556)) (g$745$14340 g$745$16540)))) (quote #f))) (g$745$14344 g$745$16534)))) (quote #f))) ((letrec ((g$745$16558 (lambda (g$745$16560) (if (g$745$14332 g$745$16560) ((lambda (g$745$16562) (if g$745$16562 (begin (quote #f) ((lambda (g$745$16564) (if g$745$16564 (begin (quote #f) (map cons g$745$16562 g$745$16564)) (quote #f))) (g$745$16558 (g$745$14344 g$745$16560)))) (quote #f))) ((lambda (g$745$16566) (if (g$745$14332 g$745$16566) (begin (quote #f) ((lambda (g$745$16568) (if g$745$16568 (begin (quote #f) ((lambda (g$745$16570) (if g$745$16570 (begin (quote #f) (append g$745$16568 g$745$16570)) (quote #f))) ((lambda (g$745$16572) (if (g$745$14332 g$745$16572) (begin (quote #f) ((lambda (g$745$16574) (if g$745$16574 (begin (quote #f) ((lambda (g$745$16576) (if g$745$16576 (begin (quote #f) (append g$745$16574 g$745$16576)) (quote #f))) ((lambda (g$745$16578) (if (equal? (g$745$14366 g$745$16578) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$16572)))) (quote #f))) ((lambda (g$745$16580) (list g$745$16580)) (g$745$14340 g$745$16572)))) (quote #f))) (g$745$14344 g$745$16566)))) (quote #f))) ((lambda (g$745$16582) (list g$745$16582)) (g$745$14340 g$745$16566)))) (quote #f))) (g$745$14340 g$745$16560))) (if (g$745$14336 g$745$16560) (list (begin (quote fml*) (quote ())) (begin (quote expr*) (quote ()))) (quote #f)))))) g$745$16558) (g$745$14340 g$745$16534)))) (quote #f))) (g$745$14344 g$745$16528)))) (quote #f))) ((lambda (g$745$16584) (quote ())) (g$745$14340 g$745$16528)))) (quote #f))) g$745$16508))) g$745$16506))) (set! g$745$14813 (lambda (g$745$16586) ((lambda (g$745$16588) ((lambda (g$745$16590) (if (if g$745$16590 (begin (quote #f) (apply (lambda (g$745$16693 g$745$16694 g$745$16695 g$745$16696) (quote #t)) g$745$16590)) (quote #f)) (apply (lambda (g$745$16685 g$745$16686 g$745$16687 g$745$16688) (if (g$745$14356 g$745$16685) (g$745$14809 (cons (cons (quote lambda) (cons g$745$16685 (cons g$745$16687 g$745$16688))) g$745$16686)) (error (quote expander) (quote "invalid bindings") (g$745$14364 g$745$16586 (quote ()))))) g$745$16590) ((lambda (g$745$16592) ((lambda (g$745$16594) (if (if g$745$16594 (begin (quote #f) (apply (lambda (g$745$16610 g$745$16611 g$745$16612 g$745$16613 g$745$16614) (g$745$14346 g$745$16610)) g$745$16594)) (quote #f)) (apply (lambda (g$745$16600 g$745$16601 g$745$16602 g$745$16603 g$745$16604) (if (g$745$14356 g$745$16601) (g$745$14809 (list (quote letrec) (list (list g$745$16600 (cons (quote lambda) (cons g$745$16601 (cons g$745$16603 g$745$16604))))) (cons g$745$16600 g$745$16602))) (error (quote expander) (quote "invalid syntax") (g$745$14364 g$745$16586 (quote ()))))) g$745$16594) (error (quote expander) (quote #3#) (g$745$14364 g$745$16592 (quote ()))))) ((lambda (g$745$16616) (if (g$745$14332 g$745$16616) (begin (quote #f) ((lambda (g$745$16618) (if g$745$16618 (begin (quote #f) ((lambda (g$745$16620) (if g$745$16620 (begin (quote #f) (append g$745$16618 g$745$16620)) (quote #f))) ((lambda (g$745$16622) (if (g$745$14332 g$745$16622) (begin (quote #f) ((lambda (g$745$16624) (if g$745$16624 (begin (quote #f) ((lambda (g$745$16626) (if g$745$16626 (begin (quote #f) (append g$745$16624 g$745$16626)) (quote #f))) ((lambda (g$745$16628) (if (g$745$14332 g$745$16628) (begin (quote #f) ((lambda (g$745$16630) (if g$745$16630 (begin (quote #f) ((lambda (g$745$16632) (if g$745$16632 (begin (quote #f) (append g$745$16630 g$745$16632)) (quote #f))) ((lambda (g$745$16634) (if (g$745$14332 g$745$16634) (begin (quote #f) ((lambda (g$745$16636) (if g$745$16636 (begin (quote #f) ((lambda (g$745$16638) (if g$745$16638 (begin (quote #f) (append g$745$16636 g$745$16638)) (quote #f))) ((letrec ((g$745$16640 (lambda (g$745$16642) (if (g$745$14332 g$745$16642) ((lambda (g$745$16644) (if g$745$16644 (begin (quote #f) ((lambda (g$745$16646) (if g$745$16646 (begin (quote #f) (map cons g$745$16644 g$745$16646)) (quote #f))) (g$745$16640 (g$745$14344 g$745$16642)))) (quote #f))) ((lambda (g$745$16648) (list g$745$16648)) (g$745$14340 g$745$16642))) (if (g$745$14336 g$745$16642) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$16640) (g$745$14344 g$745$16634)))) (quote #f))) ((lambda (g$745$16650) (list g$745$16650)) (g$745$14340 g$745$16634)))) (quote #f))) (g$745$14344 g$745$16628)))) (quote #f))) ((letrec ((g$745$16652 (lambda (g$745$16654) (if (g$745$14332 g$745$16654) ((lambda (g$745$16656) (if g$745$16656 (begin (quote #f) ((lambda (g$745$16658) (if g$745$16658 (begin (quote #f) (map cons g$745$16656 g$745$16658)) (quote #f))) (g$745$16652 (g$745$14344 g$745$16654)))) (quote #f))) ((lambda (g$745$16660) (if (g$745$14332 g$745$16660) (begin (quote #f) ((lambda (g$745$16662) (if g$745$16662 (begin (quote #f) ((lambda (g$745$16664) (if g$745$16664 (begin (quote #f) (append g$745$16662 g$745$16664)) (quote #f))) ((lambda (g$745$16666) (if (g$745$14332 g$745$16666) (begin (quote #f) ((lambda (g$745$16668) (if g$745$16668 (begin (quote #f) ((lambda (g$745$16670) (if g$745$16670 (begin (quote #f) (append g$745$16668 g$745$16670)) (quote #f))) ((lambda (g$745$16672) (if (equal? (g$745$14366 g$745$16672) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$16666)))) (quote #f))) ((lambda (g$745$16674) (list g$745$16674)) (g$745$14340 g$745$16666)))) (quote #f))) (g$745$14344 g$745$16660)))) (quote #f))) ((lambda (g$745$16676) (list g$745$16676)) (g$745$14340 g$745$16660)))) (quote #f))) (g$745$14340 g$745$16654))) (if (g$745$14336 g$745$16654) (list (begin (quote lhs*) (quote ())) (begin (quote rhs*) (quote ()))) (quote #f)))))) g$745$16652) (g$745$14340 g$745$16628)))) (quote #f))) (g$745$14344 g$745$16622)))) (quote #f))) ((lambda (g$745$16678) (list g$745$16678)) (g$745$14340 g$745$16622)))) (quote #f))) (g$745$14344 g$745$16616)))) (quote #f))) ((lambda (g$745$16680) (quote ())) (g$745$14340 g$745$16616)))) (quote #f))) g$745$16592))) g$745$16588))) ((lambda (g$745$16698) (if (g$745$14332 g$745$16698) (begin (quote #f) ((lambda (g$745$16700) (if g$745$16700 (begin (quote #f) ((lambda (g$745$16702) (if g$745$16702 (begin (quote #f) (append g$745$16700 g$745$16702)) (quote #f))) ((lambda (g$745$16704) (if (g$745$14332 g$745$16704) (begin (quote #f) ((lambda (g$745$16706) (if g$745$16706 (begin (quote #f) ((lambda (g$745$16708) (if g$745$16708 (begin (quote #f) (append g$745$16706 g$745$16708)) (quote #f))) ((lambda (g$745$16710) (if (g$745$14332 g$745$16710) (begin (quote #f) ((lambda (g$745$16712) (if g$745$16712 (begin (quote #f) ((lambda (g$745$16714) (if g$745$16714 (begin (quote #f) (append g$745$16712 g$745$16714)) (quote #f))) ((letrec ((g$745$16716 (lambda (g$745$16718) (if (g$745$14332 g$745$16718) ((lambda (g$745$16720) (if g$745$16720 (begin (quote #f) ((lambda (g$745$16722) (if g$745$16722 (begin (quote #f) (map cons g$745$16720 g$745$16722)) (quote #f))) (g$745$16716 (g$745$14344 g$745$16718)))) (quote #f))) ((lambda (g$745$16724) (list g$745$16724)) (g$745$14340 g$745$16718))) (if (g$745$14336 g$745$16718) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$16716) (g$745$14344 g$745$16710)))) (quote #f))) ((lambda (g$745$16726) (list g$745$16726)) (g$745$14340 g$745$16710)))) (quote #f))) (g$745$14344 g$745$16704)))) (quote #f))) ((letrec ((g$745$16728 (lambda (g$745$16730) (if (g$745$14332 g$745$16730) ((lambda (g$745$16732) (if g$745$16732 (begin (quote #f) ((lambda (g$745$16734) (if g$745$16734 (begin (quote #f) (map cons g$745$16732 g$745$16734)) (quote #f))) (g$745$16728 (g$745$14344 g$745$16730)))) (quote #f))) ((lambda (g$745$16736) (if (g$745$14332 g$745$16736) (begin (quote #f) ((lambda (g$745$16738) (if g$745$16738 (begin (quote #f) ((lambda (g$745$16740) (if g$745$16740 (begin (quote #f) (append g$745$16738 g$745$16740)) (quote #f))) ((lambda (g$745$16742) (if (g$745$14332 g$745$16742) (begin (quote #f) ((lambda (g$745$16744) (if g$745$16744 (begin (quote #f) ((lambda (g$745$16746) (if g$745$16746 (begin (quote #f) (append g$745$16744 g$745$16746)) (quote #f))) ((lambda (g$745$16748) (if (equal? (g$745$14366 g$745$16748) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$16742)))) (quote #f))) ((lambda (g$745$16750) (list g$745$16750)) (g$745$14340 g$745$16742)))) (quote #f))) (g$745$14344 g$745$16736)))) (quote #f))) ((lambda (g$745$16752) (list g$745$16752)) (g$745$14340 g$745$16736)))) (quote #f))) (g$745$14340 g$745$16730))) (if (g$745$14336 g$745$16730) (list (begin (quote lhs*) (quote ())) (begin (quote rhs*) (quote ()))) (quote #f)))))) g$745$16728) (g$745$14340 g$745$16704)))) (quote #f))) (g$745$14344 g$745$16698)))) (quote #f))) ((lambda (g$745$16754) (quote ())) (g$745$14340 g$745$16698)))) (quote #f))) g$745$16588))) g$745$16586))) (set! g$745$14815 (lambda (g$745$16756) ((lambda (g$745$16758) ((lambda (g$745$16760) (if (if g$745$16760 (begin (quote #f) (apply (lambda (g$745$16855 g$745$16856 g$745$16857 g$745$16858) (quote #t)) g$745$16760)) (quote #f)) (apply (lambda (g$745$16847 g$745$16848 g$745$16849 g$745$16850) (if (g$745$14356 g$745$16848) (g$745$14809 (list (quote make-traced-procedure) (list (quote quote) g$745$16847) (cons (quote lambda) (cons g$745$16848 (cons g$745$16849 g$745$16850))))) (error (quote expander) (quote "invalid formals") (g$745$14364 g$745$16756 (quote ()))))) g$745$16760) ((lambda (g$745$16762) ((lambda (g$745$16764) (if (if g$745$16764 (begin (quote #f) (apply (lambda (g$745$16780 g$745$16781 g$745$16782 g$745$16783 g$745$16784) (quote #t)) g$745$16764)) (quote #f)) (apply (lambda (g$745$16770 g$745$16771 g$745$16772 g$745$16773 g$745$16774) (if (g$745$14356 (cons g$745$16772 g$745$16771)) (g$745$14809 (list (quote make-traced-procedure) (list (quote quote) g$745$16770) (cons (quote lambda) (cons (append g$745$16771 g$745$16772) (cons g$745$16773 g$745$16774))))) (error (quote expander) (quote "invalid formals") (g$745$14364 g$745$16756 (quote ()))))) g$745$16764) (error (quote expander) (quote #3#) (g$745$14364 g$745$16762 (quote ()))))) ((lambda (g$745$16786) (if (g$745$14332 g$745$16786) (begin (quote #f) ((lambda (g$745$16788) (if g$745$16788 (begin (quote #f) ((lambda (g$745$16790) (if g$745$16790 (begin (quote #f) (append g$745$16788 g$745$16790)) (quote #f))) ((lambda (g$745$16792) (if (g$745$14332 g$745$16792) (begin (quote #f) ((lambda (g$745$16794) (if g$745$16794 (begin (quote #f) ((lambda (g$745$16796) (if g$745$16796 (begin (quote #f) (append g$745$16794 g$745$16796)) (quote #f))) ((lambda (g$745$16798) (if (g$745$14332 g$745$16798) (begin (quote #f) ((lambda (g$745$16800) (if g$745$16800 (begin (quote #f) ((lambda (g$745$16802) (if g$745$16802 (begin (quote #f) (append g$745$16800 g$745$16802)) (quote #f))) ((lambda (g$745$16804) (if (g$745$14332 g$745$16804) (begin (quote #f) ((lambda (g$745$16806) (if g$745$16806 (begin (quote #f) ((lambda (g$745$16808) (if g$745$16808 (begin (quote #f) (append g$745$16806 g$745$16808)) (quote #f))) ((letrec ((g$745$16810 (lambda (g$745$16812) (if (g$745$14332 g$745$16812) ((lambda (g$745$16814) (if g$745$16814 (begin (quote #f) ((lambda (g$745$16816) (if g$745$16816 (begin (quote #f) (map cons g$745$16814 g$745$16816)) (quote #f))) (g$745$16810 (g$745$14344 g$745$16812)))) (quote #f))) ((lambda (g$745$16818) (list g$745$16818)) (g$745$14340 g$745$16812))) (if (g$745$14336 g$745$16812) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$16810) (g$745$14344 g$745$16804)))) (quote #f))) ((lambda (g$745$16820) (list g$745$16820)) (g$745$14340 g$745$16804)))) (quote #f))) (g$745$14344 g$745$16798)))) (quote #f))) ((letrec ((g$745$16822 (lambda (g$745$16824) (if (g$745$14332 g$745$16824) ((lambda (g$745$16830) (if g$745$16830 (begin (quote #f) ((lambda (g$745$16832) (if g$745$16832 (begin (quote #f) (cons (map cons g$745$16830 (car g$745$16832)) (cdr g$745$16832))) (quote #f))) (g$745$16822 (g$745$14344 g$745$16824)))) (quote #f))) ((lambda (g$745$16834) (list g$745$16834)) (g$745$14340 g$745$16824))) ((lambda (g$745$16826) (if g$745$16826 (begin (quote #f) (cons (list (begin (quote fmls) (quote ()))) g$745$16826)) (quote #f))) ((lambda (g$745$16828) (list g$745$16828)) g$745$16824)))))) (lambda (g$745$16836) ((lambda (g$745$16838) (if g$745$16838 (begin (quote #f) (append (car g$745$16838) (cdr g$745$16838))) (quote #f))) (g$745$16822 g$745$16836)))) (g$745$14340 g$745$16798)))) (quote #f))) (g$745$14344 g$745$16792)))) (quote #f))) ((lambda (g$745$16840) (list g$745$16840)) (g$745$14340 g$745$16792)))) (quote #f))) (g$745$14344 g$745$16786)))) (quote #f))) ((lambda (g$745$16842) (quote ())) (g$745$14340 g$745$16786)))) (quote #f))) g$745$16762))) g$745$16758))) ((lambda (g$745$16860) (if (g$745$14332 g$745$16860) (begin (quote #f) ((lambda (g$745$16862) (if g$745$16862 (begin (quote #f) ((lambda (g$745$16864) (if g$745$16864 (begin (quote #f) (append g$745$16862 g$745$16864)) (quote #f))) ((lambda (g$745$16866) (if (g$745$14332 g$745$16866) (begin (quote #f) ((lambda (g$745$16868) (if g$745$16868 (begin (quote #f) ((lambda (g$745$16870) (if g$745$16870 (begin (quote #f) (append g$745$16868 g$745$16870)) (quote #f))) ((lambda (g$745$16872) (if (g$745$14332 g$745$16872) (begin (quote #f) ((lambda (g$745$16874) (if g$745$16874 (begin (quote #f) ((lambda (g$745$16876) (if g$745$16876 (begin (quote #f) (append g$745$16874 g$745$16876)) (quote #f))) ((lambda (g$745$16878) (if (g$745$14332 g$745$16878) (begin (quote #f) ((lambda (g$745$16880) (if g$745$16880 (begin (quote #f) ((lambda (g$745$16882) (if g$745$16882 (begin (quote #f) (append g$745$16880 g$745$16882)) (quote #f))) ((letrec ((g$745$16884 (lambda (g$745$16886) (if (g$745$14332 g$745$16886) ((lambda (g$745$16888) (if g$745$16888 (begin (quote #f) ((lambda (g$745$16890) (if g$745$16890 (begin (quote #f) (map cons g$745$16888 g$745$16890)) (quote #f))) (g$745$16884 (g$745$14344 g$745$16886)))) (quote #f))) ((lambda (g$745$16892) (list g$745$16892)) (g$745$14340 g$745$16886))) (if (g$745$14336 g$745$16886) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$16884) (g$745$14344 g$745$16878)))) (quote #f))) ((lambda (g$745$16894) (list g$745$16894)) (g$745$14340 g$745$16878)))) (quote #f))) (g$745$14344 g$745$16872)))) (quote #f))) ((letrec ((g$745$16896 (lambda (g$745$16898) (if (g$745$14332 g$745$16898) ((lambda (g$745$16900) (if g$745$16900 (begin (quote #f) ((lambda (g$745$16902) (if g$745$16902 (begin (quote #f) (map cons g$745$16900 g$745$16902)) (quote #f))) (g$745$16896 (g$745$14344 g$745$16898)))) (quote #f))) ((lambda (g$745$16904) (list g$745$16904)) (g$745$14340 g$745$16898))) (if (g$745$14336 g$745$16898) (list (begin (quote fmls) (quote ()))) (quote #f)))))) g$745$16896) (g$745$14340 g$745$16872)))) (quote #f))) (g$745$14344 g$745$16866)))) (quote #f))) ((lambda (g$745$16906) (list g$745$16906)) (g$745$14340 g$745$16866)))) (quote #f))) (g$745$14344 g$745$16860)))) (quote #f))) ((lambda (g$745$16908) (quote ())) (g$745$14340 g$745$16860)))) (quote #f))) g$745$16758))) g$745$16756))) (set! g$745$14817 (lambda (g$745$16910) ((lambda (g$745$16912) ((lambda (g$745$16914) (if (if g$745$16914 (begin (quote #f) (apply (lambda (g$745$17047 g$745$17048 g$745$17049 g$745$17050) (quote #t)) g$745$16914)) (quote #f)) (apply (lambda (g$745$17039 g$745$17040 g$745$17041 g$745$17042) (if (g$745$14356 g$745$17040) (g$745$14809 (list (quote define) g$745$17039 (list (quote make-traced-procedure) (list (quote quote) g$745$17039) (cons (quote lambda) (cons g$745$17040 (cons g$745$17041 g$745$17042)))))) (error (quote expander) (quote "invalid formals") (g$745$14364 g$745$16910 (quote ()))))) g$745$16914) ((lambda (g$745$16916) ((lambda (g$745$16918) (if (if g$745$16918 (begin (quote #f) (apply (lambda (g$745$16972 g$745$16973 g$745$16974 g$745$16975 g$745$16976) (quote #t)) g$745$16918)) (quote #f)) (apply (lambda (g$745$16962 g$745$16963 g$745$16964 g$745$16965 g$745$16966) (if (g$745$14356 (cons g$745$16964 g$745$16963)) (g$745$14809 (list (quote define) g$745$16962 (list (quote make-traced-procedure) (list (quote quote) g$745$16962) (cons (quote lambda) (cons (append g$745$16963 g$745$16964) (cons g$745$16965 g$745$16966)))))) (error (quote expander) (quote "invalid formals") (g$745$14364 g$745$16910 (quote ()))))) g$745$16918) ((lambda (g$745$16920) ((lambda (g$745$16922) (if (if g$745$16922 (begin (quote #f) (apply (lambda (g$745$16929 g$745$16930) (quote #t)) g$745$16922)) (quote #f)) (apply (lambda (g$745$16925 g$745$16926) (if (g$745$14346 g$745$16925) (g$745$14809 (list (quote define) g$745$16925 (list (quote let) (list (list (quote v) g$745$16926)) (cons (quote if) (cons (quote (procedure? v)) (cons (cons (quote make-traced-procedure) (cons (list (quote quote) g$745$16925) (quote (v)))) (quote ((error (quote trace-define) "not a procedure" v))))))))) (error (quote expander) (quote "invalid formals") (g$745$14364 g$745$16910 (quote ()))))) g$745$16922) (error (quote expander) (quote #3#) (g$745$14364 g$745$16920 (quote ()))))) ((lambda (g$745$16932) (if (g$745$14332 g$745$16932) (begin (quote #f) ((lambda (g$745$16934) (if g$745$16934 (begin (quote #f) ((lambda (g$745$16936) (if g$745$16936 (begin (quote #f) (append g$745$16934 g$745$16936)) (quote #f))) ((lambda (g$745$16938) (if (g$745$14332 g$745$16938) (begin (quote #f) ((lambda (g$745$16940) (if g$745$16940 (begin (quote #f) ((lambda (g$745$16942) (if g$745$16942 (begin (quote #f) (append g$745$16940 g$745$16942)) (quote #f))) ((lambda (g$745$16944) (if (g$745$14332 g$745$16944) (begin (quote #f) ((lambda (g$745$16946) (if g$745$16946 (begin (quote #f) ((lambda (g$745$16948) (if g$745$16948 (begin (quote #f) (append g$745$16946 g$745$16948)) (quote #f))) ((lambda (g$745$16950) (if (equal? (g$745$14366 g$745$16950) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$16944)))) (quote #f))) ((lambda (g$745$16952) (list g$745$16952)) (g$745$14340 g$745$16944)))) (quote #f))) (g$745$14344 g$745$16938)))) (quote #f))) ((lambda (g$745$16954) (list g$745$16954)) (g$745$14340 g$745$16938)))) (quote #f))) (g$745$14344 g$745$16932)))) (quote #f))) ((lambda (g$745$16956) (quote ())) (g$745$14340 g$745$16932)))) (quote #f))) g$745$16920))) g$745$16916))) ((lambda (g$745$16978) (if (g$745$14332 g$745$16978) (begin (quote #f) ((lambda (g$745$16980) (if g$745$16980 (begin (quote #f) ((lambda (g$745$16982) (if g$745$16982 (begin (quote #f) (append g$745$16980 g$745$16982)) (quote #f))) ((lambda (g$745$16984) (if (g$745$14332 g$745$16984) (begin (quote #f) ((lambda (g$745$16986) (if g$745$16986 (begin (quote #f) ((lambda (g$745$16988) (if g$745$16988 (begin (quote #f) (append g$745$16986 g$745$16988)) (quote #f))) ((lambda (g$745$16990) (if (g$745$14332 g$745$16990) (begin (quote #f) ((lambda (g$745$16992) (if g$745$16992 (begin (quote #f) ((lambda (g$745$16994) (if g$745$16994 (begin (quote #f) (append g$745$16992 g$745$16994)) (quote #f))) ((letrec ((g$745$16996 (lambda (g$745$16998) (if (g$745$14332 g$745$16998) ((lambda (g$745$17000) (if g$745$17000 (begin (quote #f) ((lambda (g$745$17002) (if g$745$17002 (begin (quote #f) (map cons g$745$17000 g$745$17002)) (quote #f))) (g$745$16996 (g$745$14344 g$745$16998)))) (quote #f))) ((lambda (g$745$17004) (list g$745$17004)) (g$745$14340 g$745$16998))) (if (g$745$14336 g$745$16998) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$16996) (g$745$14344 g$745$16990)))) (quote #f))) ((lambda (g$745$17006) (list g$745$17006)) (g$745$14340 g$745$16990)))) (quote #f))) (g$745$14344 g$745$16984)))) (quote #f))) ((lambda (g$745$17008) (if (g$745$14332 g$745$17008) (begin (quote #f) ((lambda (g$745$17010) (if g$745$17010 (begin (quote #f) ((lambda (g$745$17012) (if g$745$17012 (begin (quote #f) (append g$745$17010 g$745$17012)) (quote #f))) ((letrec ((g$745$17014 (lambda (g$745$17016) (if (g$745$14332 g$745$17016) ((lambda (g$745$17022) (if g$745$17022 (begin (quote #f) ((lambda (g$745$17024) (if g$745$17024 (begin (quote #f) (cons (map cons g$745$17022 (car g$745$17024)) (cdr g$745$17024))) (quote #f))) (g$745$17014 (g$745$14344 g$745$17016)))) (quote #f))) ((lambda (g$745$17026) (list g$745$17026)) (g$745$14340 g$745$17016))) ((lambda (g$745$17018) (if g$745$17018 (begin (quote #f) (cons (list (begin (quote fmls) (quote ()))) g$745$17018)) (quote #f))) ((lambda (g$745$17020) (list g$745$17020)) g$745$17016)))))) (lambda (g$745$17028) ((lambda (g$745$17030) (if g$745$17030 (begin (quote #f) (append (car g$745$17030) (cdr g$745$17030))) (quote #f))) (g$745$17014 g$745$17028)))) (g$745$14344 g$745$17008)))) (quote #f))) ((lambda (g$745$17032) (list g$745$17032)) (g$745$14340 g$745$17008)))) (quote #f))) (g$745$14340 g$745$16984)))) (quote #f))) (g$745$14344 g$745$16978)))) (quote #f))) ((lambda (g$745$17034) (quote ())) (g$745$14340 g$745$16978)))) (quote #f))) g$745$16916))) g$745$16912))) ((lambda (g$745$17052) (if (g$745$14332 g$745$17052) (begin (quote #f) ((lambda (g$745$17054) (if g$745$17054 (begin (quote #f) ((lambda (g$745$17056) (if g$745$17056 (begin (quote #f) (append g$745$17054 g$745$17056)) (quote #f))) ((lambda (g$745$17058) (if (g$745$14332 g$745$17058) (begin (quote #f) ((lambda (g$745$17060) (if g$745$17060 (begin (quote #f) ((lambda (g$745$17062) (if g$745$17062 (begin (quote #f) (append g$745$17060 g$745$17062)) (quote #f))) ((lambda (g$745$17064) (if (g$745$14332 g$745$17064) (begin (quote #f) ((lambda (g$745$17066) (if g$745$17066 (begin (quote #f) ((lambda (g$745$17068) (if g$745$17068 (begin (quote #f) (append g$745$17066 g$745$17068)) (quote #f))) ((letrec ((g$745$17070 (lambda (g$745$17072) (if (g$745$14332 g$745$17072) ((lambda (g$745$17074) (if g$745$17074 (begin (quote #f) ((lambda (g$745$17076) (if g$745$17076 (begin (quote #f) (map cons g$745$17074 g$745$17076)) (quote #f))) (g$745$17070 (g$745$14344 g$745$17072)))) (quote #f))) ((lambda (g$745$17078) (list g$745$17078)) (g$745$14340 g$745$17072))) (if (g$745$14336 g$745$17072) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$17070) (g$745$14344 g$745$17064)))) (quote #f))) ((lambda (g$745$17080) (list g$745$17080)) (g$745$14340 g$745$17064)))) (quote #f))) (g$745$14344 g$745$17058)))) (quote #f))) ((lambda (g$745$17082) (if (g$745$14332 g$745$17082) (begin (quote #f) ((lambda (g$745$17084) (if g$745$17084 (begin (quote #f) ((lambda (g$745$17086) (if g$745$17086 (begin (quote #f) (append g$745$17084 g$745$17086)) (quote #f))) ((letrec ((g$745$17088 (lambda (g$745$17090) (if (g$745$14332 g$745$17090) ((lambda (g$745$17092) (if g$745$17092 (begin (quote #f) ((lambda (g$745$17094) (if g$745$17094 (begin (quote #f) (map cons g$745$17092 g$745$17094)) (quote #f))) (g$745$17088 (g$745$14344 g$745$17090)))) (quote #f))) ((lambda (g$745$17096) (list g$745$17096)) (g$745$14340 g$745$17090))) (if (g$745$14336 g$745$17090) (list (begin (quote fmls) (quote ()))) (quote #f)))))) g$745$17088) (g$745$14344 g$745$17082)))) (quote #f))) ((lambda (g$745$17098) (list g$745$17098)) (g$745$14340 g$745$17082)))) (quote #f))) (g$745$14340 g$745$17058)))) (quote #f))) (g$745$14344 g$745$17052)))) (quote #f))) ((lambda (g$745$17100) (quote ())) (g$745$14340 g$745$17052)))) (quote #f))) g$745$16912))) g$745$16910))) (set! g$745$14819 (lambda (g$745$17102) ((lambda (g$745$17104) (begin (set! g$745$17104 (lambda (g$745$17180 g$745$17181 g$745$17182) ((lambda (g$745$17184 g$745$17186) (begin (set! g$745$17184 (lambda (g$745$17285 g$745$17286) ((lambda (g$745$17288) ((lambda (g$745$17290) (if (if g$745$17290 (begin (quote #f) (apply (lambda (g$745$17367 g$745$17368) (quote #t)) g$745$17290)) (quote #f)) (apply (lambda (g$745$17361 g$745$17362) ((lambda (g$745$17364) (list (quote let) (list (list g$745$17364 g$745$17361)) (list (quote if) g$745$17364 (list g$745$17362 g$745$17364) g$745$17286))) (gensym))) g$745$17290) ((lambda (g$745$17292) ((lambda (g$745$17294) (if (if g$745$17294 (begin (quote #f) (apply (lambda (g$745$17348) (quote #t)) g$745$17294)) (quote #f)) (apply (lambda (g$745$17344) ((lambda (g$745$17346) (list (quote let) (list (list g$745$17346 g$745$17344)) (list (quote if) g$745$17346 g$745$17346 g$745$17286))) (gensym))) g$745$17294) ((lambda (g$745$17296) ((lambda (g$745$17298) (if (if g$745$17298 (begin (quote #f) (apply (lambda (g$745$17314 g$745$17315 g$745$17316) (quote #t)) g$745$17298)) (quote #f)) (apply (lambda (g$745$17308 g$745$17309 g$745$17310) (list (quote if) g$745$17308 (cons (quote begin) (cons g$745$17309 g$745$17310)) g$745$17286)) g$745$17298) ((lambda (g$745$17300) ((lambda (g$745$17302) (if (if g$745$17302 (begin (quote #f) (apply (lambda () (quote #t)) g$745$17302)) (quote #f)) (apply (lambda () (error (quote expander) (quote "invalid guard clause") (g$745$14364 g$745$17285 (quote ())))) g$745$17302) (error (quote expander) (quote #3#) (g$745$14364 g$745$17300 (quote ()))))) ((lambda (g$745$17304) (quote ())) g$745$17300))) g$745$17296))) ((lambda (g$745$17318) (if (g$745$14332 g$745$17318) (begin (quote #f) ((lambda (g$745$17320) (if g$745$17320 (begin (quote #f) ((lambda (g$745$17322) (if g$745$17322 (begin (quote #f) (append g$745$17320 g$745$17322)) (quote #f))) ((lambda (g$745$17324) (if (g$745$14332 g$745$17324) (begin (quote #f) ((lambda (g$745$17326) (if g$745$17326 (begin (quote #f) ((lambda (g$745$17328) (if g$745$17328 (begin (quote #f) (append g$745$17326 g$745$17328)) (quote #f))) ((letrec ((g$745$17330 (lambda (g$745$17332) (if (g$745$14332 g$745$17332) ((lambda (g$745$17334) (if g$745$17334 (begin (quote #f) ((lambda (g$745$17336) (if g$745$17336 (begin (quote #f) (map cons g$745$17334 g$745$17336)) (quote #f))) (g$745$17330 (g$745$14344 g$745$17332)))) (quote #f))) ((lambda (g$745$17338) (list g$745$17338)) (g$745$14340 g$745$17332))) (if (g$745$14336 g$745$17332) (list (begin (quote v*) (quote ()))) (quote #f)))))) g$745$17330) (g$745$14344 g$745$17324)))) (quote #f))) ((lambda (g$745$17340) (list g$745$17340)) (g$745$14340 g$745$17324)))) (quote #f))) (g$745$14344 g$745$17318)))) (quote #f))) ((lambda (g$745$17342) (list g$745$17342)) (g$745$14340 g$745$17318)))) (quote #f))) g$745$17296))) g$745$17292))) ((lambda (g$745$17350) (if (g$745$14332 g$745$17350) (begin (quote #f) ((lambda (g$745$17352) (if g$745$17352 (begin (quote #f) ((lambda (g$745$17354) (if g$745$17354 (begin (quote #f) (append g$745$17352 g$745$17354)) (quote #f))) ((lambda (g$745$17356) (if (equal? (g$745$14366 g$745$17356) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17350)))) (quote #f))) ((lambda (g$745$17358) (list g$745$17358)) (g$745$14340 g$745$17350)))) (quote #f))) g$745$17292))) g$745$17288))) ((lambda (g$745$17370) (if (g$745$14332 g$745$17370) (begin (quote #f) ((lambda (g$745$17372) (if g$745$17372 (begin (quote #f) ((lambda (g$745$17374) (if g$745$17374 (begin (quote #f) (append g$745$17372 g$745$17374)) (quote #f))) ((lambda (g$745$17376) (if (g$745$14332 g$745$17376) (begin (quote #f) ((lambda (g$745$17378) (if g$745$17378 (begin (quote #f) ((lambda (g$745$17380) (if g$745$17380 (begin (quote #f) (append g$745$17378 g$745$17380)) (quote #f))) ((lambda (g$745$17382) (if (g$745$14332 g$745$17382) (begin (quote #f) ((lambda (g$745$17384) (if g$745$17384 (begin (quote #f) ((lambda (g$745$17386) (if g$745$17386 (begin (quote #f) (append g$745$17384 g$745$17386)) (quote #f))) ((lambda (g$745$17388) (if (equal? (g$745$14366 g$745$17388) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17382)))) (quote #f))) ((lambda (g$745$17390) (list g$745$17390)) (g$745$14340 g$745$17382)))) (quote #f))) (g$745$14344 g$745$17376)))) (quote #f))) ((lambda (g$745$17392) (if (g$745$14346 g$745$17392) (if (g$745$14354 g$745$17392 (g$745$14775 (quote =>))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$17376)))) (quote #f))) (g$745$14344 g$745$17370)))) (quote #f))) ((lambda (g$745$17394) (list g$745$17394)) (g$745$14340 g$745$17370)))) (quote #f))) g$745$17288))) g$745$17285))) (set! g$745$17186 (lambda (g$745$17192) ((lambda (g$745$17194) ((lambda (g$745$17196) (if (if g$745$17196 (begin (quote #f) (apply (lambda () (quote #t)) g$745$17196)) (quote #f)) (apply (lambda () ((lambda (g$745$17280) (values (list g$745$17280 (list (quote lambda) (quote ()) (list (quote raise) g$745$17180))) g$745$17280)) (gensym))) g$745$17196) ((lambda (g$745$17198) ((lambda (g$745$17200) (if (if g$745$17200 (begin (quote #f) (apply (lambda (g$745$17243 g$745$17244) (quote #t)) g$745$17200)) (quote #f)) (apply (lambda (g$745$17239 g$745$17240) (values (cons (quote begin) (cons g$745$17239 g$745$17240)) (quote #f))) g$745$17200) ((lambda (g$745$17202) ((lambda (g$745$17204) (if (if g$745$17204 (begin (quote #f) (apply (lambda (g$745$17225 g$745$17226) (quote #t)) g$745$17204)) (quote #f)) (apply (lambda (g$745$17217 g$745$17218) (call-with-values (lambda () (g$745$17186 g$745$17218)) (lambda (g$745$17221 g$745$17222) (values (g$745$17184 g$745$17217 g$745$17221) g$745$17222)))) g$745$17204) ((lambda (g$745$17206) ((lambda (g$745$17208) (if (if g$745$17208 (begin (quote #f) (apply (lambda (g$745$17212) (quote #t)) g$745$17208)) (quote #f)) (apply (lambda (g$745$17210) (error (quote expander) (quote "invalid guard clause") (g$745$14364 g$745$17210 (quote ())))) g$745$17208) (error (quote expander) (quote #3#) (g$745$14364 g$745$17206 (quote ()))))) ((lambda (g$745$17214) (list g$745$17214)) g$745$17206))) g$745$17202))) ((lambda (g$745$17228) (if (g$745$14332 g$745$17228) (begin (quote #f) ((lambda (g$745$17230) (if g$745$17230 (begin (quote #f) ((lambda (g$745$17232) (if g$745$17232 (begin (quote #f) (append g$745$17230 g$745$17232)) (quote #f))) ((lambda (g$745$17234) (list g$745$17234)) (g$745$14344 g$745$17228)))) (quote #f))) ((lambda (g$745$17236) (list g$745$17236)) (g$745$14340 g$745$17228)))) (quote #f))) g$745$17202))) g$745$17198))) ((lambda (g$745$17246) (if (g$745$14332 g$745$17246) (begin (quote #f) ((lambda (g$745$17248) (if g$745$17248 (begin (quote #f) ((lambda (g$745$17250) (if g$745$17250 (begin (quote #f) (append g$745$17248 g$745$17250)) (quote #f))) ((lambda (g$745$17252) (if (equal? (g$745$14366 g$745$17252) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17246)))) (quote #f))) ((lambda (g$745$17254) (if (g$745$14332 g$745$17254) (begin (quote #f) ((lambda (g$745$17256) (if g$745$17256 (begin (quote #f) ((lambda (g$745$17258) (if g$745$17258 (begin (quote #f) (append g$745$17256 g$745$17258)) (quote #f))) ((lambda (g$745$17260) (if (g$745$14332 g$745$17260) (begin (quote #f) ((lambda (g$745$17262) (if g$745$17262 (begin (quote #f) ((lambda (g$745$17264) (if g$745$17264 (begin (quote #f) (append g$745$17262 g$745$17264)) (quote #f))) ((letrec ((g$745$17266 (lambda (g$745$17268) (if (g$745$14332 g$745$17268) ((lambda (g$745$17270) (if g$745$17270 (begin (quote #f) ((lambda (g$745$17272) (if g$745$17272 (begin (quote #f) (map cons g$745$17270 g$745$17272)) (quote #f))) (g$745$17266 (g$745$14344 g$745$17268)))) (quote #f))) ((lambda (g$745$17274) (list g$745$17274)) (g$745$14340 g$745$17268))) (if (g$745$14336 g$745$17268) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$17266) (g$745$14344 g$745$17260)))) (quote #f))) ((lambda (g$745$17276) (list g$745$17276)) (g$745$14340 g$745$17260)))) (quote #f))) (g$745$14344 g$745$17254)))) (quote #f))) ((lambda (g$745$17278) (if (g$745$14346 g$745$17278) (if (g$745$14354 g$745$17278 (g$745$14775 (quote else))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$17254)))) (quote #f))) (g$745$14340 g$745$17246)))) (quote #f))) g$745$17198))) g$745$17194))) ((lambda (g$745$17282) (if (equal? (g$745$14366 g$745$17282) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$17194))) g$745$17192))) (call-with-values (lambda () (g$745$17186 g$745$17182)) (lambda (g$745$17189 g$745$17190) (if g$745$17190 (list (list (quote call/cc) (list (quote lambda) (list g$745$17190) (list g$745$17181 (list (quote lambda) (quote ()) g$745$17189))))) (list g$745$17181 (list (quote lambda) (quote ()) g$745$17189))))))) (quote #f) (quote #f)))) ((lambda (g$745$17106) ((lambda (g$745$17108) (if (if g$745$17108 (begin (quote #f) (apply (lambda (g$745$17123 g$745$17124 g$745$17125 g$745$17126) (g$745$14346 g$745$17123)) g$745$17108)) (quote #f)) (apply (lambda (g$745$17113 g$745$17114 g$745$17115 g$745$17116) ((lambda (g$745$17118) (g$745$14809 (list (list (quote call/cc) (list (quote lambda) (list g$745$17118) (list (quote lambda) (quote ()) (list (quote with-exception-handler) (list (quote lambda) (list g$745$17113) (g$745$17104 g$745$17113 g$745$17118 g$745$17114)) (cons (quote lambda) (cons (quote ()) (cons (quote #f) (cons g$745$17115 g$745$17116))))))))))) (gensym))) g$745$17108) (error (quote expander) (quote #3#) (g$745$14364 g$745$17106 (quote ()))))) ((lambda (g$745$17128) (if (g$745$14332 g$745$17128) (begin (quote #f) ((lambda (g$745$17130) (if g$745$17130 (begin (quote #f) ((lambda (g$745$17132) (if g$745$17132 (begin (quote #f) (append g$745$17130 g$745$17132)) (quote #f))) ((lambda (g$745$17134) (if (g$745$14332 g$745$17134) (begin (quote #f) ((lambda (g$745$17136) (if g$745$17136 (begin (quote #f) ((lambda (g$745$17138) (if g$745$17138 (begin (quote #f) (append g$745$17136 g$745$17138)) (quote #f))) ((lambda (g$745$17140) (if (g$745$14332 g$745$17140) (begin (quote #f) ((lambda (g$745$17142) (if g$745$17142 (begin (quote #f) ((lambda (g$745$17144) (if g$745$17144 (begin (quote #f) (append g$745$17142 g$745$17144)) (quote #f))) ((letrec ((g$745$17146 (lambda (g$745$17148) (if (g$745$14332 g$745$17148) ((lambda (g$745$17150) (if g$745$17150 (begin (quote #f) ((lambda (g$745$17152) (if g$745$17152 (begin (quote #f) (map cons g$745$17150 g$745$17152)) (quote #f))) (g$745$17146 (g$745$14344 g$745$17148)))) (quote #f))) ((lambda (g$745$17154) (list g$745$17154)) (g$745$14340 g$745$17148))) (if (g$745$14336 g$745$17148) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$17146) (g$745$14344 g$745$17140)))) (quote #f))) ((lambda (g$745$17156) (list g$745$17156)) (g$745$14340 g$745$17140)))) (quote #f))) (g$745$14344 g$745$17134)))) (quote #f))) ((lambda (g$745$17158) (if (g$745$14332 g$745$17158) (begin (quote #f) ((lambda (g$745$17160) (if g$745$17160 (begin (quote #f) ((lambda (g$745$17162) (if g$745$17162 (begin (quote #f) (append g$745$17160 g$745$17162)) (quote #f))) ((letrec ((g$745$17164 (lambda (g$745$17166) (if (g$745$14332 g$745$17166) ((lambda (g$745$17168) (if g$745$17168 (begin (quote #f) ((lambda (g$745$17170) (if g$745$17170 (begin (quote #f) (map cons g$745$17168 g$745$17170)) (quote #f))) (g$745$17164 (g$745$14344 g$745$17166)))) (quote #f))) ((lambda (g$745$17172) (list g$745$17172)) (g$745$14340 g$745$17166))) (if (g$745$14336 g$745$17166) (list (begin (quote clause*) (quote ()))) (quote #f)))))) g$745$17164) (g$745$14344 g$745$17158)))) (quote #f))) ((lambda (g$745$17174) (list g$745$17174)) (g$745$14340 g$745$17158)))) (quote #f))) (g$745$14340 g$745$17134)))) (quote #f))) (g$745$14344 g$745$17128)))) (quote #f))) ((lambda (g$745$17176) (quote ())) (g$745$14340 g$745$17128)))) (quote #f))) g$745$17106))) g$745$17102))) (quote #f)))) (set! g$745$14821 (lambda (g$745$17396) ((lambda (g$745$17398) (begin (set! g$745$17398 (lambda (g$745$17462) ((lambda (g$745$17464) (if g$745$17464 g$745$17464 (begin (quote #f) (if (not (memq (car g$745$17462) (cdr g$745$17462))) (begin (quote #f) (g$745$17398 (cdr g$745$17462))) (quote #f))))) (null? g$745$17462)))) ((lambda (g$745$17400) ((lambda (g$745$17402) (if (if g$745$17402 (begin (quote #f) (apply (lambda (g$745$17416 g$745$17417 g$745$17418) (if (g$745$14346 g$745$17416) (if (g$745$14346 g$745$17418) (begin (quote #f) (for-all g$745$14346 g$745$17417)) (quote #f)) (quote #f))) g$745$17402)) (quote #f)) (apply (lambda (g$745$17406 g$745$17407 g$745$17408) ((lambda (g$745$17411 g$745$17412) (begin (if (g$745$17398 g$745$17411) (void) (error (quote expander) (quote "duplicate names in enumeration set") (g$745$14364 g$745$17396 (quote ())))) (g$745$14809 (list (quote begin) (list (quote define) g$745$17412 (list (quote enum-set-constructor) (list (quote make-enumeration) (list (quote quote) g$745$17411)))) (list (quote define-syntax) g$745$17406 (list (quote lambda) (quote (x)) (list (quote syntax-case) (quote x) (quote ()) (list (quote (_ n)) (quote (identifier? (syntax n))) (list (quote if) (list (quote memq) (quote (syntax->datum (syntax n))) (list (quote quote) g$745$17411)) (quote (syntax (quote n))) (list (quote syntax-error) (quote x) (quote "not a member of set") (list (quote quote) g$745$17411))))))) (list (quote define-syntax) g$745$17408 (list (quote lambda) (quote (x)) (list (quote syntax-case) (quote x) (quote ()) (list (quote (_ n* ...)) (list (quote begin) (cons (quote for-each) (cons (list (quote lambda) (quote (n)) (quote (unless (identifier? n) (syntax-error x "non-identifier argument"))) (cons (quote unless) (cons (list (quote memq) (quote (syntax->datum n)) (list (quote quote) g$745$17411)) (quote ((syntax-error n "not a member of set")))))) (quote ((syntax (n* ...)))))) (list (quote syntax) (cons g$745$17412 (quote ((quote (n* ...))))))))))))))) (g$745$15004 g$745$17407) (gensym))) g$745$17402) (error (quote expander) (quote #3#) (g$745$14364 g$745$17400 (quote ()))))) ((lambda (g$745$17420) (if (g$745$14332 g$745$17420) (begin (quote #f) ((lambda (g$745$17422) (if g$745$17422 (begin (quote #f) ((lambda (g$745$17424) (if g$745$17424 (begin (quote #f) (append g$745$17422 g$745$17424)) (quote #f))) ((lambda (g$745$17426) (if (g$745$14332 g$745$17426) (begin (quote #f) ((lambda (g$745$17428) (if g$745$17428 (begin (quote #f) ((lambda (g$745$17430) (if g$745$17430 (begin (quote #f) (append g$745$17428 g$745$17430)) (quote #f))) ((lambda (g$745$17432) (if (g$745$14332 g$745$17432) (begin (quote #f) ((lambda (g$745$17434) (if g$745$17434 (begin (quote #f) ((lambda (g$745$17436) (if g$745$17436 (begin (quote #f) (append g$745$17434 g$745$17436)) (quote #f))) ((lambda (g$745$17438) (if (g$745$14332 g$745$17438) (begin (quote #f) ((lambda (g$745$17440) (if g$745$17440 (begin (quote #f) ((lambda (g$745$17442) (if g$745$17442 (begin (quote #f) (append g$745$17440 g$745$17442)) (quote #f))) ((lambda (g$745$17444) (if (equal? (g$745$14366 g$745$17444) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17438)))) (quote #f))) ((lambda (g$745$17446) (list g$745$17446)) (g$745$14340 g$745$17438)))) (quote #f))) (g$745$14344 g$745$17432)))) (quote #f))) ((letrec ((g$745$17448 (lambda (g$745$17450) (if (g$745$14332 g$745$17450) ((lambda (g$745$17452) (if g$745$17452 (begin (quote #f) ((lambda (g$745$17454) (if g$745$17454 (begin (quote #f) (map cons g$745$17452 g$745$17454)) (quote #f))) (g$745$17448 (g$745$14344 g$745$17450)))) (quote #f))) ((lambda (g$745$17456) (list g$745$17456)) (g$745$14340 g$745$17450))) (if (g$745$14336 g$745$17450) (list (begin (quote id*) (quote ()))) (quote #f)))))) g$745$17448) (g$745$14340 g$745$17432)))) (quote #f))) (g$745$14344 g$745$17426)))) (quote #f))) ((lambda (g$745$17458) (list g$745$17458)) (g$745$14340 g$745$17426)))) (quote #f))) (g$745$14344 g$745$17420)))) (quote #f))) ((lambda (g$745$17460) (quote ())) (g$745$14340 g$745$17420)))) (quote #f))) g$745$17400))) g$745$17396))) (quote #f)))) (set! g$745$14823 (lambda (g$745$17466) ((lambda (g$745$17468) ((lambda (g$745$17470) (if (if g$745$17470 (begin (quote #f) (apply (lambda (g$745$17474) (quote #t)) g$745$17470)) (quote #f)) (apply (lambda (g$745$17472) (g$745$14809 (list (quote time-it) (list (quote quote) g$745$17472) (list (quote lambda) (quote ()) g$745$17472)))) g$745$17470) (error (quote expander) (quote #3#) (g$745$14364 g$745$17468 (quote ()))))) ((lambda (g$745$17476) (if (g$745$14332 g$745$17476) (begin (quote #f) ((lambda (g$745$17478) (if g$745$17478 (begin (quote #f) ((lambda (g$745$17480) (if g$745$17480 (begin (quote #f) (append g$745$17478 g$745$17480)) (quote #f))) ((lambda (g$745$17482) (if (g$745$14332 g$745$17482) (begin (quote #f) ((lambda (g$745$17484) (if g$745$17484 (begin (quote #f) ((lambda (g$745$17486) (if g$745$17486 (begin (quote #f) (append g$745$17484 g$745$17486)) (quote #f))) ((lambda (g$745$17488) (if (equal? (g$745$14366 g$745$17488) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17482)))) (quote #f))) ((lambda (g$745$17490) (list g$745$17490)) (g$745$14340 g$745$17482)))) (quote #f))) (g$745$14344 g$745$17476)))) (quote #f))) ((lambda (g$745$17492) (quote ())) (g$745$14340 g$745$17476)))) (quote #f))) g$745$17468))) g$745$17466))) (set! g$745$14825 (lambda (g$745$17494) ((lambda (g$745$17496) ((lambda (g$745$17498) (if (if g$745$17498 (begin (quote #f) (apply (lambda (g$745$17502) (quote #t)) g$745$17498)) (quote #f)) (apply (lambda (g$745$17500) (g$745$14809 (list (quote make-promise) (list (quote lambda) (quote ()) g$745$17500)))) g$745$17498) (error (quote expander) (quote #3#) (g$745$14364 g$745$17496 (quote ()))))) ((lambda (g$745$17504) (if (g$745$14332 g$745$17504) (begin (quote #f) ((lambda (g$745$17506) (if g$745$17506 (begin (quote #f) ((lambda (g$745$17508) (if g$745$17508 (begin (quote #f) (append g$745$17506 g$745$17508)) (quote #f))) ((lambda (g$745$17510) (if (g$745$14332 g$745$17510) (begin (quote #f) ((lambda (g$745$17512) (if g$745$17512 (begin (quote #f) ((lambda (g$745$17514) (if g$745$17514 (begin (quote #f) (append g$745$17512 g$745$17514)) (quote #f))) ((lambda (g$745$17516) (if (equal? (g$745$14366 g$745$17516) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17510)))) (quote #f))) ((lambda (g$745$17518) (list g$745$17518)) (g$745$14340 g$745$17510)))) (quote #f))) (g$745$14344 g$745$17504)))) (quote #f))) ((lambda (g$745$17520) (quote ())) (g$745$14340 g$745$17504)))) (quote #f))) g$745$17496))) g$745$17494))) (set! g$745$14827 (lambda (g$745$17522) ((lambda (g$745$17524) ((lambda (g$745$17526) (if (if g$745$17526 (begin (quote #f) (apply (lambda (g$745$17530) (quote #t)) g$745$17526)) (quote #f)) (apply (lambda (g$745$17528) (g$745$14809 (list (quote unless) g$745$17528 (list (quote error) (quote (quote assert)) (quote "assertion failed") (list (quote quote) g$745$17528))))) g$745$17526) (error (quote expander) (quote #3#) (g$745$14364 g$745$17524 (quote ()))))) ((lambda (g$745$17532) (if (g$745$14332 g$745$17532) (begin (quote #f) ((lambda (g$745$17534) (if g$745$17534 (begin (quote #f) ((lambda (g$745$17536) (if g$745$17536 (begin (quote #f) (append g$745$17534 g$745$17536)) (quote #f))) ((lambda (g$745$17538) (if (g$745$14332 g$745$17538) (begin (quote #f) ((lambda (g$745$17540) (if g$745$17540 (begin (quote #f) ((lambda (g$745$17542) (if g$745$17542 (begin (quote #f) (append g$745$17540 g$745$17542)) (quote #f))) ((lambda (g$745$17544) (if (equal? (g$745$14366 g$745$17544) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17538)))) (quote #f))) ((lambda (g$745$17546) (list g$745$17546)) (g$745$14340 g$745$17538)))) (quote #f))) (g$745$14344 g$745$17532)))) (quote #f))) ((lambda (g$745$17548) (quote ())) (g$745$14340 g$745$17532)))) (quote #f))) g$745$17524))) g$745$17522))) (set! g$745$14829 (lambda (g$745$17550) ((lambda (g$745$17552) ((lambda (g$745$17554) (if (if g$745$17554 (begin (quote #f) (apply (lambda (g$745$17559) (quote #t)) g$745$17554)) (quote #f)) (apply (lambda (g$745$17556) ((lambda (g$745$17557) (if (memv g$745$17557 (quote (little))) (g$745$14809 (quote (quote little))) (if (memv g$745$17557 (quote (big))) (g$745$14809 (quote (quote big))) (error (quote expander) (quote "endianness must be big or little") (g$745$14364 g$745$17550 (quote ())))))) (g$745$15004 g$745$17556))) g$745$17554) (error (quote expander) (quote #3#) (g$745$14364 g$745$17552 (quote ()))))) ((lambda (g$745$17561) (if (g$745$14332 g$745$17561) (begin (quote #f) ((lambda (g$745$17563) (if g$745$17563 (begin (quote #f) ((lambda (g$745$17565) (if g$745$17565 (begin (quote #f) (append g$745$17563 g$745$17565)) (quote #f))) ((lambda (g$745$17567) (if (g$745$14332 g$745$17567) (begin (quote #f) ((lambda (g$745$17569) (if g$745$17569 (begin (quote #f) ((lambda (g$745$17571) (if g$745$17571 (begin (quote #f) (append g$745$17569 g$745$17571)) (quote #f))) ((lambda (g$745$17573) (if (equal? (g$745$14366 g$745$17573) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17567)))) (quote #f))) ((lambda (g$745$17575) (list g$745$17575)) (g$745$14340 g$745$17567)))) (quote #f))) (g$745$14344 g$745$17561)))) (quote #f))) ((lambda (g$745$17577) (quote ())) (g$745$14340 g$745$17561)))) (quote #f))) g$745$17552))) g$745$17550))) (set! g$745$14831 (lambda (g$745$17579) ((lambda (g$745$17581) ((lambda (g$745$17583) (if (if g$745$17583 (begin (quote #f) (apply (lambda (g$745$17693) (quote #t)) g$745$17583)) (quote #f)) (apply (lambda (g$745$17691) (g$745$14809 (list (quote lambda) (quote (x)) (list (quote syntax-case) (quote x) (quote ()) (list (quote id) (quote (identifier? (syntax id))) (list (quote syntax) g$745$17691)) (list (quote (id e* ...)) (quote (identifier? (syntax id))) (cons (quote cons) (cons (list (quote syntax) g$745$17691) (quote ((syntax (e* ...))))))))))) g$745$17583) ((lambda (g$745$17585) ((lambda (g$745$17587) (if (if g$745$17587 (begin (quote #f) (apply (lambda (g$745$17603 g$745$17604 g$745$17605 g$745$17606 g$745$17607) (if (g$745$14346 g$745$17603) (if (g$745$14346 g$745$17605) (begin (quote #f) (g$745$14346 g$745$17606)) (quote #f)) (quote #f))) g$745$17587)) (quote #f)) (apply (lambda (g$745$17593 g$745$17594 g$745$17595 g$745$17596 g$745$17597) (g$745$14809 (list (quote cons) (quote (quote macro!)) (list (quote lambda) (quote (x)) (list (quote syntax-case) (quote x) (quote (set!)) (list (quote id) (quote (identifier? (syntax id))) (list (quote syntax) g$745$17594)) (list (list (quote set!) (quote id) g$745$17596) (list (quote syntax) g$745$17597)) (list (quote (id e* ...)) (quote (identifier? (syntax id))) (list (quote syntax) (cons g$745$17594 (quote (e* ...)))))))))) g$745$17587) (error (quote expander) (quote #3#) (g$745$14364 g$745$17585 (quote ()))))) ((lambda (g$745$17609) (if (g$745$14332 g$745$17609) (begin (quote #f) ((lambda (g$745$17611) (if g$745$17611 (begin (quote #f) ((lambda (g$745$17613) (if g$745$17613 (begin (quote #f) (append g$745$17611 g$745$17613)) (quote #f))) ((lambda (g$745$17615) (if (g$745$14332 g$745$17615) (begin (quote #f) ((lambda (g$745$17617) (if g$745$17617 (begin (quote #f) ((lambda (g$745$17619) (if g$745$17619 (begin (quote #f) (append g$745$17617 g$745$17619)) (quote #f))) ((lambda (g$745$17621) (if (g$745$14332 g$745$17621) (begin (quote #f) ((lambda (g$745$17623) (if g$745$17623 (begin (quote #f) ((lambda (g$745$17625) (if g$745$17625 (begin (quote #f) (append g$745$17623 g$745$17625)) (quote #f))) ((lambda (g$745$17627) (if (equal? (g$745$14366 g$745$17627) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17621)))) (quote #f))) ((lambda (g$745$17629) (if (g$745$14332 g$745$17629) (begin (quote #f) ((lambda (g$745$17631) (if g$745$17631 (begin (quote #f) ((lambda (g$745$17633) (if g$745$17633 (begin (quote #f) (append g$745$17631 g$745$17633)) (quote #f))) ((lambda (g$745$17635) (if (g$745$14332 g$745$17635) (begin (quote #f) ((lambda (g$745$17637) (if g$745$17637 (begin (quote #f) ((lambda (g$745$17639) (if g$745$17639 (begin (quote #f) (append g$745$17637 g$745$17639)) (quote #f))) ((lambda (g$745$17641) (if (equal? (g$745$14366 g$745$17641) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17635)))) (quote #f))) ((lambda (g$745$17643) (list g$745$17643)) (g$745$14340 g$745$17635)))) (quote #f))) (g$745$14344 g$745$17629)))) (quote #f))) ((lambda (g$745$17645) (if (g$745$14332 g$745$17645) (begin (quote #f) ((lambda (g$745$17647) (if g$745$17647 (begin (quote #f) ((lambda (g$745$17649) (if g$745$17649 (begin (quote #f) (append g$745$17647 g$745$17649)) (quote #f))) ((lambda (g$745$17651) (if (g$745$14332 g$745$17651) (begin (quote #f) ((lambda (g$745$17653) (if g$745$17653 (begin (quote #f) ((lambda (g$745$17655) (if g$745$17655 (begin (quote #f) (append g$745$17653 g$745$17655)) (quote #f))) ((lambda (g$745$17657) (if (g$745$14332 g$745$17657) (begin (quote #f) ((lambda (g$745$17659) (if g$745$17659 (begin (quote #f) ((lambda (g$745$17661) (if g$745$17661 (begin (quote #f) (append g$745$17659 g$745$17661)) (quote #f))) ((lambda (g$745$17663) (if (equal? (g$745$14366 g$745$17663) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17657)))) (quote #f))) ((lambda (g$745$17665) (list g$745$17665)) (g$745$14340 g$745$17657)))) (quote #f))) (g$745$14344 g$745$17651)))) (quote #f))) ((lambda (g$745$17667) (list g$745$17667)) (g$745$14340 g$745$17651)))) (quote #f))) (g$745$14344 g$745$17645)))) (quote #f))) ((lambda (g$745$17669) (if (g$745$14346 g$745$17669) (if (g$745$14354 g$745$17669 (g$745$14775 (quote set!))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$17645)))) (quote #f))) (g$745$14340 g$745$17629)))) (quote #f))) (g$745$14340 g$745$17621)))) (quote #f))) (g$745$14344 g$745$17615)))) (quote #f))) ((lambda (g$745$17671) (if (g$745$14332 g$745$17671) (begin (quote #f) ((lambda (g$745$17673) (if g$745$17673 (begin (quote #f) ((lambda (g$745$17675) (if g$745$17675 (begin (quote #f) (append g$745$17673 g$745$17675)) (quote #f))) ((lambda (g$745$17677) (if (g$745$14332 g$745$17677) (begin (quote #f) ((lambda (g$745$17679) (if g$745$17679 (begin (quote #f) ((lambda (g$745$17681) (if g$745$17681 (begin (quote #f) (append g$745$17679 g$745$17681)) (quote #f))) ((lambda (g$745$17683) (if (equal? (g$745$14366 g$745$17683) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17677)))) (quote #f))) ((lambda (g$745$17685) (list g$745$17685)) (g$745$14340 g$745$17677)))) (quote #f))) (g$745$14344 g$745$17671)))) (quote #f))) ((lambda (g$745$17687) (list g$745$17687)) (g$745$14340 g$745$17671)))) (quote #f))) (g$745$14340 g$745$17615)))) (quote #f))) (g$745$14344 g$745$17609)))) (quote #f))) ((lambda (g$745$17689) (quote ())) (g$745$14340 g$745$17609)))) (quote #f))) g$745$17585))) g$745$17581))) ((lambda (g$745$17695) (if (g$745$14332 g$745$17695) (begin (quote #f) ((lambda (g$745$17697) (if g$745$17697 (begin (quote #f) ((lambda (g$745$17699) (if g$745$17699 (begin (quote #f) (append g$745$17697 g$745$17699)) (quote #f))) ((lambda (g$745$17701) (if (g$745$14332 g$745$17701) (begin (quote #f) ((lambda (g$745$17703) (if g$745$17703 (begin (quote #f) ((lambda (g$745$17705) (if g$745$17705 (begin (quote #f) (append g$745$17703 g$745$17705)) (quote #f))) ((lambda (g$745$17707) (if (equal? (g$745$14366 g$745$17707) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17701)))) (quote #f))) ((lambda (g$745$17709) (list g$745$17709)) (g$745$14340 g$745$17701)))) (quote #f))) (g$745$14344 g$745$17695)))) (quote #f))) ((lambda (g$745$17711) (quote ())) (g$745$14340 g$745$17695)))) (quote #f))) g$745$17581))) g$745$17579))) (set! g$745$14833 (lambda (g$745$17713) ((lambda (g$745$17715) (begin (set! g$745$17715 (lambda (g$745$17845) ((lambda (g$745$17847) ((lambda (g$745$17849) (if (if g$745$17849 (begin (quote #f) (apply (lambda (g$745$17904 g$745$17905) (quote #t)) g$745$17849)) (quote #f)) (apply (lambda (g$745$17900 g$745$17901) (list g$745$17900 g$745$17901 g$745$17900)) g$745$17849) ((lambda (g$745$17851) ((lambda (g$745$17853) (if (if g$745$17853 (begin (quote #f) (apply (lambda (g$745$17869 g$745$17870 g$745$17871) (quote #t)) g$745$17853)) (quote #f)) (apply (lambda (g$745$17863 g$745$17864 g$745$17865) (list g$745$17863 g$745$17864 g$745$17865)) g$745$17853) ((lambda (g$745$17855) ((lambda (g$745$17857) (if (if g$745$17857 (begin (quote #f) (apply (lambda () (quote #t)) g$745$17857)) (quote #f)) (apply (lambda () (error (quote expander) (quote "invalid binding") (g$745$14364 g$745$17713 (quote ())))) g$745$17857) (error (quote expander) (quote #3#) (g$745$14364 g$745$17855 (quote ()))))) ((lambda (g$745$17859) (quote ())) g$745$17855))) g$745$17851))) ((lambda (g$745$17873) (if (g$745$14332 g$745$17873) (begin (quote #f) ((lambda (g$745$17875) (if g$745$17875 (begin (quote #f) ((lambda (g$745$17877) (if g$745$17877 (begin (quote #f) (append g$745$17875 g$745$17877)) (quote #f))) ((lambda (g$745$17879) (if (g$745$14332 g$745$17879) (begin (quote #f) ((lambda (g$745$17881) (if g$745$17881 (begin (quote #f) ((lambda (g$745$17883) (if g$745$17883 (begin (quote #f) (append g$745$17881 g$745$17883)) (quote #f))) ((lambda (g$745$17885) (if (g$745$14332 g$745$17885) (begin (quote #f) ((lambda (g$745$17887) (if g$745$17887 (begin (quote #f) ((lambda (g$745$17889) (if g$745$17889 (begin (quote #f) (append g$745$17887 g$745$17889)) (quote #f))) ((lambda (g$745$17891) (if (equal? (g$745$14366 g$745$17891) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17885)))) (quote #f))) ((lambda (g$745$17893) (list g$745$17893)) (g$745$14340 g$745$17885)))) (quote #f))) (g$745$14344 g$745$17879)))) (quote #f))) ((lambda (g$745$17895) (list g$745$17895)) (g$745$14340 g$745$17879)))) (quote #f))) (g$745$14344 g$745$17873)))) (quote #f))) ((lambda (g$745$17897) (list g$745$17897)) (g$745$14340 g$745$17873)))) (quote #f))) g$745$17851))) g$745$17847))) ((lambda (g$745$17907) (if (g$745$14332 g$745$17907) (begin (quote #f) ((lambda (g$745$17909) (if g$745$17909 (begin (quote #f) ((lambda (g$745$17911) (if g$745$17911 (begin (quote #f) (append g$745$17909 g$745$17911)) (quote #f))) ((lambda (g$745$17913) (if (g$745$14332 g$745$17913) (begin (quote #f) ((lambda (g$745$17915) (if g$745$17915 (begin (quote #f) ((lambda (g$745$17917) (if g$745$17917 (begin (quote #f) (append g$745$17915 g$745$17917)) (quote #f))) ((lambda (g$745$17919) (if (equal? (g$745$14366 g$745$17919) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17913)))) (quote #f))) ((lambda (g$745$17921) (list g$745$17921)) (g$745$14340 g$745$17913)))) (quote #f))) (g$745$14344 g$745$17907)))) (quote #f))) ((lambda (g$745$17923) (list g$745$17923)) (g$745$14340 g$745$17907)))) (quote #f))) g$745$17847))) g$745$17845))) ((lambda (g$745$17717) ((lambda (g$745$17719) (if (if g$745$17719 (begin (quote #f) (apply (lambda (g$745$17782 g$745$17783 g$745$17784 g$745$17785) (quote #t)) g$745$17719)) (quote #f)) (apply (lambda (g$745$17724 g$745$17725 g$745$17726 g$745$17727) ((lambda (g$745$17729) ((lambda (g$745$17731) (if (if g$745$17731 (begin (quote #f) (apply (lambda (g$745$17741 g$745$17742 g$745$17743) (quote #t)) g$745$17731)) (quote #f)) (apply (lambda (g$745$17735 g$745$17736 g$745$17737) (if (g$745$14356 g$745$17735) (g$745$14809 (list (quote letrec) (list (list (quote loop) (list (quote lambda) g$745$17735 (list (quote if) g$745$17725 (cons (quote begin) (cons (quote (if #f #f)) g$745$17726)) (cons (quote begin) (append g$745$17727 (list (cons (quote loop) g$745$17737)))))))) (cons (quote loop) g$745$17736))) (error (quote expander) (quote "invalid bindings") (g$745$14364 g$745$17713 (quote ()))))) g$745$17731) (error (quote expander) (quote #3#) (g$745$14364 g$745$17729 (quote ()))))) ((letrec ((g$745$17745 (lambda (g$745$17747) (if (g$745$14332 g$745$17747) ((lambda (g$745$17749) (if g$745$17749 (begin (quote #f) ((lambda (g$745$17751) (if g$745$17751 (begin (quote #f) (map cons g$745$17749 g$745$17751)) (quote #f))) (g$745$17745 (g$745$14344 g$745$17747)))) (quote #f))) ((lambda (g$745$17753) (if (g$745$14332 g$745$17753) (begin (quote #f) ((lambda (g$745$17755) (if g$745$17755 (begin (quote #f) ((lambda (g$745$17757) (if g$745$17757 (begin (quote #f) (append g$745$17755 g$745$17757)) (quote #f))) ((lambda (g$745$17759) (if (g$745$14332 g$745$17759) (begin (quote #f) ((lambda (g$745$17761) (if g$745$17761 (begin (quote #f) ((lambda (g$745$17763) (if g$745$17763 (begin (quote #f) (append g$745$17761 g$745$17763)) (quote #f))) ((lambda (g$745$17765) (if (g$745$14332 g$745$17765) (begin (quote #f) ((lambda (g$745$17767) (if g$745$17767 (begin (quote #f) ((lambda (g$745$17769) (if g$745$17769 (begin (quote #f) (append g$745$17767 g$745$17769)) (quote #f))) ((lambda (g$745$17771) (if (equal? (g$745$14366 g$745$17771) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17765)))) (quote #f))) ((lambda (g$745$17773) (list g$745$17773)) (g$745$14340 g$745$17765)))) (quote #f))) (g$745$14344 g$745$17759)))) (quote #f))) ((lambda (g$745$17775) (list g$745$17775)) (g$745$14340 g$745$17759)))) (quote #f))) (g$745$14344 g$745$17753)))) (quote #f))) ((lambda (g$745$17777) (list g$745$17777)) (g$745$14340 g$745$17753)))) (quote #f))) (g$745$14340 g$745$17747))) (if (g$745$14336 g$745$17747) (list (begin (quote x*) (quote ())) (begin (quote init*) (quote ())) (begin (quote step*) (quote ()))) (quote #f)))))) g$745$17745) g$745$17729))) (map g$745$17715 g$745$17724))) g$745$17719) (error (quote expander) (quote #3#) (g$745$14364 g$745$17717 (quote ()))))) ((lambda (g$745$17787) (if (g$745$14332 g$745$17787) (begin (quote #f) ((lambda (g$745$17789) (if g$745$17789 (begin (quote #f) ((lambda (g$745$17791) (if g$745$17791 (begin (quote #f) (append g$745$17789 g$745$17791)) (quote #f))) ((lambda (g$745$17793) (if (g$745$14332 g$745$17793) (begin (quote #f) ((lambda (g$745$17795) (if g$745$17795 (begin (quote #f) ((lambda (g$745$17797) (if g$745$17797 (begin (quote #f) (append g$745$17795 g$745$17797)) (quote #f))) ((lambda (g$745$17799) (if (g$745$14332 g$745$17799) (begin (quote #f) ((lambda (g$745$17801) (if g$745$17801 (begin (quote #f) ((lambda (g$745$17803) (if g$745$17803 (begin (quote #f) (append g$745$17801 g$745$17803)) (quote #f))) ((letrec ((g$745$17805 (lambda (g$745$17807) (if (g$745$14332 g$745$17807) ((lambda (g$745$17809) (if g$745$17809 (begin (quote #f) ((lambda (g$745$17811) (if g$745$17811 (begin (quote #f) (map cons g$745$17809 g$745$17811)) (quote #f))) (g$745$17805 (g$745$14344 g$745$17807)))) (quote #f))) ((lambda (g$745$17813) (list g$745$17813)) (g$745$14340 g$745$17807))) (if (g$745$14336 g$745$17807) (list (begin (quote command*) (quote ()))) (quote #f)))))) g$745$17805) (g$745$14344 g$745$17799)))) (quote #f))) ((lambda (g$745$17815) (if (g$745$14332 g$745$17815) (begin (quote #f) ((lambda (g$745$17817) (if g$745$17817 (begin (quote #f) ((lambda (g$745$17819) (if g$745$17819 (begin (quote #f) (append g$745$17817 g$745$17819)) (quote #f))) ((letrec ((g$745$17821 (lambda (g$745$17823) (if (g$745$14332 g$745$17823) ((lambda (g$745$17825) (if g$745$17825 (begin (quote #f) ((lambda (g$745$17827) (if g$745$17827 (begin (quote #f) (map cons g$745$17825 g$745$17827)) (quote #f))) (g$745$17821 (g$745$14344 g$745$17823)))) (quote #f))) ((lambda (g$745$17829) (list g$745$17829)) (g$745$14340 g$745$17823))) (if (g$745$14336 g$745$17823) (list (begin (quote expr*) (quote ()))) (quote #f)))))) g$745$17821) (g$745$14344 g$745$17815)))) (quote #f))) ((lambda (g$745$17831) (list g$745$17831)) (g$745$14340 g$745$17815)))) (quote #f))) (g$745$14340 g$745$17799)))) (quote #f))) (g$745$14344 g$745$17793)))) (quote #f))) ((letrec ((g$745$17833 (lambda (g$745$17835) (if (g$745$14332 g$745$17835) ((lambda (g$745$17837) (if g$745$17837 (begin (quote #f) ((lambda (g$745$17839) (if g$745$17839 (begin (quote #f) (map cons g$745$17837 g$745$17839)) (quote #f))) (g$745$17833 (g$745$14344 g$745$17835)))) (quote #f))) ((lambda (g$745$17841) (list g$745$17841)) (g$745$14340 g$745$17835))) (if (g$745$14336 g$745$17835) (list (begin (quote binding*) (quote ()))) (quote #f)))))) g$745$17833) (g$745$14340 g$745$17793)))) (quote #f))) (g$745$14344 g$745$17787)))) (quote #f))) ((lambda (g$745$17843) (quote ())) (g$745$14340 g$745$17787)))) (quote #f))) g$745$17717))) g$745$17713))) (quote #f)))) (set! g$745$14835 (lambda (g$745$17925) ((lambda (g$745$17927) ((lambda (g$745$17929) (if (if g$745$17929 (begin (quote #f) (apply (lambda (g$745$17946 g$745$17947 g$745$17948 g$745$17949) (for-all g$745$14346 g$745$17946)) g$745$17929)) (quote #f)) (apply (lambda (g$745$17934 g$745$17935 g$745$17936 g$745$17937) (g$745$14809 (letrec ((g$745$17939 (lambda (g$745$17941) (if (null? g$745$17941) (cons (quote let) (cons (quote ()) (cons g$745$17936 g$745$17937))) (list (quote let) (list (car g$745$17941)) (g$745$17939 (cdr g$745$17941))))))) (g$745$17939 (map list g$745$17934 g$745$17935))))) g$745$17929) (error (quote expander) (quote #3#) (g$745$14364 g$745$17927 (quote ()))))) ((lambda (g$745$17951) (if (g$745$14332 g$745$17951) (begin (quote #f) ((lambda (g$745$17953) (if g$745$17953 (begin (quote #f) ((lambda (g$745$17955) (if g$745$17955 (begin (quote #f) (append g$745$17953 g$745$17955)) (quote #f))) ((lambda (g$745$17957) (if (g$745$14332 g$745$17957) (begin (quote #f) ((lambda (g$745$17959) (if g$745$17959 (begin (quote #f) ((lambda (g$745$17961) (if g$745$17961 (begin (quote #f) (append g$745$17959 g$745$17961)) (quote #f))) ((lambda (g$745$17963) (if (g$745$14332 g$745$17963) (begin (quote #f) ((lambda (g$745$17965) (if g$745$17965 (begin (quote #f) ((lambda (g$745$17967) (if g$745$17967 (begin (quote #f) (append g$745$17965 g$745$17967)) (quote #f))) ((letrec ((g$745$17969 (lambda (g$745$17971) (if (g$745$14332 g$745$17971) ((lambda (g$745$17973) (if g$745$17973 (begin (quote #f) ((lambda (g$745$17975) (if g$745$17975 (begin (quote #f) (map cons g$745$17973 g$745$17975)) (quote #f))) (g$745$17969 (g$745$14344 g$745$17971)))) (quote #f))) ((lambda (g$745$17977) (list g$745$17977)) (g$745$14340 g$745$17971))) (if (g$745$14336 g$745$17971) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$17969) (g$745$14344 g$745$17963)))) (quote #f))) ((lambda (g$745$17979) (list g$745$17979)) (g$745$14340 g$745$17963)))) (quote #f))) (g$745$14344 g$745$17957)))) (quote #f))) ((letrec ((g$745$17981 (lambda (g$745$17983) (if (g$745$14332 g$745$17983) ((lambda (g$745$17985) (if g$745$17985 (begin (quote #f) ((lambda (g$745$17987) (if g$745$17987 (begin (quote #f) (map cons g$745$17985 g$745$17987)) (quote #f))) (g$745$17981 (g$745$14344 g$745$17983)))) (quote #f))) ((lambda (g$745$17989) (if (g$745$14332 g$745$17989) (begin (quote #f) ((lambda (g$745$17991) (if g$745$17991 (begin (quote #f) ((lambda (g$745$17993) (if g$745$17993 (begin (quote #f) (append g$745$17991 g$745$17993)) (quote #f))) ((lambda (g$745$17995) (if (g$745$14332 g$745$17995) (begin (quote #f) ((lambda (g$745$17997) (if g$745$17997 (begin (quote #f) ((lambda (g$745$17999) (if g$745$17999 (begin (quote #f) (append g$745$17997 g$745$17999)) (quote #f))) ((lambda (g$745$18001) (if (equal? (g$745$14366 g$745$18001) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$17995)))) (quote #f))) ((lambda (g$745$18003) (list g$745$18003)) (g$745$14340 g$745$17995)))) (quote #f))) (g$745$14344 g$745$17989)))) (quote #f))) ((lambda (g$745$18005) (list g$745$18005)) (g$745$14340 g$745$17989)))) (quote #f))) (g$745$14340 g$745$17983))) (if (g$745$14336 g$745$17983) (list (begin (quote lhs*) (quote ())) (begin (quote rhs*) (quote ()))) (quote #f)))))) g$745$17981) (g$745$14340 g$745$17957)))) (quote #f))) (g$745$14344 g$745$17951)))) (quote #f))) ((lambda (g$745$18007) (quote ())) (g$745$14340 g$745$17951)))) (quote #f))) g$745$17927))) g$745$17925))) (set! g$745$14837 (lambda (g$745$18009) ((lambda (g$745$18011) ((lambda (g$745$18013) (if (if g$745$18013 (begin (quote #f) (apply (lambda () (quote #t)) g$745$18013)) (quote #f)) (apply (lambda () (quote #f)) g$745$18013) ((lambda (g$745$18015) ((lambda (g$745$18017) (if (if g$745$18017 (begin (quote #f) (apply (lambda (g$745$18030 g$745$18031) (quote #t)) g$745$18017)) (quote #f)) (apply (lambda (g$745$18020 g$745$18021) (g$745$14809 (letrec ((g$745$18023 (lambda (g$745$18026 g$745$18027) (if (null? g$745$18027) (list (quote begin) (quote #f) g$745$18026) (list (quote let) (list (list (quote t) g$745$18026)) (list (quote if) (quote t) (quote t) (g$745$18023 (car g$745$18027) (cdr g$745$18027)))))))) (g$745$18023 g$745$18020 g$745$18021)))) g$745$18017) (error (quote expander) (quote #3#) (g$745$14364 g$745$18015 (quote ()))))) ((lambda (g$745$18033) (if (g$745$14332 g$745$18033) (begin (quote #f) ((lambda (g$745$18035) (if g$745$18035 (begin (quote #f) ((lambda (g$745$18037) (if g$745$18037 (begin (quote #f) (append g$745$18035 g$745$18037)) (quote #f))) ((lambda (g$745$18039) (if (g$745$14332 g$745$18039) (begin (quote #f) ((lambda (g$745$18041) (if g$745$18041 (begin (quote #f) ((lambda (g$745$18043) (if g$745$18043 (begin (quote #f) (append g$745$18041 g$745$18043)) (quote #f))) ((letrec ((g$745$18045 (lambda (g$745$18047) (if (g$745$14332 g$745$18047) ((lambda (g$745$18049) (if g$745$18049 (begin (quote #f) ((lambda (g$745$18051) (if g$745$18051 (begin (quote #f) (map cons g$745$18049 g$745$18051)) (quote #f))) (g$745$18045 (g$745$14344 g$745$18047)))) (quote #f))) ((lambda (g$745$18053) (list g$745$18053)) (g$745$14340 g$745$18047))) (if (g$745$14336 g$745$18047) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$18045) (g$745$14344 g$745$18039)))) (quote #f))) ((lambda (g$745$18055) (list g$745$18055)) (g$745$14340 g$745$18039)))) (quote #f))) (g$745$14344 g$745$18033)))) (quote #f))) ((lambda (g$745$18057) (quote ())) (g$745$14340 g$745$18033)))) (quote #f))) g$745$18015))) g$745$18011))) ((lambda (g$745$18059) (if (g$745$14332 g$745$18059) (begin (quote #f) ((lambda (g$745$18061) (if g$745$18061 (begin (quote #f) ((lambda (g$745$18063) (if g$745$18063 (begin (quote #f) (append g$745$18061 g$745$18063)) (quote #f))) ((lambda (g$745$18065) (if (equal? (g$745$14366 g$745$18065) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18059)))) (quote #f))) ((lambda (g$745$18067) (quote ())) (g$745$14340 g$745$18059)))) (quote #f))) g$745$18011))) g$745$18009))) (set! g$745$14839 (lambda (g$745$18069) ((lambda (g$745$18071) ((lambda (g$745$18073) (if (if g$745$18073 (begin (quote #f) (apply (lambda () (quote #t)) g$745$18073)) (quote #f)) (apply (lambda () (quote #t)) g$745$18073) ((lambda (g$745$18075) ((lambda (g$745$18077) (if (if g$745$18077 (begin (quote #f) (apply (lambda (g$745$18090 g$745$18091) (quote #t)) g$745$18077)) (quote #f)) (apply (lambda (g$745$18080 g$745$18081) (g$745$14809 (letrec ((g$745$18083 (lambda (g$745$18086 g$745$18087) (if (null? g$745$18087) (list (quote begin) (quote #f) g$745$18086) (cons (quote if) (cons g$745$18086 (cons (g$745$18083 (car g$745$18087) (cdr g$745$18087)) (quote (#f))))))))) (g$745$18083 g$745$18080 g$745$18081)))) g$745$18077) (error (quote expander) (quote #3#) (g$745$14364 g$745$18075 (quote ()))))) ((lambda (g$745$18093) (if (g$745$14332 g$745$18093) (begin (quote #f) ((lambda (g$745$18095) (if g$745$18095 (begin (quote #f) ((lambda (g$745$18097) (if g$745$18097 (begin (quote #f) (append g$745$18095 g$745$18097)) (quote #f))) ((lambda (g$745$18099) (if (g$745$14332 g$745$18099) (begin (quote #f) ((lambda (g$745$18101) (if g$745$18101 (begin (quote #f) ((lambda (g$745$18103) (if g$745$18103 (begin (quote #f) (append g$745$18101 g$745$18103)) (quote #f))) ((letrec ((g$745$18105 (lambda (g$745$18107) (if (g$745$14332 g$745$18107) ((lambda (g$745$18109) (if g$745$18109 (begin (quote #f) ((lambda (g$745$18111) (if g$745$18111 (begin (quote #f) (map cons g$745$18109 g$745$18111)) (quote #f))) (g$745$18105 (g$745$14344 g$745$18107)))) (quote #f))) ((lambda (g$745$18113) (list g$745$18113)) (g$745$14340 g$745$18107))) (if (g$745$14336 g$745$18107) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$18105) (g$745$14344 g$745$18099)))) (quote #f))) ((lambda (g$745$18115) (list g$745$18115)) (g$745$14340 g$745$18099)))) (quote #f))) (g$745$14344 g$745$18093)))) (quote #f))) ((lambda (g$745$18117) (quote ())) (g$745$14340 g$745$18093)))) (quote #f))) g$745$18075))) g$745$18071))) ((lambda (g$745$18119) (if (g$745$14332 g$745$18119) (begin (quote #f) ((lambda (g$745$18121) (if g$745$18121 (begin (quote #f) ((lambda (g$745$18123) (if g$745$18123 (begin (quote #f) (append g$745$18121 g$745$18123)) (quote #f))) ((lambda (g$745$18125) (if (equal? (g$745$14366 g$745$18125) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18119)))) (quote #f))) ((lambda (g$745$18127) (quote ())) (g$745$14340 g$745$18119)))) (quote #f))) g$745$18071))) g$745$18069))) (set! g$745$14841 (lambda (g$745$18129) ((lambda (g$745$18131) ((lambda (g$745$18133) (if (if g$745$18133 (begin (quote #f) (apply (lambda (g$745$18406 g$745$18407) (quote #t)) g$745$18133)) (quote #f)) (apply (lambda (g$745$18136 g$745$18137) (g$745$14809 (letrec ((g$745$18139 (lambda (g$745$18142 g$745$18143) (if (null? g$745$18143) ((lambda (g$745$18275) ((lambda (g$745$18277) (if (if g$745$18277 (begin (quote #f) (apply (lambda (g$745$18376 g$745$18377) (quote #t)) g$745$18277)) (quote #f)) (apply (lambda (g$745$18372 g$745$18373) (cons (quote begin) (cons g$745$18372 g$745$18373))) g$745$18277) ((lambda (g$745$18279) ((lambda (g$745$18281) (if (if g$745$18281 (begin (quote #f) (apply (lambda (g$745$18342 g$745$18343) (quote #t)) g$745$18281)) (quote #f)) (apply (lambda (g$745$18338 g$745$18339) (list (quote let) (list (list (quote t) g$745$18338)) (list (quote if) (quote t) (cons g$745$18339 (quote (t)))))) g$745$18281) ((lambda (g$745$18283) ((lambda (g$745$18285) (if (if g$745$18285 (begin (quote #f) (apply (lambda (g$745$18325) (quote #t)) g$745$18285)) (quote #f)) (apply (lambda (g$745$18323) (cons (quote or) (cons g$745$18323 (quote ((if #f #f)))))) g$745$18285) ((lambda (g$745$18287) ((lambda (g$745$18289) (if (if g$745$18289 (begin (quote #f) (apply (lambda (g$745$18302 g$745$18303) (quote #t)) g$745$18289)) (quote #f)) (apply (lambda (g$745$18298 g$745$18299) (list (quote if) g$745$18298 (cons (quote begin) g$745$18299))) g$745$18289) ((lambda (g$745$18291) ((lambda (g$745$18293) (if (if g$745$18293 (begin (quote #f) (apply (lambda () (quote #t)) g$745$18293)) (quote #f)) (apply (lambda () (error (quote expander) (quote "invalid last clause") (g$745$14364 g$745$18129 (quote ())))) g$745$18293) (error (quote expander) (quote #3#) (g$745$14364 g$745$18291 (quote ()))))) ((lambda (g$745$18295) (quote ())) g$745$18291))) g$745$18287))) ((lambda (g$745$18305) (if (g$745$14332 g$745$18305) (begin (quote #f) ((lambda (g$745$18307) (if g$745$18307 (begin (quote #f) ((lambda (g$745$18309) (if g$745$18309 (begin (quote #f) (append g$745$18307 g$745$18309)) (quote #f))) ((letrec ((g$745$18311 (lambda (g$745$18313) (if (g$745$14332 g$745$18313) ((lambda (g$745$18315) (if g$745$18315 (begin (quote #f) ((lambda (g$745$18317) (if g$745$18317 (begin (quote #f) (map cons g$745$18315 g$745$18317)) (quote #f))) (g$745$18311 (g$745$14344 g$745$18313)))) (quote #f))) ((lambda (g$745$18319) (list g$745$18319)) (g$745$14340 g$745$18313))) (if (g$745$14336 g$745$18313) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$18311) (g$745$14344 g$745$18305)))) (quote #f))) ((lambda (g$745$18321) (list g$745$18321)) (g$745$14340 g$745$18305)))) (quote #f))) g$745$18287))) g$745$18283))) ((lambda (g$745$18327) (if (g$745$14332 g$745$18327) (begin (quote #f) ((lambda (g$745$18329) (if g$745$18329 (begin (quote #f) ((lambda (g$745$18331) (if g$745$18331 (begin (quote #f) (append g$745$18329 g$745$18331)) (quote #f))) ((lambda (g$745$18333) (if (equal? (g$745$14366 g$745$18333) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18327)))) (quote #f))) ((lambda (g$745$18335) (list g$745$18335)) (g$745$14340 g$745$18327)))) (quote #f))) g$745$18283))) g$745$18279))) ((lambda (g$745$18345) (if (g$745$14332 g$745$18345) (begin (quote #f) ((lambda (g$745$18347) (if g$745$18347 (begin (quote #f) ((lambda (g$745$18349) (if g$745$18349 (begin (quote #f) (append g$745$18347 g$745$18349)) (quote #f))) ((lambda (g$745$18351) (if (g$745$14332 g$745$18351) (begin (quote #f) ((lambda (g$745$18353) (if g$745$18353 (begin (quote #f) ((lambda (g$745$18355) (if g$745$18355 (begin (quote #f) (append g$745$18353 g$745$18355)) (quote #f))) ((lambda (g$745$18357) (if (g$745$14332 g$745$18357) (begin (quote #f) ((lambda (g$745$18359) (if g$745$18359 (begin (quote #f) ((lambda (g$745$18361) (if g$745$18361 (begin (quote #f) (append g$745$18359 g$745$18361)) (quote #f))) ((lambda (g$745$18363) (if (equal? (g$745$14366 g$745$18363) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18357)))) (quote #f))) ((lambda (g$745$18365) (list g$745$18365)) (g$745$14340 g$745$18357)))) (quote #f))) (g$745$14344 g$745$18351)))) (quote #f))) ((lambda (g$745$18367) (if (g$745$14346 g$745$18367) (if (g$745$14354 g$745$18367 (g$745$14775 (quote =>))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18351)))) (quote #f))) (g$745$14344 g$745$18345)))) (quote #f))) ((lambda (g$745$18369) (list g$745$18369)) (g$745$14340 g$745$18345)))) (quote #f))) g$745$18279))) g$745$18275))) ((lambda (g$745$18379) (if (g$745$14332 g$745$18379) (begin (quote #f) ((lambda (g$745$18381) (if g$745$18381 (begin (quote #f) ((lambda (g$745$18383) (if g$745$18383 (begin (quote #f) (append g$745$18381 g$745$18383)) (quote #f))) ((lambda (g$745$18385) (if (g$745$14332 g$745$18385) (begin (quote #f) ((lambda (g$745$18387) (if g$745$18387 (begin (quote #f) ((lambda (g$745$18389) (if g$745$18389 (begin (quote #f) (append g$745$18387 g$745$18389)) (quote #f))) ((letrec ((g$745$18391 (lambda (g$745$18393) (if (g$745$14332 g$745$18393) ((lambda (g$745$18395) (if g$745$18395 (begin (quote #f) ((lambda (g$745$18397) (if g$745$18397 (begin (quote #f) (map cons g$745$18395 g$745$18397)) (quote #f))) (g$745$18391 (g$745$14344 g$745$18393)))) (quote #f))) ((lambda (g$745$18399) (list g$745$18399)) (g$745$14340 g$745$18393))) (if (g$745$14336 g$745$18393) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$18391) (g$745$14344 g$745$18385)))) (quote #f))) ((lambda (g$745$18401) (list g$745$18401)) (g$745$14340 g$745$18385)))) (quote #f))) (g$745$14344 g$745$18379)))) (quote #f))) ((lambda (g$745$18403) (if (g$745$14346 g$745$18403) (if (g$745$14354 g$745$18403 (g$745$14775 (quote else))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18379)))) (quote #f))) g$745$18275))) g$745$18142) ((lambda (g$745$18145) ((lambda (g$745$18147) (if (if g$745$18147 (begin (quote #f) (apply (lambda (g$745$18246 g$745$18247) (quote #t)) g$745$18147)) (quote #f)) (apply (lambda (g$745$18242 g$745$18243) (error (quote expander) (quote "incorrect position of keyword else") (g$745$14364 g$745$18129 (quote ())))) g$745$18147) ((lambda (g$745$18149) ((lambda (g$745$18151) (if (if g$745$18151 (begin (quote #f) (apply (lambda (g$745$18212 g$745$18213) (quote #t)) g$745$18151)) (quote #f)) (apply (lambda (g$745$18208 g$745$18209) (list (quote let) (list (list (quote t) g$745$18208)) (list (quote if) (quote t) (cons g$745$18209 (quote (t))) (g$745$18139 (car g$745$18143) (cdr g$745$18143))))) g$745$18151) ((lambda (g$745$18153) ((lambda (g$745$18155) (if (if g$745$18155 (begin (quote #f) (apply (lambda (g$745$18195) (quote #t)) g$745$18155)) (quote #f)) (apply (lambda (g$745$18193) (list (quote or) g$745$18193 (g$745$18139 (car g$745$18143) (cdr g$745$18143)))) g$745$18155) ((lambda (g$745$18157) ((lambda (g$745$18159) (if (if g$745$18159 (begin (quote #f) (apply (lambda (g$745$18172 g$745$18173) (quote #t)) g$745$18159)) (quote #f)) (apply (lambda (g$745$18168 g$745$18169) (list (quote if) g$745$18168 (cons (quote begin) g$745$18169) (g$745$18139 (car g$745$18143) (cdr g$745$18143)))) g$745$18159) ((lambda (g$745$18161) ((lambda (g$745$18163) (if (if g$745$18163 (begin (quote #f) (apply (lambda () (quote #t)) g$745$18163)) (quote #f)) (apply (lambda () (error (quote expander) (quote "invalid last clause") (g$745$14364 g$745$18129 (quote ())))) g$745$18163) (error (quote expander) (quote #3#) (g$745$14364 g$745$18161 (quote ()))))) ((lambda (g$745$18165) (quote ())) g$745$18161))) g$745$18157))) ((lambda (g$745$18175) (if (g$745$14332 g$745$18175) (begin (quote #f) ((lambda (g$745$18177) (if g$745$18177 (begin (quote #f) ((lambda (g$745$18179) (if g$745$18179 (begin (quote #f) (append g$745$18177 g$745$18179)) (quote #f))) ((letrec ((g$745$18181 (lambda (g$745$18183) (if (g$745$14332 g$745$18183) ((lambda (g$745$18185) (if g$745$18185 (begin (quote #f) ((lambda (g$745$18187) (if g$745$18187 (begin (quote #f) (map cons g$745$18185 g$745$18187)) (quote #f))) (g$745$18181 (g$745$14344 g$745$18183)))) (quote #f))) ((lambda (g$745$18189) (list g$745$18189)) (g$745$14340 g$745$18183))) (if (g$745$14336 g$745$18183) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$18181) (g$745$14344 g$745$18175)))) (quote #f))) ((lambda (g$745$18191) (list g$745$18191)) (g$745$14340 g$745$18175)))) (quote #f))) g$745$18157))) g$745$18153))) ((lambda (g$745$18197) (if (g$745$14332 g$745$18197) (begin (quote #f) ((lambda (g$745$18199) (if g$745$18199 (begin (quote #f) ((lambda (g$745$18201) (if g$745$18201 (begin (quote #f) (append g$745$18199 g$745$18201)) (quote #f))) ((lambda (g$745$18203) (if (equal? (g$745$14366 g$745$18203) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18197)))) (quote #f))) ((lambda (g$745$18205) (list g$745$18205)) (g$745$14340 g$745$18197)))) (quote #f))) g$745$18153))) g$745$18149))) ((lambda (g$745$18215) (if (g$745$14332 g$745$18215) (begin (quote #f) ((lambda (g$745$18217) (if g$745$18217 (begin (quote #f) ((lambda (g$745$18219) (if g$745$18219 (begin (quote #f) (append g$745$18217 g$745$18219)) (quote #f))) ((lambda (g$745$18221) (if (g$745$14332 g$745$18221) (begin (quote #f) ((lambda (g$745$18223) (if g$745$18223 (begin (quote #f) ((lambda (g$745$18225) (if g$745$18225 (begin (quote #f) (append g$745$18223 g$745$18225)) (quote #f))) ((lambda (g$745$18227) (if (g$745$14332 g$745$18227) (begin (quote #f) ((lambda (g$745$18229) (if g$745$18229 (begin (quote #f) ((lambda (g$745$18231) (if g$745$18231 (begin (quote #f) (append g$745$18229 g$745$18231)) (quote #f))) ((lambda (g$745$18233) (if (equal? (g$745$14366 g$745$18233) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18227)))) (quote #f))) ((lambda (g$745$18235) (list g$745$18235)) (g$745$14340 g$745$18227)))) (quote #f))) (g$745$14344 g$745$18221)))) (quote #f))) ((lambda (g$745$18237) (if (g$745$14346 g$745$18237) (if (g$745$14354 g$745$18237 (g$745$14775 (quote =>))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18221)))) (quote #f))) (g$745$14344 g$745$18215)))) (quote #f))) ((lambda (g$745$18239) (list g$745$18239)) (g$745$14340 g$745$18215)))) (quote #f))) g$745$18149))) g$745$18145))) ((lambda (g$745$18249) (if (g$745$14332 g$745$18249) (begin (quote #f) ((lambda (g$745$18251) (if g$745$18251 (begin (quote #f) ((lambda (g$745$18253) (if g$745$18253 (begin (quote #f) (append g$745$18251 g$745$18253)) (quote #f))) ((lambda (g$745$18255) (if (g$745$14332 g$745$18255) (begin (quote #f) ((lambda (g$745$18257) (if g$745$18257 (begin (quote #f) ((lambda (g$745$18259) (if g$745$18259 (begin (quote #f) (append g$745$18257 g$745$18259)) (quote #f))) ((letrec ((g$745$18261 (lambda (g$745$18263) (if (g$745$14332 g$745$18263) ((lambda (g$745$18265) (if g$745$18265 (begin (quote #f) ((lambda (g$745$18267) (if g$745$18267 (begin (quote #f) (map cons g$745$18265 g$745$18267)) (quote #f))) (g$745$18261 (g$745$14344 g$745$18263)))) (quote #f))) ((lambda (g$745$18269) (list g$745$18269)) (g$745$14340 g$745$18263))) (if (g$745$14336 g$745$18263) (list (begin (quote e*) (quote ()))) (quote #f)))))) g$745$18261) (g$745$14344 g$745$18255)))) (quote #f))) ((lambda (g$745$18271) (list g$745$18271)) (g$745$14340 g$745$18255)))) (quote #f))) (g$745$14344 g$745$18249)))) (quote #f))) ((lambda (g$745$18273) (if (g$745$14346 g$745$18273) (if (g$745$14354 g$745$18273 (g$745$14775 (quote else))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18249)))) (quote #f))) g$745$18145))) g$745$18142))))) (g$745$18139 g$745$18136 g$745$18137)))) g$745$18133) (error (quote expander) (quote #3#) (g$745$14364 g$745$18131 (quote ()))))) ((lambda (g$745$18409) (if (g$745$14332 g$745$18409) (begin (quote #f) ((lambda (g$745$18411) (if g$745$18411 (begin (quote #f) ((lambda (g$745$18413) (if g$745$18413 (begin (quote #f) (append g$745$18411 g$745$18413)) (quote #f))) ((lambda (g$745$18415) (if (g$745$14332 g$745$18415) (begin (quote #f) ((lambda (g$745$18417) (if g$745$18417 (begin (quote #f) ((lambda (g$745$18419) (if g$745$18419 (begin (quote #f) (append g$745$18417 g$745$18419)) (quote #f))) ((letrec ((g$745$18421 (lambda (g$745$18423) (if (g$745$14332 g$745$18423) ((lambda (g$745$18425) (if g$745$18425 (begin (quote #f) ((lambda (g$745$18427) (if g$745$18427 (begin (quote #f) (map cons g$745$18425 g$745$18427)) (quote #f))) (g$745$18421 (g$745$14344 g$745$18423)))) (quote #f))) ((lambda (g$745$18429) (list g$745$18429)) (g$745$14340 g$745$18423))) (if (g$745$14336 g$745$18423) (list (begin (quote cls*) (quote ()))) (quote #f)))))) g$745$18421) (g$745$14344 g$745$18415)))) (quote #f))) ((lambda (g$745$18431) (list g$745$18431)) (g$745$14340 g$745$18415)))) (quote #f))) (g$745$14344 g$745$18409)))) (quote #f))) ((lambda (g$745$18433) (quote ())) (g$745$14340 g$745$18409)))) (quote #f))) g$745$18131))) g$745$18129))) (set! g$745$14843 (lambda (g$745$18435) ((lambda (g$745$18437) ((lambda (g$745$18439) (if (if g$745$18439 (begin (quote #f) (apply (lambda (g$745$18454 g$745$18455) (quote #t)) g$745$18439)) (quote #f)) (apply (lambda (g$745$18442 g$745$18443) ((lambda (g$745$18445) (begin (if (string? g$745$18445) (void) (error (quote expander) (quote #4#) (g$745$14366 g$745$18435))) (with-input-from-file g$745$18445 (lambda () (letrec ((g$745$18447 (lambda (g$745$18449) ((lambda (g$745$18451) (if (eof-object? g$745$18451) (cons (g$745$14809 (quote begin)) (g$745$14312 g$745$18442 (reverse g$745$18449))) (g$745$18447 (cons g$745$18451 g$745$18449)))) (read))))) (g$745$18447 (quote ()))))))) (g$745$14366 g$745$18443))) g$745$18439) (error (quote expander) (quote #3#) (g$745$14364 g$745$18437 (quote ()))))) ((lambda (g$745$18457) (if (g$745$14332 g$745$18457) (begin (quote #f) ((lambda (g$745$18459) (if g$745$18459 (begin (quote #f) ((lambda (g$745$18461) (if g$745$18461 (begin (quote #f) (append g$745$18459 g$745$18461)) (quote #f))) ((lambda (g$745$18463) (if (g$745$14332 g$745$18463) (begin (quote #f) ((lambda (g$745$18465) (if g$745$18465 (begin (quote #f) ((lambda (g$745$18467) (if g$745$18467 (begin (quote #f) (append g$745$18465 g$745$18467)) (quote #f))) ((lambda (g$745$18469) (if (equal? (g$745$14366 g$745$18469) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18463)))) (quote #f))) ((lambda (g$745$18471) (list g$745$18471)) (g$745$14340 g$745$18463)))) (quote #f))) (g$745$14344 g$745$18457)))) (quote #f))) ((lambda (g$745$18473) (list g$745$18473)) (g$745$14340 g$745$18457)))) (quote #f))) g$745$18437))) g$745$18435))) (set! g$745$14845 (lambda (g$745$18475) ((lambda (g$745$18477) ((lambda (g$745$18479) (if (if g$745$18479 (begin (quote #f) (apply (lambda (g$745$18495 g$745$18496 g$745$18497) (quote #t)) g$745$18479)) (quote #f)) (apply (lambda (g$745$18483 g$745$18484 g$745$18485) (begin (if (for-all (lambda (g$745$18487) (if (g$745$14346 g$745$18487) (if (not (g$745$14354 g$745$18487 (g$745$14775 (quote ...)))) (begin (quote #f) (not (g$745$14354 g$745$18487 (g$745$14775 (quote _))))) (quote #f)) (quote #f))) g$745$18483) (void) (error (quote expander) (quote "invalid literals") (g$745$14364 g$745$18475 (quote ())))) (g$745$14809 (list (quote lambda) (quote (x)) (cons (quote syntax-case) (cons (quote x) (cons g$745$18483 (map (lambda (g$745$18490 g$745$18491) (list g$745$18490 (list (quote syntax) g$745$18491))) g$745$18484 g$745$18485)))))))) g$745$18479) (error (quote expander) (quote #3#) (g$745$14364 g$745$18477 (quote ()))))) ((lambda (g$745$18499) (if (g$745$14332 g$745$18499) (begin (quote #f) ((lambda (g$745$18501) (if g$745$18501 (begin (quote #f) ((lambda (g$745$18503) (if g$745$18503 (begin (quote #f) (append g$745$18501 g$745$18503)) (quote #f))) ((lambda (g$745$18505) (if (g$745$14332 g$745$18505) (begin (quote #f) ((lambda (g$745$18507) (if g$745$18507 (begin (quote #f) ((lambda (g$745$18509) (if g$745$18509 (begin (quote #f) (append g$745$18507 g$745$18509)) (quote #f))) ((letrec ((g$745$18511 (lambda (g$745$18513) (if (g$745$14332 g$745$18513) ((lambda (g$745$18515) (if g$745$18515 (begin (quote #f) ((lambda (g$745$18517) (if g$745$18517 (begin (quote #f) (map cons g$745$18515 g$745$18517)) (quote #f))) (g$745$18511 (g$745$14344 g$745$18513)))) (quote #f))) ((lambda (g$745$18519) (if (g$745$14332 g$745$18519) (begin (quote #f) ((lambda (g$745$18521) (if g$745$18521 (begin (quote #f) ((lambda (g$745$18523) (if g$745$18523 (begin (quote #f) (append g$745$18521 g$745$18523)) (quote #f))) ((lambda (g$745$18525) (if (g$745$14332 g$745$18525) (begin (quote #f) ((lambda (g$745$18527) (if g$745$18527 (begin (quote #f) ((lambda (g$745$18529) (if g$745$18529 (begin (quote #f) (append g$745$18527 g$745$18529)) (quote #f))) ((lambda (g$745$18531) (if (equal? (g$745$14366 g$745$18531) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18525)))) (quote #f))) ((lambda (g$745$18533) (list g$745$18533)) (g$745$14340 g$745$18525)))) (quote #f))) (g$745$14344 g$745$18519)))) (quote #f))) ((lambda (g$745$18535) (list g$745$18535)) (g$745$14340 g$745$18519)))) (quote #f))) (g$745$14340 g$745$18513))) (if (g$745$14336 g$745$18513) (list (begin (quote pat*) (quote ())) (begin (quote tmp*) (quote ()))) (quote #f)))))) g$745$18511) (g$745$14344 g$745$18505)))) (quote #f))) ((letrec ((g$745$18537 (lambda (g$745$18539) (if (g$745$14332 g$745$18539) ((lambda (g$745$18541) (if g$745$18541 (begin (quote #f) ((lambda (g$745$18543) (if g$745$18543 (begin (quote #f) (map cons g$745$18541 g$745$18543)) (quote #f))) (g$745$18537 (g$745$14344 g$745$18539)))) (quote #f))) ((lambda (g$745$18545) (list g$745$18545)) (g$745$14340 g$745$18539))) (if (g$745$14336 g$745$18539) (list (begin (quote lits) (quote ()))) (quote #f)))))) g$745$18537) (g$745$14340 g$745$18505)))) (quote #f))) (g$745$14344 g$745$18499)))) (quote #f))) ((lambda (g$745$18547) (quote ())) (g$745$14340 g$745$18499)))) (quote #f))) g$745$18477))) g$745$18475))) (set! g$745$14847 ((lambda () ((lambda (g$745$18584 g$745$18586 g$745$18588 g$745$18590 g$745$18592 g$745$18594) (begin (set! g$745$18584 (lambda (g$745$19235 g$745$19236) (letrec ((g$745$19238 (lambda (g$745$19240) (if (null? g$745$19240) g$745$19236 (g$745$18586 (car g$745$19240) (g$745$19238 (cdr g$745$19240))))))) (g$745$19238 g$745$19235)))) (set! g$745$18586 (lambda (g$745$19129 g$745$19130) ((lambda (g$745$19132) ((lambda (g$745$19134) (if (if g$745$19134 (begin (quote #f) (apply (lambda (g$745$19214) (quote #t)) g$745$19134)) (quote #f)) (apply (lambda (g$745$19168) ((lambda (g$745$19170) ((lambda (g$745$19172) (if (if g$745$19172 (begin (quote #f) (apply (lambda (g$745$19194) (quote #t)) g$745$19172)) (quote #f)) (apply (lambda (g$745$19192) (list (g$745$14775 (quote quote)) (cons g$745$19192 g$745$19168))) g$745$19172) ((lambda (g$745$19174) ((lambda (g$745$19176) (if (if g$745$19176 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19176)) (quote #f)) (apply (lambda () ((lambda (g$745$19178) ((lambda (g$745$19180) (if (if g$745$19180 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19180)) (quote #f)) (apply (lambda () (list (g$745$14775 (quote list)) g$745$19129)) g$745$19180) ((lambda (g$745$19182) ((lambda (g$745$19184) (if (if g$745$19184 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19184)) (quote #f)) (apply (lambda () (list (g$745$14775 (quote cons)) g$745$19129 g$745$19130)) g$745$19184) (error (quote expander) (quote #3#) (g$745$14364 g$745$19182 (quote ()))))) ((lambda (g$745$19186) (quote ())) g$745$19182))) g$745$19178))) ((lambda (g$745$19188) (if (equal? (g$745$14366 g$745$19188) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$19178))) g$745$19168)) g$745$19176) (error (quote expander) (quote #3#) (g$745$14364 g$745$19174 (quote ()))))) ((lambda (g$745$19190) (quote ())) g$745$19174))) g$745$19170))) ((lambda (g$745$19196) (if (g$745$14332 g$745$19196) (begin (quote #f) ((lambda (g$745$19198) (if g$745$19198 (begin (quote #f) ((lambda (g$745$19200) (if g$745$19200 (begin (quote #f) (append g$745$19198 g$745$19200)) (quote #f))) ((lambda (g$745$19202) (if (g$745$14332 g$745$19202) (begin (quote #f) ((lambda (g$745$19204) (if g$745$19204 (begin (quote #f) ((lambda (g$745$19206) (if g$745$19206 (begin (quote #f) (append g$745$19204 g$745$19206)) (quote #f))) ((lambda (g$745$19208) (if (equal? (g$745$14366 g$745$19208) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19202)))) (quote #f))) ((lambda (g$745$19210) (list g$745$19210)) (g$745$14340 g$745$19202)))) (quote #f))) (g$745$14344 g$745$19196)))) (quote #f))) ((lambda (g$745$19212) (if (g$745$14346 g$745$19212) (if (g$745$14354 g$745$19212 (g$745$14775 (quote quote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19196)))) (quote #f))) g$745$19170))) g$745$19129)) g$745$19134) ((lambda (g$745$19136) ((lambda (g$745$19138) (if (if g$745$19138 (begin (quote #f) (apply (lambda (g$745$19148) (quote #t)) g$745$19138)) (quote #f)) (apply (lambda (g$745$19146) (cons* (g$745$14775 (quote list)) g$745$19129 g$745$19146)) g$745$19138) ((lambda (g$745$19140) ((lambda (g$745$19142) (if (if g$745$19142 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19142)) (quote #f)) (apply (lambda () (list (g$745$14775 (quote cons)) g$745$19129 g$745$19130)) g$745$19142) (error (quote expander) (quote #3#) (g$745$14364 g$745$19140 (quote ()))))) ((lambda (g$745$19144) (quote ())) g$745$19140))) g$745$19136))) ((lambda (g$745$19150) (if (g$745$14332 g$745$19150) (begin (quote #f) ((lambda (g$745$19152) (if g$745$19152 (begin (quote #f) ((lambda (g$745$19154) (if g$745$19154 (begin (quote #f) (append g$745$19152 g$745$19154)) (quote #f))) ((letrec ((g$745$19156 (lambda (g$745$19158) (if (g$745$14332 g$745$19158) ((lambda (g$745$19160) (if g$745$19160 (begin (quote #f) ((lambda (g$745$19162) (if g$745$19162 (begin (quote #f) (map cons g$745$19160 g$745$19162)) (quote #f))) (g$745$19156 (g$745$14344 g$745$19158)))) (quote #f))) ((lambda (g$745$19164) (list g$745$19164)) (g$745$14340 g$745$19158))) (if (g$745$14336 g$745$19158) (list (begin (quote stuff) (quote ()))) (quote #f)))))) g$745$19156) (g$745$14344 g$745$19150)))) (quote #f))) ((lambda (g$745$19166) (if (g$745$14346 g$745$19166) (if (g$745$14354 g$745$19166 (g$745$14775 (quote list))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19150)))) (quote #f))) g$745$19136))) g$745$19132))) ((lambda (g$745$19216) (if (g$745$14332 g$745$19216) (begin (quote #f) ((lambda (g$745$19218) (if g$745$19218 (begin (quote #f) ((lambda (g$745$19220) (if g$745$19220 (begin (quote #f) (append g$745$19218 g$745$19220)) (quote #f))) ((lambda (g$745$19222) (if (g$745$14332 g$745$19222) (begin (quote #f) ((lambda (g$745$19224) (if g$745$19224 (begin (quote #f) ((lambda (g$745$19226) (if g$745$19226 (begin (quote #f) (append g$745$19224 g$745$19226)) (quote #f))) ((lambda (g$745$19228) (if (equal? (g$745$14366 g$745$19228) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19222)))) (quote #f))) ((lambda (g$745$19230) (list g$745$19230)) (g$745$14340 g$745$19222)))) (quote #f))) (g$745$14344 g$745$19216)))) (quote #f))) ((lambda (g$745$19232) (if (g$745$14346 g$745$19232) (if (g$745$14354 g$745$19232 (g$745$14775 (quote quote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19216)))) (quote #f))) g$745$19132))) g$745$19130))) (set! g$745$18588 (lambda (g$745$19063 g$745$19064) ((lambda (g$745$19066) (if (null? g$745$19066) (list (g$745$14775 (quote quote)) (quote ())) (if (null? (cdr g$745$19066)) (car g$745$19066) (cons* (g$745$14775 (quote append)) g$745$19066)))) (letrec ((g$745$19068 (lambda (g$745$19070) (if (null? g$745$19070) ((lambda (g$745$19100) ((lambda (g$745$19102) (if (if g$745$19102 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19102)) (quote #f)) (apply (lambda () (quote ())) g$745$19102) ((lambda (g$745$19104) ((lambda (g$745$19106) (if (if g$745$19106 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19106)) (quote #f)) (apply (lambda () (list g$745$19064)) g$745$19106) (error (quote expander) (quote #3#) (g$745$14364 g$745$19104 (quote ()))))) ((lambda (g$745$19108) (quote ())) g$745$19104))) g$745$19100))) ((lambda (g$745$19110) (if (g$745$14332 g$745$19110) (begin (quote #f) ((lambda (g$745$19112) (if g$745$19112 (begin (quote #f) ((lambda (g$745$19114) (if g$745$19114 (begin (quote #f) (append g$745$19112 g$745$19114)) (quote #f))) ((lambda (g$745$19116) (if (g$745$14332 g$745$19116) (begin (quote #f) ((lambda (g$745$19118) (if g$745$19118 (begin (quote #f) ((lambda (g$745$19120) (if g$745$19120 (begin (quote #f) (append g$745$19118 g$745$19120)) (quote #f))) ((lambda (g$745$19122) (if (equal? (g$745$14366 g$745$19122) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19116)))) (quote #f))) ((lambda (g$745$19124) (if (equal? (g$745$14366 g$745$19124) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14340 g$745$19116)))) (quote #f))) (g$745$14344 g$745$19110)))) (quote #f))) ((lambda (g$745$19126) (if (g$745$14346 g$745$19126) (if (g$745$14354 g$745$19126 (g$745$14775 (quote quote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19110)))) (quote #f))) g$745$19100))) g$745$19064) ((lambda (g$745$19072) ((lambda (g$745$19074) (if (if g$745$19074 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19074)) (quote #f)) (apply (lambda () (g$745$19068 (cdr g$745$19070))) g$745$19074) ((lambda (g$745$19076) ((lambda (g$745$19078) (if (if g$745$19078 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19078)) (quote #f)) (apply (lambda () (cons (car g$745$19070) (g$745$19068 (cdr g$745$19070)))) g$745$19078) (error (quote expander) (quote #3#) (g$745$14364 g$745$19076 (quote ()))))) ((lambda (g$745$19080) (quote ())) g$745$19076))) g$745$19072))) ((lambda (g$745$19082) (if (g$745$14332 g$745$19082) (begin (quote #f) ((lambda (g$745$19084) (if g$745$19084 (begin (quote #f) ((lambda (g$745$19086) (if g$745$19086 (begin (quote #f) (append g$745$19084 g$745$19086)) (quote #f))) ((lambda (g$745$19088) (if (g$745$14332 g$745$19088) (begin (quote #f) ((lambda (g$745$19090) (if g$745$19090 (begin (quote #f) ((lambda (g$745$19092) (if g$745$19092 (begin (quote #f) (append g$745$19090 g$745$19092)) (quote #f))) ((lambda (g$745$19094) (if (equal? (g$745$14366 g$745$19094) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19088)))) (quote #f))) ((lambda (g$745$19096) (if (equal? (g$745$14366 g$745$19096) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14340 g$745$19088)))) (quote #f))) (g$745$14344 g$745$19082)))) (quote #f))) ((lambda (g$745$19098) (if (g$745$14346 g$745$19098) (if (g$745$14354 g$745$19098 (g$745$14775 (quote quote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19082)))) (quote #f))) g$745$19072))) (car g$745$19070)))))) (g$745$19068 g$745$19063))))) (set! g$745$18590 (lambda (g$745$18902) ((lambda (g$745$18904) ((lambda (g$745$18906) ((lambda (g$745$18908) (if (if g$745$18908 (begin (quote #f) (apply (lambda (g$745$19034) (quote #t)) g$745$18908)) (quote #f)) (apply (lambda (g$745$19032) (list (g$745$14775 (quote quote)) (list->vector g$745$19032))) g$745$18908) ((lambda (g$745$18910) ((lambda (g$745$18912) (if (if g$745$18912 (begin (quote #f) (apply (lambda () (quote #t)) g$745$18912)) (quote #f)) (apply (lambda () (letrec ((g$745$18914 (lambda (g$745$18917 g$745$18918) ((lambda (g$745$18920) ((lambda (g$745$18922) (if (if g$745$18922 (begin (quote #f) (apply (lambda (g$745$19000) (quote #t)) g$745$18922)) (quote #f)) (apply (lambda (g$745$18996) (g$745$18918 (map (lambda (g$745$18998) (list (g$745$14775 (quote quote)) g$745$18998)) g$745$18996))) g$745$18922) ((lambda (g$745$18924) ((lambda (g$745$18926) (if (if g$745$18926 (begin (quote #f) (apply (lambda (g$745$18976) (quote #t)) g$745$18926)) (quote #f)) (apply (lambda (g$745$18974) (g$745$18918 g$745$18974)) g$745$18926) ((lambda (g$745$18928) ((lambda (g$745$18930) (if (if g$745$18930 (begin (quote #f) (apply (lambda (g$745$18945 g$745$18946) (quote #t)) g$745$18930)) (quote #f)) (apply (lambda (g$745$18939 g$745$18940) (g$745$18914 g$745$18940 (lambda (g$745$18942) (g$745$18918 (cons g$745$18939 g$745$18942))))) g$745$18930) ((lambda (g$745$18932) ((lambda (g$745$18934) (if (if g$745$18934 (begin (quote #f) (apply (lambda () (quote #t)) g$745$18934)) (quote #f)) (apply (lambda () (list (g$745$14775 (quote list->vector)) g$745$18904)) g$745$18934) (error (quote expander) (quote #3#) (g$745$14364 g$745$18932 (quote ()))))) ((lambda (g$745$18936) (quote ())) g$745$18932))) g$745$18928))) ((lambda (g$745$18948) (if (g$745$14332 g$745$18948) (begin (quote #f) ((lambda (g$745$18950) (if g$745$18950 (begin (quote #f) ((lambda (g$745$18952) (if g$745$18952 (begin (quote #f) (append g$745$18950 g$745$18952)) (quote #f))) ((lambda (g$745$18954) (if (g$745$14332 g$745$18954) (begin (quote #f) ((lambda (g$745$18956) (if g$745$18956 (begin (quote #f) ((lambda (g$745$18958) (if g$745$18958 (begin (quote #f) (append g$745$18956 g$745$18958)) (quote #f))) ((lambda (g$745$18960) (if (g$745$14332 g$745$18960) (begin (quote #f) ((lambda (g$745$18962) (if g$745$18962 (begin (quote #f) ((lambda (g$745$18964) (if g$745$18964 (begin (quote #f) (append g$745$18962 g$745$18964)) (quote #f))) ((lambda (g$745$18966) (if (equal? (g$745$14366 g$745$18966) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18960)))) (quote #f))) ((lambda (g$745$18968) (list g$745$18968)) (g$745$14340 g$745$18960)))) (quote #f))) (g$745$14344 g$745$18954)))) (quote #f))) ((lambda (g$745$18970) (list g$745$18970)) (g$745$14340 g$745$18954)))) (quote #f))) (g$745$14344 g$745$18948)))) (quote #f))) ((lambda (g$745$18972) (if (g$745$14346 g$745$18972) (if (g$745$14354 g$745$18972 (g$745$14775 (quote cons))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18948)))) (quote #f))) g$745$18928))) g$745$18924))) ((lambda (g$745$18978) (if (g$745$14332 g$745$18978) (begin (quote #f) ((lambda (g$745$18980) (if g$745$18980 (begin (quote #f) ((lambda (g$745$18982) (if g$745$18982 (begin (quote #f) (append g$745$18980 g$745$18982)) (quote #f))) ((letrec ((g$745$18984 (lambda (g$745$18986) (if (g$745$14332 g$745$18986) ((lambda (g$745$18988) (if g$745$18988 (begin (quote #f) ((lambda (g$745$18990) (if g$745$18990 (begin (quote #f) (map cons g$745$18988 g$745$18990)) (quote #f))) (g$745$18984 (g$745$14344 g$745$18986)))) (quote #f))) ((lambda (g$745$18992) (list g$745$18992)) (g$745$14340 g$745$18986))) (if (g$745$14336 g$745$18986) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$18984) (g$745$14344 g$745$18978)))) (quote #f))) ((lambda (g$745$18994) (if (g$745$14346 g$745$18994) (if (g$745$14354 g$745$18994 (g$745$14775 (quote list))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18978)))) (quote #f))) g$745$18924))) g$745$18920))) ((lambda (g$745$19002) (if (g$745$14332 g$745$19002) (begin (quote #f) ((lambda (g$745$19004) (if g$745$19004 (begin (quote #f) ((lambda (g$745$19006) (if g$745$19006 (begin (quote #f) (append g$745$19004 g$745$19006)) (quote #f))) ((lambda (g$745$19008) (if (g$745$14332 g$745$19008) (begin (quote #f) ((lambda (g$745$19010) (if g$745$19010 (begin (quote #f) ((lambda (g$745$19012) (if g$745$19012 (begin (quote #f) (append g$745$19010 g$745$19012)) (quote #f))) ((lambda (g$745$19014) (if (equal? (g$745$14366 g$745$19014) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19008)))) (quote #f))) ((letrec ((g$745$19016 (lambda (g$745$19018) (if (g$745$14332 g$745$19018) ((lambda (g$745$19020) (if g$745$19020 (begin (quote #f) ((lambda (g$745$19022) (if g$745$19022 (begin (quote #f) (map cons g$745$19020 g$745$19022)) (quote #f))) (g$745$19016 (g$745$14344 g$745$19018)))) (quote #f))) ((lambda (g$745$19024) (list g$745$19024)) (g$745$14340 g$745$19018))) (if (g$745$14336 g$745$19018) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$19016) (g$745$14340 g$745$19008)))) (quote #f))) (g$745$14344 g$745$19002)))) (quote #f))) ((lambda (g$745$19026) (if (g$745$14346 g$745$19026) (if (g$745$14354 g$745$19026 (g$745$14775 (quote quote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19002)))) (quote #f))) g$745$18920))) g$745$18917)))) (g$745$18914 g$745$18902 (lambda (g$745$19028) (cons* (g$745$14775 (quote vector)) g$745$19028))))) g$745$18912) (error (quote expander) (quote #3#) (g$745$14364 g$745$18910 (quote ()))))) ((lambda (g$745$19030) (quote ())) g$745$18910))) g$745$18906))) ((lambda (g$745$19036) (if (g$745$14332 g$745$19036) (begin (quote #f) ((lambda (g$745$19038) (if g$745$19038 (begin (quote #f) ((lambda (g$745$19040) (if g$745$19040 (begin (quote #f) (append g$745$19038 g$745$19040)) (quote #f))) ((lambda (g$745$19042) (if (g$745$14332 g$745$19042) (begin (quote #f) ((lambda (g$745$19044) (if g$745$19044 (begin (quote #f) ((lambda (g$745$19046) (if g$745$19046 (begin (quote #f) (append g$745$19044 g$745$19046)) (quote #f))) ((lambda (g$745$19048) (if (equal? (g$745$14366 g$745$19048) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19042)))) (quote #f))) ((letrec ((g$745$19050 (lambda (g$745$19052) (if (g$745$14332 g$745$19052) ((lambda (g$745$19054) (if g$745$19054 (begin (quote #f) ((lambda (g$745$19056) (if g$745$19056 (begin (quote #f) (map cons g$745$19054 g$745$19056)) (quote #f))) (g$745$19050 (g$745$14344 g$745$19052)))) (quote #f))) ((lambda (g$745$19058) (list g$745$19058)) (g$745$14340 g$745$19052))) (if (g$745$14336 g$745$19052) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$19050) (g$745$14340 g$745$19042)))) (quote #f))) (g$745$14344 g$745$19036)))) (quote #f))) ((lambda (g$745$19060) (if (g$745$14346 g$745$19060) (if (g$745$14354 g$745$19060 (g$745$14775 (quote quote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19036)))) (quote #f))) g$745$18906))) g$745$18904)) g$745$18902))) (set! g$745$18592 (lambda (g$745$18809 g$745$18810) ((lambda (g$745$18812) ((lambda (g$745$18814) (if (if g$745$18814 (begin (quote #f) (apply (lambda (g$745$18889 g$745$18890) (quote #t)) g$745$18814)) (quote #f)) (apply (lambda (g$745$18823 g$745$18824) ((lambda (g$745$18826) ((lambda (g$745$18828) (if (if g$745$18828 (begin (quote #f) (apply (lambda (g$745$18868) (quote #t)) g$745$18828)) (quote #f)) (apply (lambda (g$745$18866) (if (= g$745$18810 (quote 0)) (g$745$18584 g$745$18866 (g$745$18592 g$745$18824 g$745$18810)) (g$745$18586 (g$745$18586 (list (g$745$14775 (quote quote)) (quote unquote)) (g$745$18594 g$745$18866 (- g$745$18810 (quote 1)))) (g$745$18592 g$745$18824 g$745$18810)))) g$745$18828) ((lambda (g$745$18830) ((lambda (g$745$18832) (if (if g$745$18832 (begin (quote #f) (apply (lambda (g$745$18846) (quote #t)) g$745$18832)) (quote #f)) (apply (lambda (g$745$18844) (if (= g$745$18810 (quote 0)) (g$745$18588 g$745$18844 (g$745$18592 g$745$18824 g$745$18810)) (g$745$18586 (g$745$18586 (list (g$745$14775 (quote quote)) (quote unquote-splicing)) (g$745$18594 g$745$18844 (- g$745$18810 (quote 1)))) (g$745$18592 g$745$18824 g$745$18810)))) g$745$18832) ((lambda (g$745$18834) ((lambda (g$745$18836) (if (if g$745$18836 (begin (quote #f) (apply (lambda (g$745$18840) (quote #t)) g$745$18836)) (quote #f)) (apply (lambda (g$745$18838) (g$745$18586 (g$745$18594 g$745$18838 g$745$18810) (g$745$18592 g$745$18824 g$745$18810))) g$745$18836) (error (quote expander) (quote #3#) (g$745$14364 g$745$18834 (quote ()))))) ((lambda (g$745$18842) (list g$745$18842)) g$745$18834))) g$745$18830))) ((lambda (g$745$18848) (if (g$745$14332 g$745$18848) (begin (quote #f) ((lambda (g$745$18850) (if g$745$18850 (begin (quote #f) ((lambda (g$745$18852) (if g$745$18852 (begin (quote #f) (append g$745$18850 g$745$18852)) (quote #f))) ((letrec ((g$745$18854 (lambda (g$745$18856) (if (g$745$14332 g$745$18856) ((lambda (g$745$18858) (if g$745$18858 (begin (quote #f) ((lambda (g$745$18860) (if g$745$18860 (begin (quote #f) (map cons g$745$18858 g$745$18860)) (quote #f))) (g$745$18854 (g$745$14344 g$745$18856)))) (quote #f))) ((lambda (g$745$18862) (list g$745$18862)) (g$745$14340 g$745$18856))) (if (g$745$14336 g$745$18856) (list (begin (quote p) (quote ()))) (quote #f)))))) g$745$18854) (g$745$14344 g$745$18848)))) (quote #f))) ((lambda (g$745$18864) (if (g$745$14346 g$745$18864) (if (g$745$14354 g$745$18864 (g$745$14775 (quote unquote-splicing))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18848)))) (quote #f))) g$745$18830))) g$745$18826))) ((lambda (g$745$18870) (if (g$745$14332 g$745$18870) (begin (quote #f) ((lambda (g$745$18872) (if g$745$18872 (begin (quote #f) ((lambda (g$745$18874) (if g$745$18874 (begin (quote #f) (append g$745$18872 g$745$18874)) (quote #f))) ((letrec ((g$745$18876 (lambda (g$745$18878) (if (g$745$14332 g$745$18878) ((lambda (g$745$18880) (if g$745$18880 (begin (quote #f) ((lambda (g$745$18882) (if g$745$18882 (begin (quote #f) (map cons g$745$18880 g$745$18882)) (quote #f))) (g$745$18876 (g$745$14344 g$745$18878)))) (quote #f))) ((lambda (g$745$18884) (list g$745$18884)) (g$745$14340 g$745$18878))) (if (g$745$14336 g$745$18878) (list (begin (quote p) (quote ()))) (quote #f)))))) g$745$18876) (g$745$14344 g$745$18870)))) (quote #f))) ((lambda (g$745$18886) (if (g$745$14346 g$745$18886) (if (g$745$14354 g$745$18886 (g$745$14775 (quote unquote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18870)))) (quote #f))) g$745$18826))) g$745$18823)) g$745$18814) ((lambda (g$745$18816) ((lambda (g$745$18818) (if (if g$745$18818 (begin (quote #f) (apply (lambda () (quote #t)) g$745$18818)) (quote #f)) (apply (lambda () (list (g$745$14775 (quote quote)) (quote ()))) g$745$18818) (error (quote expander) (quote #3#) (g$745$14364 g$745$18816 (quote ()))))) ((lambda (g$745$18820) (if (equal? (g$745$14366 g$745$18820) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$18816))) g$745$18812))) ((lambda (g$745$18892) (if (g$745$14332 g$745$18892) (begin (quote #f) ((lambda (g$745$18894) (if g$745$18894 (begin (quote #f) ((lambda (g$745$18896) (if g$745$18896 (begin (quote #f) (append g$745$18894 g$745$18896)) (quote #f))) ((lambda (g$745$18898) (list g$745$18898)) (g$745$14344 g$745$18892)))) (quote #f))) ((lambda (g$745$18900) (list g$745$18900)) (g$745$14340 g$745$18892)))) (quote #f))) g$745$18812))) g$745$18809))) (set! g$745$18594 (lambda (g$745$18625 g$745$18626) ((lambda (g$745$18628) ((lambda (g$745$18630) (if (if g$745$18630 (begin (quote #f) (apply (lambda (g$745$18788) (quote #t)) g$745$18630)) (quote #f)) (apply (lambda (g$745$18786) (if (= g$745$18626 (quote 0)) g$745$18786 (g$745$18586 (list (g$745$14775 (quote quote)) (quote unquote)) (g$745$18594 (list g$745$18786) (- g$745$18626 (quote 1)))))) g$745$18630) ((lambda (g$745$18632) ((lambda (g$745$18634) (if (if g$745$18634 (begin (quote #f) (apply (lambda (g$745$18757 g$745$18758) (quote #t)) g$745$18634)) (quote #f)) (apply (lambda (g$745$18753 g$745$18754) (if (= g$745$18626 (quote 0)) (g$745$18584 g$745$18753 (g$745$18594 g$745$18754 g$745$18626)) (g$745$18586 (g$745$18586 (list (g$745$14775 (quote quote)) (quote unquote)) (g$745$18594 g$745$18753 (- g$745$18626 (quote 1)))) (g$745$18594 g$745$18754 g$745$18626)))) g$745$18634) ((lambda (g$745$18636) ((lambda (g$745$18638) (if (if g$745$18638 (begin (quote #f) (apply (lambda (g$745$18723 g$745$18724) (quote #t)) g$745$18638)) (quote #f)) (apply (lambda (g$745$18719 g$745$18720) (if (= g$745$18626 (quote 0)) (g$745$18588 g$745$18719 (g$745$18594 g$745$18720 g$745$18626)) (g$745$18586 (g$745$18586 (list (g$745$14775 (quote quote)) (quote unquote-splicing)) (g$745$18594 g$745$18719 (- g$745$18626 (quote 1)))) (g$745$18594 g$745$18720 g$745$18626)))) g$745$18638) ((lambda (g$745$18640) ((lambda (g$745$18642) (if (if g$745$18642 (begin (quote #f) (apply (lambda (g$745$18698) (quote #t)) g$745$18642)) (quote #f)) (apply (lambda (g$745$18696) (g$745$18586 (list (g$745$14775 (quote quote)) (quote quasiquote)) (g$745$18594 (list g$745$18696) (+ g$745$18626 (quote 1))))) g$745$18642) ((lambda (g$745$18644) ((lambda (g$745$18646) (if (if g$745$18646 (begin (quote #f) (apply (lambda (g$745$18683 g$745$18684) (quote #t)) g$745$18646)) (quote #f)) (apply (lambda (g$745$18679 g$745$18680) (g$745$18586 (g$745$18594 g$745$18679 g$745$18626) (g$745$18594 g$745$18680 g$745$18626))) g$745$18646) ((lambda (g$745$18648) ((lambda (g$745$18650) (if (if g$745$18650 (begin (quote #f) (apply (lambda (g$745$18664) (not (g$745$14298 g$745$18664))) g$745$18650)) (quote #f)) (apply (lambda (g$745$18662) (g$745$18590 (g$745$18592 g$745$18662 g$745$18626))) g$745$18650) ((lambda (g$745$18652) ((lambda (g$745$18654) (if (if g$745$18654 (begin (quote #f) (apply (lambda (g$745$18658) (quote #t)) g$745$18654)) (quote #f)) (apply (lambda (g$745$18656) (list (g$745$14775 (quote quote)) g$745$18656)) g$745$18654) (error (quote expander) (quote #3#) (g$745$14364 g$745$18652 (quote ()))))) ((lambda (g$745$18660) (list g$745$18660)) g$745$18652))) g$745$18648))) ((lambda (g$745$18666) (if (g$745$14334 g$745$18666) (begin (quote #f) ((letrec ((g$745$18668 (lambda (g$745$18670) (if (g$745$14332 g$745$18670) ((lambda (g$745$18672) (if g$745$18672 (begin (quote #f) ((lambda (g$745$18674) (if g$745$18674 (begin (quote #f) (map cons g$745$18672 g$745$18674)) (quote #f))) (g$745$18668 (g$745$14344 g$745$18670)))) (quote #f))) ((lambda (g$745$18676) (list g$745$18676)) (g$745$14340 g$745$18670))) (if (g$745$14336 g$745$18670) (list (begin (quote x) (quote ()))) (quote #f)))))) g$745$18668) (g$745$14330 g$745$18666))) (quote #f))) g$745$18648))) g$745$18644))) ((lambda (g$745$18686) (if (g$745$14332 g$745$18686) (begin (quote #f) ((lambda (g$745$18688) (if g$745$18688 (begin (quote #f) ((lambda (g$745$18690) (if g$745$18690 (begin (quote #f) (append g$745$18688 g$745$18690)) (quote #f))) ((lambda (g$745$18692) (list g$745$18692)) (g$745$14344 g$745$18686)))) (quote #f))) ((lambda (g$745$18694) (list g$745$18694)) (g$745$14340 g$745$18686)))) (quote #f))) g$745$18644))) g$745$18640))) ((lambda (g$745$18700) (if (g$745$14332 g$745$18700) (begin (quote #f) ((lambda (g$745$18702) (if g$745$18702 (begin (quote #f) ((lambda (g$745$18704) (if g$745$18704 (begin (quote #f) (append g$745$18702 g$745$18704)) (quote #f))) ((lambda (g$745$18706) (if (g$745$14332 g$745$18706) (begin (quote #f) ((lambda (g$745$18708) (if g$745$18708 (begin (quote #f) ((lambda (g$745$18710) (if g$745$18710 (begin (quote #f) (append g$745$18708 g$745$18710)) (quote #f))) ((lambda (g$745$18712) (if (equal? (g$745$14366 g$745$18712) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18706)))) (quote #f))) ((lambda (g$745$18714) (list g$745$18714)) (g$745$14340 g$745$18706)))) (quote #f))) (g$745$14344 g$745$18700)))) (quote #f))) ((lambda (g$745$18716) (if (g$745$14346 g$745$18716) (if (g$745$14354 g$745$18716 (g$745$14775 (quote quasiquote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18700)))) (quote #f))) g$745$18640))) g$745$18636))) ((lambda (g$745$18726) (if (g$745$14332 g$745$18726) (begin (quote #f) ((lambda (g$745$18728) (if g$745$18728 (begin (quote #f) ((lambda (g$745$18730) (if g$745$18730 (begin (quote #f) (append g$745$18728 g$745$18730)) (quote #f))) ((lambda (g$745$18732) (list g$745$18732)) (g$745$14344 g$745$18726)))) (quote #f))) ((lambda (g$745$18734) (if (g$745$14332 g$745$18734) (begin (quote #f) ((lambda (g$745$18736) (if g$745$18736 (begin (quote #f) ((lambda (g$745$18738) (if g$745$18738 (begin (quote #f) (append g$745$18736 g$745$18738)) (quote #f))) ((letrec ((g$745$18740 (lambda (g$745$18742) (if (g$745$14332 g$745$18742) ((lambda (g$745$18744) (if g$745$18744 (begin (quote #f) ((lambda (g$745$18746) (if g$745$18746 (begin (quote #f) (map cons g$745$18744 g$745$18746)) (quote #f))) (g$745$18740 (g$745$14344 g$745$18742)))) (quote #f))) ((lambda (g$745$18748) (list g$745$18748)) (g$745$14340 g$745$18742))) (if (g$745$14336 g$745$18742) (list (begin (quote p) (quote ()))) (quote #f)))))) g$745$18740) (g$745$14344 g$745$18734)))) (quote #f))) ((lambda (g$745$18750) (if (g$745$14346 g$745$18750) (if (g$745$14354 g$745$18750 (g$745$14775 (quote unquote-splicing))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18734)))) (quote #f))) (g$745$14340 g$745$18726)))) (quote #f))) g$745$18636))) g$745$18632))) ((lambda (g$745$18760) (if (g$745$14332 g$745$18760) (begin (quote #f) ((lambda (g$745$18762) (if g$745$18762 (begin (quote #f) ((lambda (g$745$18764) (if g$745$18764 (begin (quote #f) (append g$745$18762 g$745$18764)) (quote #f))) ((lambda (g$745$18766) (list g$745$18766)) (g$745$14344 g$745$18760)))) (quote #f))) ((lambda (g$745$18768) (if (g$745$14332 g$745$18768) (begin (quote #f) ((lambda (g$745$18770) (if g$745$18770 (begin (quote #f) ((lambda (g$745$18772) (if g$745$18772 (begin (quote #f) (append g$745$18770 g$745$18772)) (quote #f))) ((letrec ((g$745$18774 (lambda (g$745$18776) (if (g$745$14332 g$745$18776) ((lambda (g$745$18778) (if g$745$18778 (begin (quote #f) ((lambda (g$745$18780) (if g$745$18780 (begin (quote #f) (map cons g$745$18778 g$745$18780)) (quote #f))) (g$745$18774 (g$745$14344 g$745$18776)))) (quote #f))) ((lambda (g$745$18782) (list g$745$18782)) (g$745$14340 g$745$18776))) (if (g$745$14336 g$745$18776) (list (begin (quote p) (quote ()))) (quote #f)))))) g$745$18774) (g$745$14344 g$745$18768)))) (quote #f))) ((lambda (g$745$18784) (if (g$745$14346 g$745$18784) (if (g$745$14354 g$745$18784 (g$745$14775 (quote unquote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18768)))) (quote #f))) (g$745$14340 g$745$18760)))) (quote #f))) g$745$18632))) g$745$18628))) ((lambda (g$745$18790) (if (g$745$14332 g$745$18790) (begin (quote #f) ((lambda (g$745$18792) (if g$745$18792 (begin (quote #f) ((lambda (g$745$18794) (if g$745$18794 (begin (quote #f) (append g$745$18792 g$745$18794)) (quote #f))) ((lambda (g$745$18796) (if (g$745$14332 g$745$18796) (begin (quote #f) ((lambda (g$745$18798) (if g$745$18798 (begin (quote #f) ((lambda (g$745$18800) (if g$745$18800 (begin (quote #f) (append g$745$18798 g$745$18800)) (quote #f))) ((lambda (g$745$18802) (if (equal? (g$745$14366 g$745$18802) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18796)))) (quote #f))) ((lambda (g$745$18804) (list g$745$18804)) (g$745$14340 g$745$18796)))) (quote #f))) (g$745$14344 g$745$18790)))) (quote #f))) ((lambda (g$745$18806) (if (g$745$14346 g$745$18806) (if (g$745$14354 g$745$18806 (g$745$14775 (quote unquote))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$18790)))) (quote #f))) g$745$18628))) g$745$18625))) (lambda (g$745$18596) ((lambda (g$745$18598) ((lambda (g$745$18600) (if (if g$745$18600 (begin (quote #f) (apply (lambda (g$745$18604) (quote #t)) g$745$18600)) (quote #f)) (apply (lambda (g$745$18602) (g$745$18594 g$745$18602 (quote 0))) g$745$18600) (error (quote expander) (quote #3#) (g$745$14364 g$745$18598 (quote ()))))) ((lambda (g$745$18606) (if (g$745$14332 g$745$18606) (begin (quote #f) ((lambda (g$745$18608) (if g$745$18608 (begin (quote #f) ((lambda (g$745$18610) (if g$745$18610 (begin (quote #f) (append g$745$18608 g$745$18610)) (quote #f))) ((lambda (g$745$18612) (if (g$745$14332 g$745$18612) (begin (quote #f) ((lambda (g$745$18614) (if g$745$18614 (begin (quote #f) ((lambda (g$745$18616) (if g$745$18616 (begin (quote #f) (append g$745$18614 g$745$18616)) (quote #f))) ((lambda (g$745$18618) (if (equal? (g$745$14366 g$745$18618) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$18612)))) (quote #f))) ((lambda (g$745$18620) (list g$745$18620)) (g$745$14340 g$745$18612)))) (quote #f))) (g$745$14344 g$745$18606)))) (quote #f))) ((lambda (g$745$18622) (quote ())) (g$745$14340 g$745$18606)))) (quote #f))) g$745$18598))) g$745$18596)))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f))))) (set! g$745$14849 ((lambda () ((lambda (g$745$19242) (begin (set! g$745$19242 (lambda (g$745$19279 g$745$19280) ((lambda (g$745$19282) ((lambda (g$745$19284) (if (if g$745$19284 (begin (quote #f) (apply (lambda (g$745$19474) (quote #t)) g$745$19284)) (quote #f)) (apply (lambda (g$745$19464) (if (= g$745$19280 (quote 0)) ((lambda (g$745$19472) (values (list g$745$19472) (list g$745$19464) g$745$19472)) (gensym)) (call-with-values (lambda () (g$745$19242 g$745$19464 (- g$745$19280 (quote 1)))) (lambda (g$745$19468 g$745$19469 g$745$19470) (values g$745$19468 g$745$19469 (list (quote unsyntax) g$745$19470)))))) g$745$19284) ((lambda (g$745$19286) ((lambda (g$745$19288) (if (if g$745$19288 (begin (quote #f) (apply (lambda () (= g$745$19280 (quote 0))) g$745$19288)) (quote #f)) (apply (lambda () (error (quote expander) (quote "incorrect use of unsyntax") (g$745$14364 g$745$19279 (quote ())))) g$745$19288) ((lambda (g$745$19290) ((lambda (g$745$19292) (if (if g$745$19292 (begin (quote #f) (apply (lambda (g$745$19433 g$745$19434) (quote #t)) g$745$19292)) (quote #f)) (apply (lambda (g$745$19415 g$745$19416) (call-with-values (lambda () (g$745$19242 g$745$19416 g$745$19280)) (lambda (g$745$19420 g$745$19421 g$745$19422) (if (= g$745$19280 (quote 0)) ((lambda (g$745$19430) (values (cons (cons g$745$19430 (quote (...))) g$745$19420) (cons g$745$19415 g$745$19421) (cons g$745$19430 (cons (quote ...) g$745$19422)))) (gensym)) (call-with-values (lambda () (g$745$19242 g$745$19415 (- g$745$19280 (quote 1)))) (lambda (g$745$19426 g$745$19427 g$745$19428) (values (append g$745$19426 g$745$19420) (append g$745$19427 g$745$19421) (cons (list (quote unsyntax-splicing) g$745$19428) g$745$19422)))))))) g$745$19292) ((lambda (g$745$19294) ((lambda (g$745$19296) (if (if g$745$19296 (begin (quote #f) (apply (lambda () (= g$745$19280 (quote 0))) g$745$19296)) (quote #f)) (apply (lambda () (error (quote expander) (quote "incorrect use of unsyntax-splicing") (g$745$14364 g$745$19279 (quote ())))) g$745$19296) ((lambda (g$745$19298) ((lambda (g$745$19300) (if (if g$745$19300 (begin (quote #f) (apply (lambda (g$745$19392) (quote #t)) g$745$19300)) (quote #f)) (apply (lambda (g$745$19384) (call-with-values (lambda () (g$745$19242 g$745$19384 (+ g$745$19280 (quote 1)))) (lambda (g$745$19388 g$745$19389 g$745$19390) (values g$745$19388 g$745$19389 (list (quote quasisyntax) g$745$19390))))) g$745$19300) ((lambda (g$745$19302) ((lambda (g$745$19304) (if (if g$745$19304 (begin (quote #f) (apply (lambda (g$745$19371 g$745$19372) (quote #t)) g$745$19304)) (quote #f)) (apply (lambda (g$745$19355 g$745$19356) (call-with-values (lambda () (g$745$19242 g$745$19355 g$745$19280)) (lambda (g$745$19363 g$745$19364 g$745$19365) (call-with-values (lambda () (g$745$19242 g$745$19356 g$745$19280)) (lambda (g$745$19366 g$745$19367 g$745$19368) (values (append g$745$19366 g$745$19363) (append g$745$19367 g$745$19364) (cons g$745$19365 g$745$19368))))))) g$745$19304) ((lambda (g$745$19306) ((lambda (g$745$19308) (if (if g$745$19308 (begin (quote #f) (apply (lambda (g$745$19340) (not (g$745$14298 g$745$19279))) g$745$19308)) (quote #f)) (apply (lambda (g$745$19316) (call-with-values (lambda () (letrec ((g$745$19318 (lambda (g$745$19320) (if (null? g$745$19320) (values (quote ()) (quote ()) (quote ())) (call-with-values (lambda () (g$745$19242 (car g$745$19320) g$745$19280)) (lambda (g$745$19324 g$745$19325 g$745$19326) (call-with-values (lambda () (g$745$19318 (cdr g$745$19320))) (lambda (g$745$19330 g$745$19331 g$745$19332) (values (append g$745$19324 g$745$19330) (append g$745$19325 g$745$19331) (cons g$745$19326 g$745$19332)))))))))) (g$745$19318 g$745$19316))) (lambda (g$745$19336 g$745$19337 g$745$19338) (values g$745$19336 g$745$19337 (list->vector g$745$19338))))) g$745$19308) ((lambda (g$745$19310) ((lambda (g$745$19312) (if (if g$745$19312 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19312)) (quote #f)) (apply (lambda () (values (quote ()) (quote ()) g$745$19279)) g$745$19312) (error (quote expander) (quote #3#) (g$745$14364 g$745$19310 (quote ()))))) ((lambda (g$745$19314) (quote ())) g$745$19310))) g$745$19306))) ((lambda (g$745$19342) (if (g$745$14334 g$745$19342) (begin (quote #f) ((letrec ((g$745$19344 (lambda (g$745$19346) (if (g$745$14332 g$745$19346) ((lambda (g$745$19348) (if g$745$19348 (begin (quote #f) ((lambda (g$745$19350) (if g$745$19350 (begin (quote #f) (map cons g$745$19348 g$745$19350)) (quote #f))) (g$745$19344 (g$745$14344 g$745$19346)))) (quote #f))) ((lambda (g$745$19352) (list g$745$19352)) (g$745$14340 g$745$19346))) (if (g$745$14336 g$745$19346) (list (begin (quote x) (quote ()))) (quote #f)))))) g$745$19344) (g$745$14330 g$745$19342))) (quote #f))) g$745$19306))) g$745$19302))) ((lambda (g$745$19374) (if (g$745$14332 g$745$19374) (begin (quote #f) ((lambda (g$745$19376) (if g$745$19376 (begin (quote #f) ((lambda (g$745$19378) (if g$745$19378 (begin (quote #f) (append g$745$19376 g$745$19378)) (quote #f))) ((lambda (g$745$19380) (list g$745$19380)) (g$745$14344 g$745$19374)))) (quote #f))) ((lambda (g$745$19382) (list g$745$19382)) (g$745$14340 g$745$19374)))) (quote #f))) g$745$19302))) g$745$19298))) ((lambda (g$745$19394) (if (g$745$14332 g$745$19394) (begin (quote #f) ((lambda (g$745$19396) (if g$745$19396 (begin (quote #f) ((lambda (g$745$19398) (if g$745$19398 (begin (quote #f) (append g$745$19396 g$745$19398)) (quote #f))) ((lambda (g$745$19400) (if (g$745$14332 g$745$19400) (begin (quote #f) ((lambda (g$745$19402) (if g$745$19402 (begin (quote #f) ((lambda (g$745$19404) (if g$745$19404 (begin (quote #f) (append g$745$19402 g$745$19404)) (quote #f))) ((lambda (g$745$19406) (if (equal? (g$745$14366 g$745$19406) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19400)))) (quote #f))) ((lambda (g$745$19408) (list g$745$19408)) (g$745$14340 g$745$19400)))) (quote #f))) (g$745$14344 g$745$19394)))) (quote #f))) ((lambda (g$745$19410) (if (g$745$14346 g$745$19410) (if (g$745$14354 g$745$19410 (g$745$14775 (quote quasisyntax))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19394)))) (quote #f))) g$745$19298))) g$745$19294))) ((lambda (g$745$19412) (if (g$745$14346 g$745$19412) (if (g$745$14354 g$745$19412 (g$745$14775 (quote unsyntax-splicing))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) g$745$19294))) g$745$19290))) ((lambda (g$745$19436) (if (g$745$14332 g$745$19436) (begin (quote #f) ((lambda (g$745$19438) (if g$745$19438 (begin (quote #f) ((lambda (g$745$19440) (if g$745$19440 (begin (quote #f) (append g$745$19438 g$745$19440)) (quote #f))) ((lambda (g$745$19442) (list g$745$19442)) (g$745$14344 g$745$19436)))) (quote #f))) ((lambda (g$745$19444) (if (g$745$14332 g$745$19444) (begin (quote #f) ((lambda (g$745$19446) (if g$745$19446 (begin (quote #f) ((lambda (g$745$19448) (if g$745$19448 (begin (quote #f) (append g$745$19446 g$745$19448)) (quote #f))) ((lambda (g$745$19450) (if (g$745$14332 g$745$19450) (begin (quote #f) ((lambda (g$745$19452) (if g$745$19452 (begin (quote #f) ((lambda (g$745$19454) (if g$745$19454 (begin (quote #f) (append g$745$19452 g$745$19454)) (quote #f))) ((lambda (g$745$19456) (if (equal? (g$745$14366 g$745$19456) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19450)))) (quote #f))) ((lambda (g$745$19458) (list g$745$19458)) (g$745$14340 g$745$19450)))) (quote #f))) (g$745$14344 g$745$19444)))) (quote #f))) ((lambda (g$745$19460) (if (g$745$14346 g$745$19460) (if (g$745$14354 g$745$19460 (g$745$14775 (quote unsyntax-splicing))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19444)))) (quote #f))) (g$745$14340 g$745$19436)))) (quote #f))) g$745$19290))) g$745$19286))) ((lambda (g$745$19462) (if (g$745$14346 g$745$19462) (if (g$745$14354 g$745$19462 (g$745$14775 (quote unsyntax))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) g$745$19286))) g$745$19282))) ((lambda (g$745$19476) (if (g$745$14332 g$745$19476) (begin (quote #f) ((lambda (g$745$19478) (if g$745$19478 (begin (quote #f) ((lambda (g$745$19480) (if g$745$19480 (begin (quote #f) (append g$745$19478 g$745$19480)) (quote #f))) ((lambda (g$745$19482) (if (g$745$14332 g$745$19482) (begin (quote #f) ((lambda (g$745$19484) (if g$745$19484 (begin (quote #f) ((lambda (g$745$19486) (if g$745$19486 (begin (quote #f) (append g$745$19484 g$745$19486)) (quote #f))) ((lambda (g$745$19488) (if (equal? (g$745$14366 g$745$19488) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19482)))) (quote #f))) ((lambda (g$745$19490) (list g$745$19490)) (g$745$14340 g$745$19482)))) (quote #f))) (g$745$14344 g$745$19476)))) (quote #f))) ((lambda (g$745$19492) (if (g$745$14346 g$745$19492) (if (g$745$14354 g$745$19492 (g$745$14775 (quote unsyntax))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19476)))) (quote #f))) g$745$19282))) g$745$19279))) (lambda (g$745$19244) ((lambda (g$745$19246) ((lambda (g$745$19248) (if (if g$745$19248 (begin (quote #f) (apply (lambda (g$745$19258) (quote #t)) g$745$19248)) (quote #f)) (apply (lambda (g$745$19250) (call-with-values (lambda () (g$745$19242 g$745$19250 (quote 0))) (lambda (g$745$19254 g$745$19255 g$745$19256) (g$745$14809 (list (quote syntax-case) (cons (quote list) g$745$19255) (quote ()) (list g$745$19254 (list (quote syntax) g$745$19256))))))) g$745$19248) (error (quote expander) (quote #3#) (g$745$14364 g$745$19246 (quote ()))))) ((lambda (g$745$19260) (if (g$745$14332 g$745$19260) (begin (quote #f) ((lambda (g$745$19262) (if g$745$19262 (begin (quote #f) ((lambda (g$745$19264) (if g$745$19264 (begin (quote #f) (append g$745$19262 g$745$19264)) (quote #f))) ((lambda (g$745$19266) (if (g$745$14332 g$745$19266) (begin (quote #f) ((lambda (g$745$19268) (if g$745$19268 (begin (quote #f) ((lambda (g$745$19270) (if g$745$19270 (begin (quote #f) (append g$745$19268 g$745$19270)) (quote #f))) ((lambda (g$745$19272) (if (equal? (g$745$14366 g$745$19272) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19266)))) (quote #f))) ((lambda (g$745$19274) (list g$745$19274)) (g$745$14340 g$745$19266)))) (quote #f))) (g$745$14344 g$745$19260)))) (quote #f))) ((lambda (g$745$19276) (quote ())) (g$745$14340 g$745$19260)))) (quote #f))) g$745$19246))) g$745$19244)))) (quote #f))))) (set! g$745$14851 (lambda (g$745$19494) (error (quote expander) (quote "define-struct not supported") (g$745$14364 g$745$19494 (quote ()))))) (set! g$745$14853 (lambda (g$745$19496) ((lambda (g$745$19498 g$745$19500 g$745$19502 g$745$19504 g$745$19506 g$745$19508 g$745$19510 g$745$19512 g$745$19514 g$745$19516 g$745$19518 g$745$19520 g$745$19522 g$745$19524) (begin (set! g$745$19498 (lambda (g$745$20590 . g$745$20588) (g$745$15002 g$745$20590 (string->symbol (apply string-append (map (lambda (g$745$20592) (if (symbol? g$745$20592) (symbol->string g$745$20592) (if (string? g$745$20592) g$745$20592 (error (quote define-record-type) (quote "BUG"))))) g$745$20588)))))) (set! g$745$19500 (lambda (g$745$20534) ((lambda (g$745$20536) ((lambda (g$745$20538) (if (if g$745$20538 (begin (quote #f) (apply (lambda (g$745$20558 g$745$20559 g$745$20560) (quote #t)) g$745$20538)) (quote #f)) (apply (lambda (g$745$20552 g$745$20553 g$745$20554) g$745$20552) g$745$20538) ((lambda (g$745$20540) ((lambda (g$745$20542) (if (if g$745$20542 (begin (quote #f) (apply (lambda (g$745$20546) (quote #t)) g$745$20542)) (quote #f)) (apply (lambda (g$745$20544) g$745$20544) g$745$20542) (error (quote expander) (quote #3#) (g$745$14364 g$745$20540 (quote ()))))) ((lambda (g$745$20548) (list g$745$20548)) g$745$20540))) g$745$20536))) ((lambda (g$745$20562) (if (g$745$14332 g$745$20562) (begin (quote #f) ((lambda (g$745$20564) (if g$745$20564 (begin (quote #f) ((lambda (g$745$20566) (if g$745$20566 (begin (quote #f) (append g$745$20564 g$745$20566)) (quote #f))) ((lambda (g$745$20568) (if (g$745$14332 g$745$20568) (begin (quote #f) ((lambda (g$745$20570) (if g$745$20570 (begin (quote #f) ((lambda (g$745$20572) (if g$745$20572 (begin (quote #f) (append g$745$20570 g$745$20572)) (quote #f))) ((lambda (g$745$20574) (if (g$745$14332 g$745$20574) (begin (quote #f) ((lambda (g$745$20576) (if g$745$20576 (begin (quote #f) ((lambda (g$745$20578) (if g$745$20578 (begin (quote #f) (append g$745$20576 g$745$20578)) (quote #f))) ((lambda (g$745$20580) (if (equal? (g$745$14366 g$745$20580) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20574)))) (quote #f))) ((lambda (g$745$20582) (list g$745$20582)) (g$745$14340 g$745$20574)))) (quote #f))) (g$745$14344 g$745$20568)))) (quote #f))) ((lambda (g$745$20584) (list g$745$20584)) (g$745$14340 g$745$20568)))) (quote #f))) (g$745$14344 g$745$20562)))) (quote #f))) ((lambda (g$745$20586) (list g$745$20586)) (g$745$14340 g$745$20562)))) (quote #f))) g$745$20536))) g$745$20534))) (set! g$745$19502 (lambda (g$745$20479 g$745$20480) ((lambda (g$745$20482) ((lambda (g$745$20484) (if (if g$745$20484 (begin (quote #f) (apply (lambda (g$745$20504 g$745$20505 g$745$20506) (quote #t)) g$745$20484)) (quote #f)) (apply (lambda (g$745$20498 g$745$20499 g$745$20500) g$745$20499) g$745$20484) ((lambda (g$745$20486) ((lambda (g$745$20488) (if (if g$745$20488 (begin (quote #f) (apply (lambda (g$745$20492) (quote #t)) g$745$20488)) (quote #f)) (apply (lambda (g$745$20490) (g$745$19498 g$745$20480 (quote "make-") (g$745$14366 g$745$20490))) g$745$20488) (error (quote expander) (quote #3#) (g$745$14364 g$745$20486 (quote ()))))) ((lambda (g$745$20494) (list g$745$20494)) g$745$20486))) g$745$20482))) ((lambda (g$745$20508) (if (g$745$14332 g$745$20508) (begin (quote #f) ((lambda (g$745$20510) (if g$745$20510 (begin (quote #f) ((lambda (g$745$20512) (if g$745$20512 (begin (quote #f) (append g$745$20510 g$745$20512)) (quote #f))) ((lambda (g$745$20514) (if (g$745$14332 g$745$20514) (begin (quote #f) ((lambda (g$745$20516) (if g$745$20516 (begin (quote #f) ((lambda (g$745$20518) (if g$745$20518 (begin (quote #f) (append g$745$20516 g$745$20518)) (quote #f))) ((lambda (g$745$20520) (if (g$745$14332 g$745$20520) (begin (quote #f) ((lambda (g$745$20522) (if g$745$20522 (begin (quote #f) ((lambda (g$745$20524) (if g$745$20524 (begin (quote #f) (append g$745$20522 g$745$20524)) (quote #f))) ((lambda (g$745$20526) (if (equal? (g$745$14366 g$745$20526) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20520)))) (quote #f))) ((lambda (g$745$20528) (list g$745$20528)) (g$745$14340 g$745$20520)))) (quote #f))) (g$745$14344 g$745$20514)))) (quote #f))) ((lambda (g$745$20530) (list g$745$20530)) (g$745$14340 g$745$20514)))) (quote #f))) (g$745$14344 g$745$20508)))) (quote #f))) ((lambda (g$745$20532) (list g$745$20532)) (g$745$14340 g$745$20508)))) (quote #f))) g$745$20482))) g$745$20479))) (set! g$745$19504 (lambda (g$745$20423 g$745$20424) ((lambda (g$745$20426) ((lambda (g$745$20428) (if (if g$745$20428 (begin (quote #f) (apply (lambda (g$745$20448 g$745$20449 g$745$20450) (quote #t)) g$745$20428)) (quote #f)) (apply (lambda (g$745$20442 g$745$20443 g$745$20444) g$745$20444) g$745$20428) ((lambda (g$745$20430) ((lambda (g$745$20432) (if (if g$745$20432 (begin (quote #f) (apply (lambda (g$745$20436) (quote #t)) g$745$20432)) (quote #f)) (apply (lambda (g$745$20434) (g$745$19498 g$745$20424 (g$745$14366 g$745$20434) (quote "?"))) g$745$20432) (error (quote expander) (quote #3#) (g$745$14364 g$745$20430 (quote ()))))) ((lambda (g$745$20438) (list g$745$20438)) g$745$20430))) g$745$20426))) ((lambda (g$745$20452) (if (g$745$14332 g$745$20452) (begin (quote #f) ((lambda (g$745$20454) (if g$745$20454 (begin (quote #f) ((lambda (g$745$20456) (if g$745$20456 (begin (quote #f) (append g$745$20454 g$745$20456)) (quote #f))) ((lambda (g$745$20458) (if (g$745$14332 g$745$20458) (begin (quote #f) ((lambda (g$745$20460) (if g$745$20460 (begin (quote #f) ((lambda (g$745$20462) (if g$745$20462 (begin (quote #f) (append g$745$20460 g$745$20462)) (quote #f))) ((lambda (g$745$20464) (if (g$745$14332 g$745$20464) (begin (quote #f) ((lambda (g$745$20466) (if g$745$20466 (begin (quote #f) ((lambda (g$745$20468) (if g$745$20468 (begin (quote #f) (append g$745$20466 g$745$20468)) (quote #f))) ((lambda (g$745$20470) (if (equal? (g$745$14366 g$745$20470) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20464)))) (quote #f))) ((lambda (g$745$20472) (list g$745$20472)) (g$745$14340 g$745$20464)))) (quote #f))) (g$745$14344 g$745$20458)))) (quote #f))) ((lambda (g$745$20474) (list g$745$20474)) (g$745$14340 g$745$20458)))) (quote #f))) (g$745$14344 g$745$20452)))) (quote #f))) ((lambda (g$745$20476) (list g$745$20476)) (g$745$14340 g$745$20452)))) (quote #f))) g$745$20426))) g$745$20423))) (set! g$745$19506 (lambda (g$745$20379 g$745$20380) ((lambda (g$745$20382) ((lambda (g$745$20384) (if (if g$745$20384 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20384)) (quote #f)) (apply (lambda () (quote #f)) g$745$20384) ((lambda (g$745$20386) ((lambda (g$745$20388) (if (if g$745$20388 (begin (quote #f) (apply (lambda (g$745$20398 g$745$20399 g$745$20400) (quote #t)) g$745$20388)) (quote #f)) (apply (lambda (g$745$20392 g$745$20393 g$745$20394) (if (g$745$14354 (g$745$14809 g$745$20379) g$745$20392) (cons g$745$20392 g$745$20393) (g$745$19506 g$745$20379 g$745$20394))) g$745$20388) (error (quote expander) (quote #3#) (g$745$14364 g$745$20386 (quote ()))))) ((lambda (g$745$20402) (if (g$745$14332 g$745$20402) (begin (quote #f) ((lambda (g$745$20404) (if g$745$20404 (begin (quote #f) ((lambda (g$745$20406) (if g$745$20406 (begin (quote #f) (append g$745$20404 g$745$20406)) (quote #f))) ((lambda (g$745$20408) (list g$745$20408)) (g$745$14344 g$745$20402)))) (quote #f))) ((lambda (g$745$20410) (if (g$745$14332 g$745$20410) (begin (quote #f) ((lambda (g$745$20412) (if g$745$20412 (begin (quote #f) ((lambda (g$745$20414) (if g$745$20414 (begin (quote #f) (append g$745$20412 g$745$20414)) (quote #f))) ((lambda (g$745$20416) (list g$745$20416)) (g$745$14344 g$745$20410)))) (quote #f))) ((lambda (g$745$20418) (list g$745$20418)) (g$745$14340 g$745$20410)))) (quote #f))) (g$745$14340 g$745$20402)))) (quote #f))) g$745$20386))) g$745$20382))) ((lambda (g$745$20420) (if (equal? (g$745$14366 g$745$20420) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$20382))) g$745$20380))) (set! g$745$19508 (lambda (g$745$20122 g$745$20123 g$745$20124) ((lambda (g$745$20126) (begin (set! g$745$20126 (lambda (g$745$20304) (list->vector (map (lambda (g$745$20306) ((lambda (g$745$20308) ((lambda (g$745$20310) (if (if g$745$20310 (begin (quote #f) (apply (lambda (g$745$20357 g$745$20358) (quote #t)) g$745$20310)) (quote #f)) (apply (lambda (g$745$20353 g$745$20354) (list (quote mutable) g$745$20353)) g$745$20310) ((lambda (g$745$20312) ((lambda (g$745$20314) (if (if g$745$20314 (begin (quote #f) (apply (lambda (g$745$20331 g$745$20332) (quote #t)) g$745$20314)) (quote #f)) (apply (lambda (g$745$20327 g$745$20328) (list (quote immutable) g$745$20327)) g$745$20314) ((lambda (g$745$20316) ((lambda (g$745$20318) (if (if g$745$20318 (begin (quote #f) (apply (lambda (g$745$20322) (quote #t)) g$745$20318)) (quote #f)) (apply (lambda (g$745$20320) (list (quote immutable) g$745$20320)) g$745$20318) (error (quote expander) (quote #3#) (g$745$14364 g$745$20316 (quote ()))))) ((lambda (g$745$20324) (list g$745$20324)) g$745$20316))) g$745$20312))) ((lambda (g$745$20334) (if (g$745$14332 g$745$20334) (begin (quote #f) ((lambda (g$745$20336) (if g$745$20336 (begin (quote #f) ((lambda (g$745$20338) (if g$745$20338 (begin (quote #f) (append g$745$20336 g$745$20338)) (quote #f))) ((lambda (g$745$20340) (if (g$745$14332 g$745$20340) (begin (quote #f) ((lambda (g$745$20342) (if g$745$20342 (begin (quote #f) ((lambda (g$745$20344) (if g$745$20344 (begin (quote #f) (append g$745$20342 g$745$20344)) (quote #f))) ((lambda (g$745$20346) (list g$745$20346)) (g$745$14344 g$745$20340)))) (quote #f))) ((lambda (g$745$20348) (list g$745$20348)) (g$745$14340 g$745$20340)))) (quote #f))) (g$745$14344 g$745$20334)))) (quote #f))) ((lambda (g$745$20350) (if (g$745$14346 g$745$20350) (if (g$745$14354 g$745$20350 (g$745$14775 (quote immutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$20334)))) (quote #f))) g$745$20312))) g$745$20308))) ((lambda (g$745$20360) (if (g$745$14332 g$745$20360) (begin (quote #f) ((lambda (g$745$20362) (if g$745$20362 (begin (quote #f) ((lambda (g$745$20364) (if g$745$20364 (begin (quote #f) (append g$745$20362 g$745$20364)) (quote #f))) ((lambda (g$745$20366) (if (g$745$14332 g$745$20366) (begin (quote #f) ((lambda (g$745$20368) (if g$745$20368 (begin (quote #f) ((lambda (g$745$20370) (if g$745$20370 (begin (quote #f) (append g$745$20368 g$745$20370)) (quote #f))) ((lambda (g$745$20372) (list g$745$20372)) (g$745$14344 g$745$20366)))) (quote #f))) ((lambda (g$745$20374) (list g$745$20374)) (g$745$14340 g$745$20366)))) (quote #f))) (g$745$14344 g$745$20360)))) (quote #f))) ((lambda (g$745$20376) (if (g$745$14346 g$745$20376) (if (g$745$14354 g$745$20376 (g$745$14775 (quote mutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$20360)))) (quote #f))) g$745$20308))) g$745$20306)) g$745$20304)))) ((lambda (g$745$20132 g$745$20133 g$745$20134 g$745$20135 g$745$20136) (g$745$14809 (list (quote make-record-type-descriptor) (list (quote quote) g$745$20123) g$745$20132 g$745$20133 g$745$20134 g$745$20135 g$745$20136))) ((lambda (g$745$20138) ((lambda (g$745$20140) (if (if g$745$20140 (begin (quote #f) (apply (lambda (g$745$20150) (quote #t)) g$745$20140)) (quote #f)) (apply (lambda (g$745$20148) (list (quote record-type-descriptor) g$745$20148)) g$745$20140) ((lambda (g$745$20142) ((lambda (g$745$20144) (if (if g$745$20144 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20144)) (quote #f)) (apply (lambda () (quote #f)) g$745$20144) (error (quote expander) (quote #3#) (g$745$14364 g$745$20142 (quote ()))))) ((lambda (g$745$20146) (quote ())) g$745$20142))) g$745$20138))) ((lambda (g$745$20152) (if (g$745$14332 g$745$20152) (begin (quote #f) ((lambda (g$745$20154) (if g$745$20154 (begin (quote #f) ((lambda (g$745$20156) (if g$745$20156 (begin (quote #f) (append g$745$20154 g$745$20156)) (quote #f))) ((lambda (g$745$20158) (if (g$745$14332 g$745$20158) (begin (quote #f) ((lambda (g$745$20160) (if g$745$20160 (begin (quote #f) ((lambda (g$745$20162) (if g$745$20162 (begin (quote #f) (append g$745$20160 g$745$20162)) (quote #f))) ((lambda (g$745$20164) (if (equal? (g$745$14366 g$745$20164) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20158)))) (quote #f))) ((lambda (g$745$20166) (list g$745$20166)) (g$745$14340 g$745$20158)))) (quote #f))) (g$745$14344 g$745$20152)))) (quote #f))) ((lambda (g$745$20168) (quote ())) (g$745$14340 g$745$20152)))) (quote #f))) g$745$20138))) (g$745$19506 (quote parent) g$745$20124)) ((lambda (g$745$20170) ((lambda (g$745$20172) (if (if g$745$20172 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20172)) (quote #f)) (apply (lambda () (list (quote quote) (gensym))) g$745$20172) ((lambda (g$745$20174) ((lambda (g$745$20176) (if (if g$745$20176 (begin (quote #f) (apply (lambda (g$745$20186) (quote #t)) g$745$20176)) (quote #f)) (apply (lambda (g$745$20184) (list (quote quote) g$745$20184)) g$745$20176) ((lambda (g$745$20178) ((lambda (g$745$20180) (if (if g$745$20180 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20180)) (quote #f)) (apply (lambda () (quote #f)) g$745$20180) (error (quote expander) (quote #3#) (g$745$14364 g$745$20178 (quote ()))))) ((lambda (g$745$20182) (quote ())) g$745$20178))) g$745$20174))) ((lambda (g$745$20188) (if (g$745$14332 g$745$20188) (begin (quote #f) ((lambda (g$745$20190) (if g$745$20190 (begin (quote #f) ((lambda (g$745$20192) (if g$745$20192 (begin (quote #f) (append g$745$20190 g$745$20192)) (quote #f))) ((lambda (g$745$20194) (if (g$745$14332 g$745$20194) (begin (quote #f) ((lambda (g$745$20196) (if g$745$20196 (begin (quote #f) ((lambda (g$745$20198) (if g$745$20198 (begin (quote #f) (append g$745$20196 g$745$20198)) (quote #f))) ((lambda (g$745$20200) (if (equal? (g$745$14366 g$745$20200) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20194)))) (quote #f))) ((lambda (g$745$20202) (list g$745$20202)) (g$745$14340 g$745$20194)))) (quote #f))) (g$745$14344 g$745$20188)))) (quote #f))) ((lambda (g$745$20204) (quote ())) (g$745$14340 g$745$20188)))) (quote #f))) g$745$20174))) g$745$20170))) ((lambda (g$745$20206) (if (g$745$14332 g$745$20206) (begin (quote #f) ((lambda (g$745$20208) (if g$745$20208 (begin (quote #f) ((lambda (g$745$20210) (if g$745$20210 (begin (quote #f) (append g$745$20208 g$745$20210)) (quote #f))) ((lambda (g$745$20212) (if (equal? (g$745$14366 g$745$20212) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20206)))) (quote #f))) ((lambda (g$745$20214) (quote ())) (g$745$14340 g$745$20206)))) (quote #f))) g$745$20170))) (g$745$19506 (quote nongenerative) g$745$20124)) ((lambda (g$745$20216) ((lambda (g$745$20218) (if (if g$745$20218 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20218)) (quote #f)) (apply (lambda () (quote #t)) g$745$20218) ((lambda (g$745$20220) ((lambda (g$745$20222) (if (if g$745$20222 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20222)) (quote #f)) (apply (lambda () (quote #f)) g$745$20222) (error (quote expander) (quote #3#) (g$745$14364 g$745$20220 (quote ()))))) ((lambda (g$745$20224) (quote ())) g$745$20220))) g$745$20216))) ((lambda (g$745$20226) (if (g$745$14332 g$745$20226) (begin (quote #f) ((lambda (g$745$20228) (if g$745$20228 (begin (quote #f) ((lambda (g$745$20230) (if g$745$20230 (begin (quote #f) (append g$745$20228 g$745$20230)) (quote #f))) ((lambda (g$745$20232) (if (g$745$14332 g$745$20232) (begin (quote #f) ((lambda (g$745$20234) (if g$745$20234 (begin (quote #f) ((lambda (g$745$20236) (if g$745$20236 (begin (quote #f) (append g$745$20234 g$745$20236)) (quote #f))) ((lambda (g$745$20238) (if (equal? (g$745$14366 g$745$20238) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20232)))) (quote #f))) ((lambda (g$745$20240) (if (equal? (g$745$14366 g$745$20240) (quote #t)) (begin (quote #f) (quote ())) (quote #f))) (g$745$14340 g$745$20232)))) (quote #f))) (g$745$14344 g$745$20226)))) (quote #f))) ((lambda (g$745$20242) (quote ())) (g$745$14340 g$745$20226)))) (quote #f))) g$745$20216))) (g$745$19506 (quote sealed?) g$745$20124)) ((lambda (g$745$20244) ((lambda (g$745$20246) (if (if g$745$20246 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20246)) (quote #f)) (apply (lambda () (quote #t)) g$745$20246) ((lambda (g$745$20248) ((lambda (g$745$20250) (if (if g$745$20250 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20250)) (quote #f)) (apply (lambda () (quote #f)) g$745$20250) (error (quote expander) (quote #3#) (g$745$14364 g$745$20248 (quote ()))))) ((lambda (g$745$20252) (quote ())) g$745$20248))) g$745$20244))) ((lambda (g$745$20254) (if (g$745$14332 g$745$20254) (begin (quote #f) ((lambda (g$745$20256) (if g$745$20256 (begin (quote #f) ((lambda (g$745$20258) (if g$745$20258 (begin (quote #f) (append g$745$20256 g$745$20258)) (quote #f))) ((lambda (g$745$20260) (if (g$745$14332 g$745$20260) (begin (quote #f) ((lambda (g$745$20262) (if g$745$20262 (begin (quote #f) ((lambda (g$745$20264) (if g$745$20264 (begin (quote #f) (append g$745$20262 g$745$20264)) (quote #f))) ((lambda (g$745$20266) (if (equal? (g$745$14366 g$745$20266) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20260)))) (quote #f))) ((lambda (g$745$20268) (if (equal? (g$745$14366 g$745$20268) (quote #t)) (begin (quote #f) (quote ())) (quote #f))) (g$745$14340 g$745$20260)))) (quote #f))) (g$745$14344 g$745$20254)))) (quote #f))) ((lambda (g$745$20270) (quote ())) (g$745$14340 g$745$20254)))) (quote #f))) g$745$20244))) (g$745$19506 (quote opaque?) g$745$20124)) ((lambda (g$745$20272) ((lambda (g$745$20274) (if (if g$745$20274 (begin (quote #f) (apply (lambda (g$745$20284) (quote #t)) g$745$20274)) (quote #f)) (apply (lambda (g$745$20282) (list (quote quote) (g$745$20126 g$745$20282))) g$745$20274) ((lambda (g$745$20276) ((lambda (g$745$20278) (if (if g$745$20278 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20278)) (quote #f)) (apply (lambda () (quote (quote #0()))) g$745$20278) (error (quote expander) (quote #3#) (g$745$14364 g$745$20276 (quote ()))))) ((lambda (g$745$20280) (quote ())) g$745$20276))) g$745$20272))) ((lambda (g$745$20286) (if (g$745$14332 g$745$20286) (begin (quote #f) ((lambda (g$745$20288) (if g$745$20288 (begin (quote #f) ((lambda (g$745$20290) (if g$745$20290 (begin (quote #f) (append g$745$20288 g$745$20290)) (quote #f))) ((letrec ((g$745$20292 (lambda (g$745$20294) (if (g$745$14332 g$745$20294) ((lambda (g$745$20296) (if g$745$20296 (begin (quote #f) ((lambda (g$745$20298) (if g$745$20298 (begin (quote #f) (map cons g$745$20296 g$745$20298)) (quote #f))) (g$745$20292 (g$745$14344 g$745$20294)))) (quote #f))) ((lambda (g$745$20300) (list g$745$20300)) (g$745$14340 g$745$20294))) (if (g$745$14336 g$745$20294) (list (begin (quote field-spec*) (quote ()))) (quote #f)))))) g$745$20292) (g$745$14344 g$745$20286)))) (quote #f))) ((lambda (g$745$20302) (quote ())) (g$745$14340 g$745$20286)))) (quote #f))) g$745$20272))) (g$745$19506 (quote fields) g$745$20124))))) (quote #f)))) (set! g$745$19510 (lambda (g$745$20082 g$745$20083 g$745$20084) ((lambda (g$745$20086) (list (quote make-record-constructor-descriptor) g$745$20083 g$745$20086 g$745$20084)) ((lambda (g$745$20088) ((lambda (g$745$20090) (if (if g$745$20090 (begin (quote #f) (apply (lambda (g$745$20100) (quote #t)) g$745$20090)) (quote #f)) (apply (lambda (g$745$20098) (list (quote record-constructor-descriptor) g$745$20098)) g$745$20090) ((lambda (g$745$20092) ((lambda (g$745$20094) (if (if g$745$20094 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20094)) (quote #f)) (apply (lambda () (quote #f)) g$745$20094) (error (quote expander) (quote #3#) (g$745$14364 g$745$20092 (quote ()))))) ((lambda (g$745$20096) (quote ())) g$745$20092))) g$745$20088))) ((lambda (g$745$20102) (if (g$745$14332 g$745$20102) (begin (quote #f) ((lambda (g$745$20104) (if g$745$20104 (begin (quote #f) ((lambda (g$745$20106) (if g$745$20106 (begin (quote #f) (append g$745$20104 g$745$20106)) (quote #f))) ((lambda (g$745$20108) (if (g$745$14332 g$745$20108) (begin (quote #f) ((lambda (g$745$20110) (if g$745$20110 (begin (quote #f) ((lambda (g$745$20112) (if g$745$20112 (begin (quote #f) (append g$745$20110 g$745$20112)) (quote #f))) ((lambda (g$745$20114) (if (equal? (g$745$14366 g$745$20114) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20108)))) (quote #f))) ((lambda (g$745$20116) (list g$745$20116)) (g$745$14340 g$745$20108)))) (quote #f))) (g$745$14344 g$745$20102)))) (quote #f))) ((lambda (g$745$20118) (quote ())) (g$745$14340 g$745$20102)))) (quote #f))) g$745$20088))) (g$745$19506 (quote parent) g$745$20082))))) (set! g$745$19512 (lambda (g$745$20046) ((lambda (g$745$20048) ((lambda (g$745$20050) (if (if g$745$20050 (begin (quote #f) (apply (lambda (g$745$20060) (quote #t)) g$745$20050)) (quote #f)) (apply (lambda (g$745$20058) g$745$20058) g$745$20050) ((lambda (g$745$20052) ((lambda (g$745$20054) (if (if g$745$20054 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20054)) (quote #f)) (apply (lambda () (quote #f)) g$745$20054) (error (quote expander) (quote #3#) (g$745$14364 g$745$20052 (quote ()))))) ((lambda (g$745$20056) (quote ())) g$745$20052))) g$745$20048))) ((lambda (g$745$20062) (if (g$745$14332 g$745$20062) (begin (quote #f) ((lambda (g$745$20064) (if g$745$20064 (begin (quote #f) ((lambda (g$745$20066) (if g$745$20066 (begin (quote #f) (append g$745$20064 g$745$20066)) (quote #f))) ((lambda (g$745$20068) (if (g$745$14332 g$745$20068) (begin (quote #f) ((lambda (g$745$20070) (if g$745$20070 (begin (quote #f) ((lambda (g$745$20072) (if g$745$20072 (begin (quote #f) (append g$745$20070 g$745$20072)) (quote #f))) ((lambda (g$745$20074) (if (equal? (g$745$14366 g$745$20074) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20068)))) (quote #f))) ((lambda (g$745$20076) (list g$745$20076)) (g$745$14340 g$745$20068)))) (quote #f))) (g$745$14344 g$745$20062)))) (quote #f))) ((lambda (g$745$20078) (quote ())) (g$745$14340 g$745$20062)))) (quote #f))) g$745$20048))) (g$745$19506 (quote protocol) g$745$20046)))) (set! g$745$19514 (lambda (g$745$19986) ((lambda (g$745$19988) ((lambda (g$745$19990) (if (if g$745$19990 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19990)) (quote #f)) (apply (lambda () (quote ())) g$745$19990) ((lambda (g$745$19992) ((lambda (g$745$19994) (if (if g$745$19994 (begin (quote #f) (apply (lambda (g$745$20016) (quote #t)) g$745$19994)) (quote #f)) (apply (lambda (g$745$20014) g$745$20014) g$745$19994) ((lambda (g$745$19996) ((lambda (g$745$19998) (if (if g$745$19998 (begin (quote #f) (apply (lambda (g$745$20002) (quote #t)) g$745$19998)) (quote #f)) (apply (lambda (g$745$20000) (g$745$19514 g$745$20000)) g$745$19998) (error (quote expander) (quote #3#) (g$745$14364 g$745$19996 (quote ()))))) ((lambda (g$745$20004) (if (g$745$14332 g$745$20004) (begin (quote #f) ((lambda (g$745$20006) (if g$745$20006 (begin (quote #f) ((lambda (g$745$20008) (if g$745$20008 (begin (quote #f) (append g$745$20006 g$745$20008)) (quote #f))) ((lambda (g$745$20010) (list g$745$20010)) (g$745$14344 g$745$20004)))) (quote #f))) ((lambda (g$745$20012) (quote ())) (g$745$14340 g$745$20004)))) (quote #f))) g$745$19996))) g$745$19992))) ((lambda (g$745$20018) (if (g$745$14332 g$745$20018) (begin (quote #f) ((lambda (g$745$20020) (if g$745$20020 (begin (quote #f) ((lambda (g$745$20022) (if g$745$20022 (begin (quote #f) (append g$745$20020 g$745$20022)) (quote #f))) ((lambda (g$745$20024) (quote ())) (g$745$14344 g$745$20018)))) (quote #f))) ((lambda (g$745$20026) (if (g$745$14332 g$745$20026) (begin (quote #f) ((lambda (g$745$20028) (if g$745$20028 (begin (quote #f) ((lambda (g$745$20030) (if g$745$20030 (begin (quote #f) (append g$745$20028 g$745$20030)) (quote #f))) ((letrec ((g$745$20032 (lambda (g$745$20034) (if (g$745$14332 g$745$20034) ((lambda (g$745$20036) (if g$745$20036 (begin (quote #f) ((lambda (g$745$20038) (if g$745$20038 (begin (quote #f) (map cons g$745$20036 g$745$20038)) (quote #f))) (g$745$20032 (g$745$14344 g$745$20034)))) (quote #f))) ((lambda (g$745$20040) (list g$745$20040)) (g$745$14340 g$745$20034))) (if (g$745$14336 g$745$20034) (list (begin (quote f*) (quote ()))) (quote #f)))))) g$745$20032) (g$745$14344 g$745$20026)))) (quote #f))) ((lambda (g$745$20042) (if (g$745$14346 g$745$20042) (if (g$745$14354 g$745$20042 (g$745$14775 (quote fields))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$20026)))) (quote #f))) (g$745$14340 g$745$20018)))) (quote #f))) g$745$19992))) g$745$19988))) ((lambda (g$745$20044) (if (equal? (g$745$14366 g$745$20044) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$19988))) g$745$19986))) (set! g$745$19516 (lambda (g$745$19928) (letrec ((g$745$19930 (lambda (g$745$19933 g$745$19934) ((lambda (g$745$19936) ((lambda (g$745$19938) (if (if g$745$19938 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19938)) (quote #f)) (apply (lambda () (quote ())) g$745$19938) ((lambda (g$745$19940) ((lambda (g$745$19942) (if (if g$745$19942 (begin (quote #f) (apply (lambda (g$745$19964) (quote #t)) g$745$19942)) (quote #f)) (apply (lambda (g$745$19962) (cons g$745$19934 (g$745$19930 g$745$19962 (+ g$745$19934 (quote 1))))) g$745$19942) ((lambda (g$745$19944) ((lambda (g$745$19946) (if (if g$745$19946 (begin (quote #f) (apply (lambda (g$745$19950) (quote #t)) g$745$19946)) (quote #f)) (apply (lambda (g$745$19948) (g$745$19930 g$745$19948 (+ g$745$19934 (quote 1)))) g$745$19946) (error (quote expander) (quote #3#) (g$745$14364 g$745$19944 (quote ()))))) ((lambda (g$745$19952) (if (g$745$14332 g$745$19952) (begin (quote #f) ((lambda (g$745$19954) (if g$745$19954 (begin (quote #f) ((lambda (g$745$19956) (if g$745$19956 (begin (quote #f) (append g$745$19954 g$745$19956)) (quote #f))) ((lambda (g$745$19958) (list g$745$19958)) (g$745$14344 g$745$19952)))) (quote #f))) ((lambda (g$745$19960) (quote ())) (g$745$14340 g$745$19952)))) (quote #f))) g$745$19944))) g$745$19940))) ((lambda (g$745$19966) (if (g$745$14332 g$745$19966) (begin (quote #f) ((lambda (g$745$19968) (if g$745$19968 (begin (quote #f) ((lambda (g$745$19970) (if g$745$19970 (begin (quote #f) (append g$745$19968 g$745$19970)) (quote #f))) ((lambda (g$745$19972) (list g$745$19972)) (g$745$14344 g$745$19966)))) (quote #f))) ((lambda (g$745$19974) (if (g$745$14332 g$745$19974) (begin (quote #f) ((lambda (g$745$19976) (if g$745$19976 (begin (quote #f) ((lambda (g$745$19978) (if g$745$19978 (begin (quote #f) (append g$745$19976 g$745$19978)) (quote #f))) ((lambda (g$745$19980) (quote ())) (g$745$14344 g$745$19974)))) (quote #f))) ((lambda (g$745$19982) (if (g$745$14346 g$745$19982) (if (g$745$14354 g$745$19982 (g$745$14775 (quote mutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19974)))) (quote #f))) (g$745$14340 g$745$19966)))) (quote #f))) g$745$19940))) g$745$19936))) ((lambda (g$745$19984) (if (equal? (g$745$14366 g$745$19984) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$19936))) g$745$19933)))) (g$745$19930 g$745$19928 (quote 0))))) (set! g$745$19518 (lambda (g$745$19792 g$745$19793 g$745$19794) ((lambda (g$745$19796) (begin (set! g$745$19796 (lambda (g$745$19926) (g$745$15002 g$745$19794 (string->symbol (string-append (quote "set-") (symbol->string (g$745$15004 g$745$19792)) (quote "-") (symbol->string (g$745$15004 g$745$19926)) (quote "!")))))) (letrec ((g$745$19798 (lambda (g$745$19800) ((lambda (g$745$19802) ((lambda (g$745$19804) (if (if g$745$19804 (begin (quote #f) (apply (lambda () (quote #t)) g$745$19804)) (quote #f)) (apply (lambda () (quote ())) g$745$19804) ((lambda (g$745$19806) ((lambda (g$745$19808) (if (if g$745$19808 (begin (quote #f) (apply (lambda (g$745$19877 g$745$19878 g$745$19879 g$745$19880) (quote #t)) g$745$19808)) (quote #f)) (apply (lambda (g$745$19869 g$745$19870 g$745$19871 g$745$19872) (cons g$745$19871 (g$745$19798 g$745$19872))) g$745$19808) ((lambda (g$745$19810) ((lambda (g$745$19812) (if (if g$745$19812 (begin (quote #f) (apply (lambda (g$745$19837 g$745$19838) (quote #t)) g$745$19812)) (quote #f)) (apply (lambda (g$745$19833 g$745$19834) (cons (g$745$19796 g$745$19833) (g$745$19798 g$745$19834))) g$745$19812) ((lambda (g$745$19814) ((lambda (g$745$19816) (if (if g$745$19816 (begin (quote #f) (apply (lambda (g$745$19820) (quote #t)) g$745$19816)) (quote #f)) (apply (lambda (g$745$19818) (g$745$19798 g$745$19818)) g$745$19816) (error (quote expander) (quote #3#) (g$745$14364 g$745$19814 (quote ()))))) ((lambda (g$745$19822) (if (g$745$14332 g$745$19822) (begin (quote #f) ((lambda (g$745$19824) (if g$745$19824 (begin (quote #f) ((lambda (g$745$19826) (if g$745$19826 (begin (quote #f) (append g$745$19824 g$745$19826)) (quote #f))) ((lambda (g$745$19828) (list g$745$19828)) (g$745$14344 g$745$19822)))) (quote #f))) ((lambda (g$745$19830) (quote ())) (g$745$14340 g$745$19822)))) (quote #f))) g$745$19814))) g$745$19810))) ((lambda (g$745$19840) (if (g$745$14332 g$745$19840) (begin (quote #f) ((lambda (g$745$19842) (if g$745$19842 (begin (quote #f) ((lambda (g$745$19844) (if g$745$19844 (begin (quote #f) (append g$745$19842 g$745$19844)) (quote #f))) ((lambda (g$745$19846) (list g$745$19846)) (g$745$14344 g$745$19840)))) (quote #f))) ((lambda (g$745$19848) (if (g$745$14332 g$745$19848) (begin (quote #f) ((lambda (g$745$19850) (if g$745$19850 (begin (quote #f) ((lambda (g$745$19852) (if g$745$19852 (begin (quote #f) (append g$745$19850 g$745$19852)) (quote #f))) ((lambda (g$745$19854) (if (g$745$14332 g$745$19854) (begin (quote #f) ((lambda (g$745$19856) (if g$745$19856 (begin (quote #f) ((lambda (g$745$19858) (if g$745$19858 (begin (quote #f) (append g$745$19856 g$745$19858)) (quote #f))) ((lambda (g$745$19860) (if (equal? (g$745$14366 g$745$19860) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19854)))) (quote #f))) ((lambda (g$745$19862) (list g$745$19862)) (g$745$14340 g$745$19854)))) (quote #f))) (g$745$14344 g$745$19848)))) (quote #f))) ((lambda (g$745$19864) (if (g$745$14346 g$745$19864) (if (g$745$14354 g$745$19864 (g$745$14775 (quote mutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19848)))) (quote #f))) (g$745$14340 g$745$19840)))) (quote #f))) g$745$19810))) g$745$19806))) ((lambda (g$745$19882) (if (g$745$14332 g$745$19882) (begin (quote #f) ((lambda (g$745$19884) (if g$745$19884 (begin (quote #f) ((lambda (g$745$19886) (if g$745$19886 (begin (quote #f) (append g$745$19884 g$745$19886)) (quote #f))) ((lambda (g$745$19888) (list g$745$19888)) (g$745$14344 g$745$19882)))) (quote #f))) ((lambda (g$745$19890) (if (g$745$14332 g$745$19890) (begin (quote #f) ((lambda (g$745$19892) (if g$745$19892 (begin (quote #f) ((lambda (g$745$19894) (if g$745$19894 (begin (quote #f) (append g$745$19892 g$745$19894)) (quote #f))) ((lambda (g$745$19896) (if (g$745$14332 g$745$19896) (begin (quote #f) ((lambda (g$745$19898) (if g$745$19898 (begin (quote #f) ((lambda (g$745$19900) (if g$745$19900 (begin (quote #f) (append g$745$19898 g$745$19900)) (quote #f))) ((lambda (g$745$19902) (if (g$745$14332 g$745$19902) (begin (quote #f) ((lambda (g$745$19904) (if g$745$19904 (begin (quote #f) ((lambda (g$745$19906) (if g$745$19906 (begin (quote #f) (append g$745$19904 g$745$19906)) (quote #f))) ((lambda (g$745$19908) (if (g$745$14332 g$745$19908) (begin (quote #f) ((lambda (g$745$19910) (if g$745$19910 (begin (quote #f) ((lambda (g$745$19912) (if g$745$19912 (begin (quote #f) (append g$745$19910 g$745$19912)) (quote #f))) ((lambda (g$745$19914) (if (equal? (g$745$14366 g$745$19914) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19908)))) (quote #f))) ((lambda (g$745$19916) (list g$745$19916)) (g$745$14340 g$745$19908)))) (quote #f))) (g$745$14344 g$745$19902)))) (quote #f))) ((lambda (g$745$19918) (list g$745$19918)) (g$745$14340 g$745$19902)))) (quote #f))) (g$745$14344 g$745$19896)))) (quote #f))) ((lambda (g$745$19920) (list g$745$19920)) (g$745$14340 g$745$19896)))) (quote #f))) (g$745$14344 g$745$19890)))) (quote #f))) ((lambda (g$745$19922) (if (g$745$14346 g$745$19922) (if (g$745$14354 g$745$19922 (g$745$14775 (quote mutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19890)))) (quote #f))) (g$745$14340 g$745$19882)))) (quote #f))) g$745$19806))) g$745$19802))) ((lambda (g$745$19924) (if (equal? (g$745$14366 g$745$19924) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$19802))) g$745$19800)))) (g$745$19798 g$745$19793)))) (quote #f)))) (set! g$745$19520 (lambda (g$745$19620 g$745$19621 g$745$19622) ((lambda (g$745$19624) (begin (set! g$745$19624 (lambda (g$745$19788) (g$745$15002 g$745$19622 (string->symbol (string-append (symbol->string (g$745$15004 g$745$19620)) (quote "-") (symbol->string (g$745$15004 g$745$19788))))))) (map (lambda (g$745$19626) ((lambda (g$745$19628) ((lambda (g$745$19630) (if (if g$745$19630 (begin (quote #f) (apply (lambda (g$745$19750 g$745$19751 g$745$19752) (g$745$14346 g$745$19751)) g$745$19630)) (quote #f)) (apply (lambda (g$745$19744 g$745$19745 g$745$19746) g$745$19745) g$745$19630) ((lambda (g$745$19632) ((lambda (g$745$19634) (if (if g$745$19634 (begin (quote #f) (apply (lambda (g$745$19713 g$745$19714) (g$745$14346 g$745$19714)) g$745$19634)) (quote #f)) (apply (lambda (g$745$19709 g$745$19710) g$745$19710) g$745$19634) ((lambda (g$745$19636) ((lambda (g$745$19638) (if (if g$745$19638 (begin (quote #f) (apply (lambda (g$745$19688) (g$745$14346 g$745$19688)) g$745$19638)) (quote #f)) (apply (lambda (g$745$19686) (g$745$19624 g$745$19686)) g$745$19638) ((lambda (g$745$19640) ((lambda (g$745$19642) (if (if g$745$19642 (begin (quote #f) (apply (lambda (g$745$19666) (g$745$14346 g$745$19666)) g$745$19642)) (quote #f)) (apply (lambda (g$745$19664) (g$745$19624 g$745$19664)) g$745$19642) ((lambda (g$745$19644) ((lambda (g$745$19646) (if (if g$745$19646 (begin (quote #f) (apply (lambda (g$745$19660) (g$745$14346 g$745$19660)) g$745$19646)) (quote #f)) (apply (lambda (g$745$19658) (g$745$19624 g$745$19658)) g$745$19646) ((lambda (g$745$19648) ((lambda (g$745$19650) (if (if g$745$19650 (begin (quote #f) (apply (lambda (g$745$19654) (quote #t)) g$745$19650)) (quote #f)) (apply (lambda (g$745$19652) (error (quote expander) (quote "invalid field spec") (g$745$14364 g$745$19626 (quote ())))) g$745$19650) (error (quote expander) (quote #3#) (g$745$14364 g$745$19648 (quote ()))))) ((lambda (g$745$19656) (list g$745$19656)) g$745$19648))) g$745$19644))) ((lambda (g$745$19662) (list g$745$19662)) g$745$19644))) g$745$19640))) ((lambda (g$745$19668) (if (g$745$14332 g$745$19668) (begin (quote #f) ((lambda (g$745$19670) (if g$745$19670 (begin (quote #f) ((lambda (g$745$19672) (if g$745$19672 (begin (quote #f) (append g$745$19670 g$745$19672)) (quote #f))) ((lambda (g$745$19674) (if (g$745$14332 g$745$19674) (begin (quote #f) ((lambda (g$745$19676) (if g$745$19676 (begin (quote #f) ((lambda (g$745$19678) (if g$745$19678 (begin (quote #f) (append g$745$19676 g$745$19678)) (quote #f))) ((lambda (g$745$19680) (if (equal? (g$745$14366 g$745$19680) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19674)))) (quote #f))) ((lambda (g$745$19682) (list g$745$19682)) (g$745$14340 g$745$19674)))) (quote #f))) (g$745$14344 g$745$19668)))) (quote #f))) ((lambda (g$745$19684) (if (g$745$14346 g$745$19684) (if (g$745$14354 g$745$19684 (g$745$14775 (quote immutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19668)))) (quote #f))) g$745$19640))) g$745$19636))) ((lambda (g$745$19690) (if (g$745$14332 g$745$19690) (begin (quote #f) ((lambda (g$745$19692) (if g$745$19692 (begin (quote #f) ((lambda (g$745$19694) (if g$745$19694 (begin (quote #f) (append g$745$19692 g$745$19694)) (quote #f))) ((lambda (g$745$19696) (if (g$745$14332 g$745$19696) (begin (quote #f) ((lambda (g$745$19698) (if g$745$19698 (begin (quote #f) ((lambda (g$745$19700) (if g$745$19700 (begin (quote #f) (append g$745$19698 g$745$19700)) (quote #f))) ((lambda (g$745$19702) (if (equal? (g$745$14366 g$745$19702) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19696)))) (quote #f))) ((lambda (g$745$19704) (list g$745$19704)) (g$745$14340 g$745$19696)))) (quote #f))) (g$745$14344 g$745$19690)))) (quote #f))) ((lambda (g$745$19706) (if (g$745$14346 g$745$19706) (if (g$745$14354 g$745$19706 (g$745$14775 (quote mutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19690)))) (quote #f))) g$745$19636))) g$745$19632))) ((lambda (g$745$19716) (if (g$745$14332 g$745$19716) (begin (quote #f) ((lambda (g$745$19718) (if g$745$19718 (begin (quote #f) ((lambda (g$745$19720) (if g$745$19720 (begin (quote #f) (append g$745$19718 g$745$19720)) (quote #f))) ((lambda (g$745$19722) (if (g$745$14332 g$745$19722) (begin (quote #f) ((lambda (g$745$19724) (if g$745$19724 (begin (quote #f) ((lambda (g$745$19726) (if g$745$19726 (begin (quote #f) (append g$745$19724 g$745$19726)) (quote #f))) ((lambda (g$745$19728) (if (g$745$14332 g$745$19728) (begin (quote #f) ((lambda (g$745$19730) (if g$745$19730 (begin (quote #f) ((lambda (g$745$19732) (if g$745$19732 (begin (quote #f) (append g$745$19730 g$745$19732)) (quote #f))) ((lambda (g$745$19734) (if (equal? (g$745$14366 g$745$19734) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19728)))) (quote #f))) ((lambda (g$745$19736) (list g$745$19736)) (g$745$14340 g$745$19728)))) (quote #f))) (g$745$14344 g$745$19722)))) (quote #f))) ((lambda (g$745$19738) (list g$745$19738)) (g$745$14340 g$745$19722)))) (quote #f))) (g$745$14344 g$745$19716)))) (quote #f))) ((lambda (g$745$19740) (if (g$745$14346 g$745$19740) (if (g$745$14354 g$745$19740 (g$745$14775 (quote immutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19716)))) (quote #f))) g$745$19632))) g$745$19628))) ((lambda (g$745$19754) (if (g$745$14332 g$745$19754) (begin (quote #f) ((lambda (g$745$19756) (if g$745$19756 (begin (quote #f) ((lambda (g$745$19758) (if g$745$19758 (begin (quote #f) (append g$745$19756 g$745$19758)) (quote #f))) ((lambda (g$745$19760) (if (g$745$14332 g$745$19760) (begin (quote #f) ((lambda (g$745$19762) (if g$745$19762 (begin (quote #f) ((lambda (g$745$19764) (if g$745$19764 (begin (quote #f) (append g$745$19762 g$745$19764)) (quote #f))) ((lambda (g$745$19766) (if (g$745$14332 g$745$19766) (begin (quote #f) ((lambda (g$745$19768) (if g$745$19768 (begin (quote #f) ((lambda (g$745$19770) (if g$745$19770 (begin (quote #f) (append g$745$19768 g$745$19770)) (quote #f))) ((lambda (g$745$19772) (if (g$745$14332 g$745$19772) (begin (quote #f) ((lambda (g$745$19774) (if g$745$19774 (begin (quote #f) ((lambda (g$745$19776) (if g$745$19776 (begin (quote #f) (append g$745$19774 g$745$19776)) (quote #f))) ((lambda (g$745$19778) (if (equal? (g$745$14366 g$745$19778) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$19772)))) (quote #f))) ((lambda (g$745$19780) (list g$745$19780)) (g$745$14340 g$745$19772)))) (quote #f))) (g$745$14344 g$745$19766)))) (quote #f))) ((lambda (g$745$19782) (list g$745$19782)) (g$745$14340 g$745$19766)))) (quote #f))) (g$745$14344 g$745$19760)))) (quote #f))) ((lambda (g$745$19784) (list g$745$19784)) (g$745$14340 g$745$19760)))) (quote #f))) (g$745$14344 g$745$19754)))) (quote #f))) ((lambda (g$745$19786) (if (g$745$14346 g$745$19786) (if (g$745$14354 g$745$19786 (g$745$14775 (quote mutable))) (begin (quote #f) (quote ())) (quote #f)) (quote #f))) (g$745$14340 g$745$19754)))) (quote #f))) g$745$19628))) g$745$19626)) g$745$19621))) (quote #f)))) (set! g$745$19522 (lambda (g$745$19610) (letrec ((g$745$19612 (lambda (g$745$19615 g$745$19616) (if (null? g$745$19615) (quote ()) (cons g$745$19616 (g$745$19612 (cdr g$745$19615) (+ g$745$19616 (quote 1)))))))) (g$745$19612 g$745$19610 (quote 0))))) (set! g$745$19524 (lambda (g$745$19570 g$745$19571 g$745$19572) ((lambda (g$745$19574) ((lambda (g$745$19576) ((lambda (g$745$19578) ((lambda (g$745$19580) ((lambda (g$745$19582) ((lambda (g$745$19584) ((lambda (g$745$19586) ((lambda (g$745$19588) ((lambda (g$745$19590) ((lambda (g$745$19592) ((lambda (g$745$19594) ((lambda (g$745$19596) ((lambda (g$745$19598) ((lambda (g$745$19600) ((lambda () (g$745$14809 (cons (quote begin) (cons (list (quote define) g$745$19576 g$745$19596) (cons (list (quote define) g$745$19580 g$745$19600) (cons (list (quote define) g$745$19578 g$745$19598) (cons (list (quote define-syntax) g$745$19574 (list (quote list) (quote (quote $rtd)) (list (quote syntax) g$745$19576) (list (quote syntax) g$745$19578))) (cons (list (quote define) g$745$19594 (list (quote record-predicate) g$745$19576)) (cons (list (quote define) g$745$19582 (list (quote record-constructor) g$745$19578)) (append (map (lambda (g$745$19603 g$745$19604) (list (quote define) g$745$19603 (list (quote record-accessor) g$745$19576 g$745$19604))) g$745$19588 g$745$19586) (map (lambda (g$745$19607 g$745$19608) (list (quote define) g$745$19607 (list (quote record-mutator) g$745$19576 g$745$19608))) g$745$19590 g$745$19592))))))))))))) (g$745$19512 g$745$19572))) (g$745$19510 g$745$19572 g$745$19576 g$745$19580))) (g$745$19508 g$745$19570 g$745$19574 g$745$19572))) (g$745$19504 g$745$19571 g$745$19570))) (g$745$19516 g$745$19584))) (g$745$19518 g$745$19574 g$745$19584 g$745$19570))) (g$745$19520 g$745$19574 g$745$19584 g$745$19570))) (g$745$19522 g$745$19584))) (g$745$19514 g$745$19572))) (g$745$19502 g$745$19571 g$745$19570))) (gensym))) (gensym))) (gensym))) (g$745$19500 g$745$19571)))) ((lambda (g$745$19526) ((lambda (g$745$19528) (if (if g$745$19528 (begin (quote #f) (apply (lambda (g$745$19538 g$745$19539 g$745$19540) (quote #t)) g$745$19528)) (quote #f)) (apply (lambda (g$745$19532 g$745$19533 g$745$19534) (g$745$19524 g$745$19532 g$745$19533 g$745$19534)) g$745$19528) (error (quote expander) (quote #3#) (g$745$14364 g$745$19526 (quote ()))))) ((lambda (g$745$19542) (if (g$745$14332 g$745$19542) (begin (quote #f) ((lambda (g$745$19544) (if g$745$19544 (begin (quote #f) ((lambda (g$745$19546) (if g$745$19546 (begin (quote #f) (append g$745$19544 g$745$19546)) (quote #f))) ((lambda (g$745$19548) (if (g$745$14332 g$745$19548) (begin (quote #f) ((lambda (g$745$19550) (if g$745$19550 (begin (quote #f) ((lambda (g$745$19552) (if g$745$19552 (begin (quote #f) (append g$745$19550 g$745$19552)) (quote #f))) ((letrec ((g$745$19554 (lambda (g$745$19556) (if (g$745$14332 g$745$19556) ((lambda (g$745$19558) (if g$745$19558 (begin (quote #f) ((lambda (g$745$19560) (if g$745$19560 (begin (quote #f) (map cons g$745$19558 g$745$19560)) (quote #f))) (g$745$19554 (g$745$14344 g$745$19556)))) (quote #f))) ((lambda (g$745$19562) (list g$745$19562)) (g$745$14340 g$745$19556))) (if (g$745$14336 g$745$19556) (list (begin (quote clause*) (quote ()))) (quote #f)))))) g$745$19554) (g$745$14344 g$745$19548)))) (quote #f))) ((lambda (g$745$19564) (list g$745$19564)) (g$745$14340 g$745$19548)))) (quote #f))) (g$745$14344 g$745$19542)))) (quote #f))) ((lambda (g$745$19566) (list g$745$19566)) (g$745$14340 g$745$19542)))) (quote #f))) g$745$19526))) g$745$19496))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f)))) (set! g$745$14855 (lambda (g$745$20594) ((lambda (g$745$20596) (begin (set! g$745$20596 (lambda (g$745$20709 g$745$20710) (g$745$15002 g$745$20709 (string->symbol (string-append (symbol->string (g$745$15004 g$745$20709)) g$745$20710))))) ((lambda (g$745$20598) ((lambda (g$745$20600) (if (if g$745$20600 (begin (quote #f) (apply (lambda (g$745$20634 g$745$20635 g$745$20636 g$745$20637 g$745$20638 g$745$20639 g$745$20640) (if (g$745$14346 g$745$20635) (if (g$745$14346 g$745$20636) (if (g$745$14346 g$745$20637) (if (g$745$14346 g$745$20638) (if (for-all g$745$14346 g$745$20639) (begin (quote #f) (for-all g$745$14346 g$745$20640)) (quote #f)) (quote #f)) (quote #f)) (quote #f)) (quote #f))) g$745$20600)) (quote #f)) (apply (lambda (g$745$20608 g$745$20609 g$745$20610 g$745$20611 g$745$20612 g$745$20613 g$745$20614) ((lambda (g$745$20616) (g$745$14809 (cons (quote begin) (cons (cons (quote define-record-type) (cons (list g$745$20609 g$745$20611 (gensym)) (cons (list (quote parent) g$745$20610) (cons (cons (quote fields) (map (lambda (g$745$20619 g$745$20620) (list (quote immutable) g$745$20619 g$745$20620)) g$745$20613 g$745$20616)) (quote ((nongenerative) (sealed #f) (opaque #f))))))) (cons (list (quote define) g$745$20612 (list (quote condition-predicate) (list (quote record-type-descriptor) g$745$20609))) (map (lambda (g$745$20623 g$745$20624) (list (quote define) g$745$20623 (list (quote condition-accessor) (list (quote record-type-descriptor) g$745$20609) g$745$20624))) g$745$20614 g$745$20616)))))) (map (lambda (g$745$20626) (gensym)) g$745$20614))) g$745$20600) (error (quote expander) (quote #3#) (g$745$14364 g$745$20598 (quote ()))))) ((lambda (g$745$20642) (if (g$745$14332 g$745$20642) (begin (quote #f) ((lambda (g$745$20644) (if g$745$20644 (begin (quote #f) ((lambda (g$745$20646) (if g$745$20646 (begin (quote #f) (append g$745$20644 g$745$20646)) (quote #f))) ((lambda (g$745$20648) (if (g$745$14332 g$745$20648) (begin (quote #f) ((lambda (g$745$20650) (if g$745$20650 (begin (quote #f) ((lambda (g$745$20652) (if g$745$20652 (begin (quote #f) (append g$745$20650 g$745$20652)) (quote #f))) ((lambda (g$745$20654) (if (g$745$14332 g$745$20654) (begin (quote #f) ((lambda (g$745$20656) (if g$745$20656 (begin (quote #f) ((lambda (g$745$20658) (if g$745$20658 (begin (quote #f) (append g$745$20656 g$745$20658)) (quote #f))) ((lambda (g$745$20660) (if (g$745$14332 g$745$20660) (begin (quote #f) ((lambda (g$745$20662) (if g$745$20662 (begin (quote #f) ((lambda (g$745$20664) (if g$745$20664 (begin (quote #f) (append g$745$20662 g$745$20664)) (quote #f))) ((lambda (g$745$20666) (if (g$745$14332 g$745$20666) (begin (quote #f) ((lambda (g$745$20668) (if g$745$20668 (begin (quote #f) ((lambda (g$745$20670) (if g$745$20670 (begin (quote #f) (append g$745$20668 g$745$20670)) (quote #f))) ((letrec ((g$745$20672 (lambda (g$745$20674) (if (g$745$14332 g$745$20674) ((lambda (g$745$20676) (if g$745$20676 (begin (quote #f) ((lambda (g$745$20678) (if g$745$20678 (begin (quote #f) (map cons g$745$20676 g$745$20678)) (quote #f))) (g$745$20672 (g$745$14344 g$745$20674)))) (quote #f))) ((lambda (g$745$20680) (if (g$745$14332 g$745$20680) (begin (quote #f) ((lambda (g$745$20682) (if g$745$20682 (begin (quote #f) ((lambda (g$745$20684) (if g$745$20684 (begin (quote #f) (append g$745$20682 g$745$20684)) (quote #f))) ((lambda (g$745$20686) (if (g$745$14332 g$745$20686) (begin (quote #f) ((lambda (g$745$20688) (if g$745$20688 (begin (quote #f) ((lambda (g$745$20690) (if g$745$20690 (begin (quote #f) (append g$745$20688 g$745$20690)) (quote #f))) ((lambda (g$745$20692) (if (equal? (g$745$14366 g$745$20692) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20686)))) (quote #f))) ((lambda (g$745$20694) (list g$745$20694)) (g$745$14340 g$745$20686)))) (quote #f))) (g$745$14344 g$745$20680)))) (quote #f))) ((lambda (g$745$20696) (list g$745$20696)) (g$745$14340 g$745$20680)))) (quote #f))) (g$745$14340 g$745$20674))) (if (g$745$14336 g$745$20674) (list (begin (quote field*) (quote ())) (begin (quote accessor*) (quote ()))) (quote #f)))))) g$745$20672) (g$745$14344 g$745$20666)))) (quote #f))) ((lambda (g$745$20698) (list g$745$20698)) (g$745$14340 g$745$20666)))) (quote #f))) (g$745$14344 g$745$20660)))) (quote #f))) ((lambda (g$745$20700) (list g$745$20700)) (g$745$14340 g$745$20660)))) (quote #f))) (g$745$14344 g$745$20654)))) (quote #f))) ((lambda (g$745$20702) (list g$745$20702)) (g$745$14340 g$745$20654)))) (quote #f))) (g$745$14344 g$745$20648)))) (quote #f))) ((lambda (g$745$20704) (list g$745$20704)) (g$745$14340 g$745$20648)))) (quote #f))) (g$745$14344 g$745$20642)))) (quote #f))) ((lambda (g$745$20706) (list g$745$20706)) (g$745$14340 g$745$20642)))) (quote #f))) g$745$20598))) g$745$20594))) (quote #f)))) (set! g$745$14857 (lambda (g$745$20712) (error (quote expander) (quote "incorrect usage of auxilary keyword") (g$745$14364 g$745$20712 (quote ()))))) (set! g$745$14859 (lambda (g$745$20716 g$745$20717 g$745$20718) ((lambda (g$745$20720) ((lambda (g$745$20722) (if (if g$745$20722 (begin (quote #f) (apply (lambda (g$745$20827 g$745$20828) (quote #t)) g$745$20722)) (quote #f)) (apply (lambda (g$745$20823 g$745$20824) (g$745$14909 (cons g$745$20823 g$745$20824) g$745$20717 g$745$20718)) g$745$20722) ((lambda (g$745$20724) ((lambda (g$745$20726) (if (if g$745$20726 (begin (quote #f) (apply (lambda (g$745$20759 g$745$20760 g$745$20761 g$745$20762) (quote #t)) g$745$20726)) (quote #f)) (apply (lambda (g$745$20731 g$745$20732 g$745$20733 g$745$20734) ((lambda (g$745$20739 g$745$20740 g$745$20741 g$745$20742) (g$745$14232 (quote #f) (append g$745$20739 g$745$20740) (append (g$745$14889 g$745$20731 g$745$20717 g$745$20718) (g$745$14889 g$745$20732 g$745$20717 g$745$20718)) (g$745$14232 (quote #f) (list g$745$20742) (list (g$745$14234 (quote #f) (quote ()) (g$745$14228 (quote #f) (map (lambda (g$745$20746 g$745$20747 g$745$20748) (g$745$14232 (quote #f) (list g$745$20746) (list (list g$745$20747)) (g$745$14228 (quote #f) (list (list g$745$20747 g$745$20748) (list (quote set!) g$745$20748 g$745$20746))))) g$745$20741 g$745$20739 g$745$20740)))) (list (quote (primitive dynamic-wind)) g$745$20742 (g$745$14234 (quote #f) (quote ()) (g$745$14909 (cons g$745$20733 g$745$20734) g$745$20717 g$745$20718)) g$745$20742)))) (map (lambda (g$745$20750) (g$745$14256 (quote lhs))) g$745$20731) (map (lambda (g$745$20752) (g$745$14256 (quote rhs))) g$745$20731) (map (lambda (g$745$20754) (g$745$14256 (quote t))) g$745$20731) (g$745$14256 (quote swap)))) g$745$20726) (error (quote expander) (quote #3#) (g$745$14364 g$745$20724 (quote ()))))) ((lambda (g$745$20764) (if (g$745$14332 g$745$20764) (begin (quote #f) ((lambda (g$745$20766) (if g$745$20766 (begin (quote #f) ((lambda (g$745$20768) (if g$745$20768 (begin (quote #f) (append g$745$20766 g$745$20768)) (quote #f))) ((lambda (g$745$20770) (if (g$745$14332 g$745$20770) (begin (quote #f) ((lambda (g$745$20772) (if g$745$20772 (begin (quote #f) ((lambda (g$745$20774) (if g$745$20774 (begin (quote #f) (append g$745$20772 g$745$20774)) (quote #f))) ((lambda (g$745$20776) (if (g$745$14332 g$745$20776) (begin (quote #f) ((lambda (g$745$20778) (if g$745$20778 (begin (quote #f) ((lambda (g$745$20780) (if g$745$20780 (begin (quote #f) (append g$745$20778 g$745$20780)) (quote #f))) ((letrec ((g$745$20782 (lambda (g$745$20784) (if (g$745$14332 g$745$20784) ((lambda (g$745$20786) (if g$745$20786 (begin (quote #f) ((lambda (g$745$20788) (if g$745$20788 (begin (quote #f) (map cons g$745$20786 g$745$20788)) (quote #f))) (g$745$20782 (g$745$14344 g$745$20784)))) (quote #f))) ((lambda (g$745$20790) (list g$745$20790)) (g$745$14340 g$745$20784))) (if (g$745$14336 g$745$20784) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$20782) (g$745$14344 g$745$20776)))) (quote #f))) ((lambda (g$745$20792) (list g$745$20792)) (g$745$14340 g$745$20776)))) (quote #f))) (g$745$14344 g$745$20770)))) (quote #f))) ((letrec ((g$745$20794 (lambda (g$745$20796) (if (g$745$14332 g$745$20796) ((lambda (g$745$20798) (if g$745$20798 (begin (quote #f) ((lambda (g$745$20800) (if g$745$20800 (begin (quote #f) (map cons g$745$20798 g$745$20800)) (quote #f))) (g$745$20794 (g$745$14344 g$745$20796)))) (quote #f))) ((lambda (g$745$20802) (if (g$745$14332 g$745$20802) (begin (quote #f) ((lambda (g$745$20804) (if g$745$20804 (begin (quote #f) ((lambda (g$745$20806) (if g$745$20806 (begin (quote #f) (append g$745$20804 g$745$20806)) (quote #f))) ((lambda (g$745$20808) (if (g$745$14332 g$745$20808) (begin (quote #f) ((lambda (g$745$20810) (if g$745$20810 (begin (quote #f) ((lambda (g$745$20812) (if g$745$20812 (begin (quote #f) (append g$745$20810 g$745$20812)) (quote #f))) ((lambda (g$745$20814) (if (equal? (g$745$14366 g$745$20814) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$20808)))) (quote #f))) ((lambda (g$745$20816) (list g$745$20816)) (g$745$14340 g$745$20808)))) (quote #f))) (g$745$14344 g$745$20802)))) (quote #f))) ((lambda (g$745$20818) (list g$745$20818)) (g$745$14340 g$745$20802)))) (quote #f))) (g$745$14340 g$745$20796))) (if (g$745$14336 g$745$20796) (list (begin (quote olhs*) (quote ())) (begin (quote orhs*) (quote ()))) (quote #f)))))) g$745$20794) (g$745$14340 g$745$20770)))) (quote #f))) (g$745$14344 g$745$20764)))) (quote #f))) ((lambda (g$745$20820) (quote ())) (g$745$14340 g$745$20764)))) (quote #f))) g$745$20724))) g$745$20720))) ((lambda (g$745$20830) (if (g$745$14332 g$745$20830) (begin (quote #f) ((lambda (g$745$20832) (if g$745$20832 (begin (quote #f) ((lambda (g$745$20834) (if g$745$20834 (begin (quote #f) (append g$745$20832 g$745$20834)) (quote #f))) ((lambda (g$745$20836) (if (g$745$14332 g$745$20836) (begin (quote #f) ((lambda (g$745$20838) (if g$745$20838 (begin (quote #f) ((lambda (g$745$20840) (if g$745$20840 (begin (quote #f) (append g$745$20838 g$745$20840)) (quote #f))) ((lambda (g$745$20842) (if (g$745$14332 g$745$20842) (begin (quote #f) ((lambda (g$745$20844) (if g$745$20844 (begin (quote #f) ((lambda (g$745$20846) (if g$745$20846 (begin (quote #f) (append g$745$20844 g$745$20846)) (quote #f))) ((letrec ((g$745$20848 (lambda (g$745$20850) (if (g$745$14332 g$745$20850) ((lambda (g$745$20852) (if g$745$20852 (begin (quote #f) ((lambda (g$745$20854) (if g$745$20854 (begin (quote #f) (map cons g$745$20852 g$745$20854)) (quote #f))) (g$745$20848 (g$745$14344 g$745$20850)))) (quote #f))) ((lambda (g$745$20856) (list g$745$20856)) (g$745$14340 g$745$20850))) (if (g$745$14336 g$745$20850) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$20848) (g$745$14344 g$745$20842)))) (quote #f))) ((lambda (g$745$20858) (list g$745$20858)) (g$745$14340 g$745$20842)))) (quote #f))) (g$745$14344 g$745$20836)))) (quote #f))) ((lambda (g$745$20860) (if (equal? (g$745$14366 g$745$20860) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14340 g$745$20836)))) (quote #f))) (g$745$14344 g$745$20830)))) (quote #f))) ((lambda (g$745$20862) (quote ())) (g$745$14340 g$745$20830)))) (quote #f))) g$745$20720))) g$745$20716))) (set! g$745$14861 (lambda (g$745$20866 g$745$20867 g$745$20868) ((lambda (g$745$20870) ((lambda (g$745$20872) (if (if g$745$20872 (begin (quote #f) (apply (lambda (g$745$20879 g$745$20880) (quote #t)) g$745$20872)) (quote #f)) (apply (lambda (g$745$20875 g$745$20876) (cons (quote foreign-call) (cons (g$745$14893 g$745$20875 g$745$20867 g$745$20868) (g$745$14889 g$745$20876 g$745$20867 g$745$20868)))) g$745$20872) (error (quote expander) (quote #3#) (g$745$14364 g$745$20870 (quote ()))))) ((lambda (g$745$20882) (if (g$745$14332 g$745$20882) (begin (quote #f) ((lambda (g$745$20884) (if g$745$20884 (begin (quote #f) ((lambda (g$745$20886) (if g$745$20886 (begin (quote #f) (append g$745$20884 g$745$20886)) (quote #f))) ((lambda (g$745$20888) (if (g$745$14332 g$745$20888) (begin (quote #f) ((lambda (g$745$20890) (if g$745$20890 (begin (quote #f) ((lambda (g$745$20892) (if g$745$20892 (begin (quote #f) (append g$745$20890 g$745$20892)) (quote #f))) ((letrec ((g$745$20894 (lambda (g$745$20896) (if (g$745$14332 g$745$20896) ((lambda (g$745$20898) (if g$745$20898 (begin (quote #f) ((lambda (g$745$20900) (if g$745$20900 (begin (quote #f) (map cons g$745$20898 g$745$20900)) (quote #f))) (g$745$20894 (g$745$14344 g$745$20896)))) (quote #f))) ((lambda (g$745$20902) (list g$745$20902)) (g$745$14340 g$745$20896))) (if (g$745$14336 g$745$20896) (list (begin (quote arg*) (quote ()))) (quote #f)))))) g$745$20894) (g$745$14344 g$745$20888)))) (quote #f))) ((lambda (g$745$20904) (list g$745$20904)) (g$745$14340 g$745$20888)))) (quote #f))) (g$745$14344 g$745$20882)))) (quote #f))) ((lambda (g$745$20906) (quote ())) (g$745$14340 g$745$20882)))) (quote #f))) g$745$20870))) g$745$20866))) (set! g$745$14863 (lambda (g$745$20909 g$745$20910) ((lambda (g$745$20912 g$745$20914) (begin (set! g$745$20912 (lambda (g$745$21104 g$745$21105 g$745$21106) (if (null? g$745$21104) (values (quote ()) g$745$21106) (call-with-values (lambda () (g$745$20912 (cdr g$745$21104) g$745$21105 g$745$21106)) (lambda (g$745$21109 g$745$21110) (call-with-values (lambda () (g$745$20914 (car g$745$21104) g$745$21105 g$745$21110)) (lambda (g$745$21113 g$745$21114) (values (cons g$745$21113 g$745$21109) g$745$21114)))))))) (set! g$745$20914 (lambda (g$745$20918 g$745$20919 g$745$20920) ((lambda (g$745$20922) ((lambda (g$745$20924) (if (if g$745$20924 (begin (quote #f) (apply (lambda (g$745$21098) (g$745$14346 g$745$21098)) g$745$20924)) (quote #f)) (apply (lambda (g$745$21096) (if (g$745$14360 g$745$20918 g$745$20910) (values (vector (quote free-id) g$745$20918) g$745$20920) (if (g$745$14354 g$745$20918 (g$745$14775 (quote _))) (values (quote _) g$745$20920) (values (quote any) (cons (cons g$745$20918 g$745$20919) g$745$20920))))) g$745$20924) ((lambda (g$745$20926) ((lambda (g$745$20928) (if (if g$745$20928 (begin (quote #f) (apply (lambda (g$745$21075 g$745$21076) (g$745$14867 g$745$21076)) g$745$20928)) (quote #f)) (apply (lambda (g$745$21067 g$745$21068) (call-with-values (lambda () (g$745$20914 g$745$21067 (+ g$745$20919 (quote 1)) g$745$20920)) (lambda (g$745$21071 g$745$21072) (values (if (eq? g$745$21071 (quote any)) (quote each-any) (vector (quote each) g$745$21071)) g$745$21072)))) g$745$20928) ((lambda (g$745$20930) ((lambda (g$745$20932) (if (if g$745$20932 (begin (quote #f) (apply (lambda (g$745$21027 g$745$21028 g$745$21029 g$745$21030) (g$745$14867 g$745$21028)) g$745$20932)) (quote #f)) (apply (lambda (g$745$21007 g$745$21008 g$745$21009 g$745$21010) (call-with-values (lambda () (g$745$20914 g$745$21010 g$745$20919 g$745$20920)) (lambda (g$745$21013 g$745$21014) (call-with-values (lambda () (g$745$20912 g$745$21009 g$745$20919 g$745$21014)) (lambda (g$745$21017 g$745$21018) (call-with-values (lambda () (g$745$20914 g$745$21007 (+ g$745$20919 (quote 1)) g$745$21018)) (lambda (g$745$21021 g$745$21022) (values (vector (quote each+) g$745$21021 (reverse g$745$21017) g$745$21013) g$745$21022)))))))) g$745$20932) ((lambda (g$745$20934) ((lambda (g$745$20936) (if (if g$745$20936 (begin (quote #f) (apply (lambda (g$745$20991 g$745$20992) (quote #t)) g$745$20936)) (quote #f)) (apply (lambda (g$745$20979 g$745$20980) (call-with-values (lambda () (g$745$20914 g$745$20980 g$745$20919 g$745$20920)) (lambda (g$745$20983 g$745$20984) (call-with-values (lambda () (g$745$20914 g$745$20979 g$745$20919 g$745$20984)) (lambda (g$745$20987 g$745$20988) (values (cons g$745$20987 g$745$20983) g$745$20988)))))) g$745$20936) ((lambda (g$745$20938) ((lambda (g$745$20940) (if (if g$745$20940 (begin (quote #f) (apply (lambda () (quote #t)) g$745$20940)) (quote #f)) (apply (lambda () (values (quote ()) g$745$20920)) g$745$20940) ((lambda (g$745$20942) ((lambda (g$745$20944) (if (if g$745$20944 (begin (quote #f) (apply (lambda (g$745$20962) (not (g$745$14298 g$745$20962))) g$745$20944)) (quote #f)) (apply (lambda (g$745$20956) (call-with-values (lambda () (g$745$20914 g$745$20956 g$745$20919 g$745$20920)) (lambda (g$745$20959 g$745$20960) (values (vector (quote vector) g$745$20959) g$745$20960)))) g$745$20944) ((lambda (g$745$20946) ((lambda (g$745$20948) (if (if g$745$20948 (begin (quote #f) (apply (lambda (g$745$20952) (quote #t)) g$745$20948)) (quote #f)) (apply (lambda (g$745$20950) (values (vector (quote atom) (g$745$14366 g$745$20950)) g$745$20920)) g$745$20948) (error (quote expander) (quote #3#) (g$745$14364 g$745$20946 (quote ()))))) ((lambda (g$745$20954) (list g$745$20954)) g$745$20946))) g$745$20942))) ((lambda (g$745$20964) (if (g$745$14334 g$745$20964) (begin (quote #f) ((letrec ((g$745$20966 (lambda (g$745$20968) (if (g$745$14332 g$745$20968) ((lambda (g$745$20970) (if g$745$20970 (begin (quote #f) ((lambda (g$745$20972) (if g$745$20972 (begin (quote #f) (map cons g$745$20970 g$745$20972)) (quote #f))) (g$745$20966 (g$745$14344 g$745$20968)))) (quote #f))) ((lambda (g$745$20974) (list g$745$20974)) (g$745$14340 g$745$20968))) (if (g$745$14336 g$745$20968) (list (begin (quote p) (quote ()))) (quote #f)))))) g$745$20966) (g$745$14330 g$745$20964))) (quote #f))) g$745$20942))) g$745$20938))) ((lambda (g$745$20976) (if (equal? (g$745$14366 g$745$20976) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$20938))) g$745$20934))) ((lambda (g$745$20994) (if (g$745$14332 g$745$20994) (begin (quote #f) ((lambda (g$745$20996) (if g$745$20996 (begin (quote #f) ((lambda (g$745$20998) (if g$745$20998 (begin (quote #f) (append g$745$20996 g$745$20998)) (quote #f))) ((lambda (g$745$21000) (list g$745$21000)) (g$745$14344 g$745$20994)))) (quote #f))) ((lambda (g$745$21002) (list g$745$21002)) (g$745$14340 g$745$20994)))) (quote #f))) g$745$20934))) g$745$20930))) ((lambda (g$745$21032) (if (g$745$14332 g$745$21032) (begin (quote #f) ((lambda (g$745$21034) (if g$745$21034 (begin (quote #f) ((lambda (g$745$21036) (if g$745$21036 (begin (quote #f) (append g$745$21034 g$745$21036)) (quote #f))) ((lambda (g$745$21038) (if (g$745$14332 g$745$21038) (begin (quote #f) ((lambda (g$745$21040) (if g$745$21040 (begin (quote #f) ((lambda (g$745$21042) (if g$745$21042 (begin (quote #f) (append g$745$21040 g$745$21042)) (quote #f))) ((letrec ((g$745$21044 (lambda (g$745$21046) (if (g$745$14332 g$745$21046) ((lambda (g$745$21052) (if g$745$21052 (begin (quote #f) ((lambda (g$745$21054) (if g$745$21054 (begin (quote #f) (cons (map cons g$745$21052 (car g$745$21054)) (cdr g$745$21054))) (quote #f))) (g$745$21044 (g$745$14344 g$745$21046)))) (quote #f))) ((lambda (g$745$21056) (list g$745$21056)) (g$745$14340 g$745$21046))) ((lambda (g$745$21048) (if g$745$21048 (begin (quote #f) (cons (list (begin (quote ys) (quote ()))) g$745$21048)) (quote #f))) ((lambda (g$745$21050) (list g$745$21050)) g$745$21046)))))) (lambda (g$745$21058) ((lambda (g$745$21060) (if g$745$21060 (begin (quote #f) (append (car g$745$21060) (cdr g$745$21060))) (quote #f))) (g$745$21044 g$745$21058)))) (g$745$14344 g$745$21038)))) (quote #f))) ((lambda (g$745$21062) (list g$745$21062)) (g$745$14340 g$745$21038)))) (quote #f))) (g$745$14344 g$745$21032)))) (quote #f))) ((lambda (g$745$21064) (list g$745$21064)) (g$745$14340 g$745$21032)))) (quote #f))) g$745$20930))) g$745$20926))) ((lambda (g$745$21078) (if (g$745$14332 g$745$21078) (begin (quote #f) ((lambda (g$745$21080) (if g$745$21080 (begin (quote #f) ((lambda (g$745$21082) (if g$745$21082 (begin (quote #f) (append g$745$21080 g$745$21082)) (quote #f))) ((lambda (g$745$21084) (if (g$745$14332 g$745$21084) (begin (quote #f) ((lambda (g$745$21086) (if g$745$21086 (begin (quote #f) ((lambda (g$745$21088) (if g$745$21088 (begin (quote #f) (append g$745$21086 g$745$21088)) (quote #f))) ((lambda (g$745$21090) (if (equal? (g$745$14366 g$745$21090) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$21084)))) (quote #f))) ((lambda (g$745$21092) (list g$745$21092)) (g$745$14340 g$745$21084)))) (quote #f))) (g$745$14344 g$745$21078)))) (quote #f))) ((lambda (g$745$21094) (list g$745$21094)) (g$745$14340 g$745$21078)))) (quote #f))) g$745$20926))) g$745$20922))) ((lambda (g$745$21100) (list g$745$21100)) g$745$20922))) g$745$20918))) (g$745$20914 g$745$20909 (quote 0) (quote ())))) (quote #f) (quote #f)))) (set! g$745$14865 (lambda (g$745$21117 g$745$21118) ((lambda (g$745$21120 g$745$21122 g$745$21124 g$745$21126 g$745$21128 g$745$21130 g$745$21132 g$745$21134) (begin (set! g$745$21120 (lambda (g$745$21244 g$745$21245 g$745$21246) (if (if (null? g$745$21245) (begin (quote #f) (null? g$745$21246)) (quote #f)) g$745$21244 (g$745$14322 g$745$21244 g$745$21245 g$745$21246)))) (set! g$745$21122 (lambda (g$745$21229 g$745$21230 g$745$21231 g$745$21232) (if (pair? g$745$21229) ((lambda (g$745$21238) (if g$745$21238 (begin (quote #f) ((lambda (g$745$21240) (if g$745$21240 (begin (quote #f) (cons g$745$21238 g$745$21240)) (quote #f))) (g$745$21122 (cdr g$745$21229) g$745$21230 g$745$21231 g$745$21232))) (quote #f))) (g$745$21134 (car g$745$21229) g$745$21230 g$745$21231 g$745$21232 (quote ()))) (if (null? g$745$21229) (quote ()) (if (g$745$14298 g$745$21229) (call-with-values (lambda () (g$745$14320 g$745$21231 g$745$21232 g$745$21229)) (lambda (g$745$21235 g$745$21236) (g$745$21122 (g$745$14300 g$745$21229) g$745$21230 g$745$21235 g$745$21236))) (quote #f)))))) (set! g$745$21124 (lambda (g$745$21198 g$745$21199 g$745$21200 g$745$21201 g$745$21202 g$745$21203 g$745$21204) (letrec ((g$745$21206 (lambda (g$745$21210 g$745$21211 g$745$21212) (if (pair? g$745$21210) (call-with-values (lambda () (g$745$21206 (cdr g$745$21210) g$745$21211 g$745$21212)) (lambda (g$745$21220 g$745$21221 g$745$21222) (if g$745$21222 (if (null? g$745$21221) ((lambda (g$745$21224) (if g$745$21224 (values (cons g$745$21224 g$745$21220) g$745$21221 g$745$21222) (values (quote #f) (quote #f) (quote #f)))) (g$745$21134 (car g$745$21210) g$745$21199 g$745$21211 g$745$21212 (quote ()))) (values (quote ()) (cdr g$745$21221) (g$745$21134 (car g$745$21210) (car g$745$21221) g$745$21211 g$745$21212 g$745$21222))) (values (quote #f) (quote #f) (quote #f))))) (if (g$745$14298 g$745$21210) (call-with-values (lambda () (g$745$14320 g$745$21211 g$745$21212 g$745$21210)) (lambda (g$745$21215 g$745$21216) (g$745$21206 (g$745$14300 g$745$21210) g$745$21215 g$745$21216))) (values (quote ()) g$745$21200 (g$745$21134 g$745$21210 g$745$21201 g$745$21211 g$745$21212 g$745$21204))))))) (g$745$21206 g$745$21198 g$745$21202 g$745$21203)))) (set! g$745$21126 (lambda (g$745$21182 g$745$21183 g$745$21184) (if (pair? g$745$21182) ((lambda (g$745$21190) (if g$745$21190 (begin (quote #f) (cons (g$745$21120 (car g$745$21182) g$745$21183 g$745$21184) g$745$21190)) (quote #f))) (g$745$21126 (cdr g$745$21182) g$745$21183 g$745$21184)) (if (null? g$745$21182) (quote ()) (if (g$745$14298 g$745$21182) (call-with-values (lambda () (g$745$14320 g$745$21183 g$745$21184 g$745$21182)) (lambda (g$745$21187 g$745$21188) (g$745$21126 (g$745$14300 g$745$21182) g$745$21187 g$745$21188))) (quote #f)))))) (set! g$745$21128 (lambda (g$745$21176 g$745$21177) (if (null? g$745$21176) g$745$21177 (if (eq? g$745$21176 (quote _)) g$745$21177 (if (eq? g$745$21176 (quote any)) (cons (quote ()) g$745$21177) (if (pair? g$745$21176) (g$745$21128 (car g$745$21176) (g$745$21128 (cdr g$745$21176) g$745$21177)) (if (eq? g$745$21176 (quote each-any)) (cons (quote ()) g$745$21177) ((lambda (g$745$21178) (if (memv g$745$21178 (quote (each))) (g$745$21128 (vector-ref g$745$21176 (quote 1)) g$745$21177) (if (memv g$745$21178 (quote (each+))) (g$745$21128 (vector-ref g$745$21176 (quote 1)) (g$745$21128 (reverse (vector-ref g$745$21176 (quote 2))) (g$745$21128 (vector-ref g$745$21176 (quote 3)) g$745$21177))) (if (memv g$745$21178 (quote (free-id atom))) g$745$21177 (if (memv g$745$21178 (quote (vector))) (g$745$21128 (vector-ref g$745$21176 (quote 1)) g$745$21177) (error (quote syntax-dispatch) (quote "invalid pattern") g$745$21176)))))) (vector-ref g$745$21176 (quote 0)))))))))) (set! g$745$21130 (lambda (g$745$21172 g$745$21173) (if (null? (car g$745$21172)) g$745$21173 (cons (map car g$745$21172) (g$745$21130 (map cdr g$745$21172) g$745$21173))))) (set! g$745$21132 (lambda (g$745$21154 g$745$21155 g$745$21156 g$745$21157 g$745$21158) (if (null? g$745$21155) (if (null? g$745$21154) (begin (quote #f) g$745$21158) (quote #f)) (if (pair? g$745$21155) (if (pair? g$745$21154) (begin (quote #f) (g$745$21134 (car g$745$21154) (car g$745$21155) g$745$21156 g$745$21157 (g$745$21134 (cdr g$745$21154) (cdr g$745$21155) g$745$21156 g$745$21157 g$745$21158))) (quote #f)) (if (eq? g$745$21155 (quote each-any)) ((lambda (g$745$21169) (if g$745$21169 (begin (quote #f) (cons g$745$21169 g$745$21158)) (quote #f))) (g$745$21126 g$745$21154 g$745$21156 g$745$21157)) ((lambda (g$745$21159) (if (memv g$745$21159 (quote (each))) (if (null? g$745$21154) (g$745$21128 (vector-ref g$745$21155 (quote 1)) g$745$21158) ((lambda (g$745$21167) (if g$745$21167 (begin (quote #f) (g$745$21130 g$745$21167 g$745$21158)) (quote #f))) (g$745$21122 g$745$21154 (vector-ref g$745$21155 (quote 1)) g$745$21156 g$745$21157))) (if (memv g$745$21159 (quote (free-id))) (if (symbol? g$745$21154) (if (g$745$14354 (g$745$21120 g$745$21154 g$745$21156 g$745$21157) (vector-ref g$745$21155 (quote 1))) (begin (quote #f) g$745$21158) (quote #f)) (quote #f)) (if (memv g$745$21159 (quote (each+))) (call-with-values (lambda () (g$745$21124 g$745$21154 (vector-ref g$745$21155 (quote 1)) (vector-ref g$745$21155 (quote 2)) (vector-ref g$745$21155 (quote 3)) g$745$21156 g$745$21157 g$745$21158)) (lambda (g$745$21163 g$745$21164 g$745$21165) (if g$745$21165 (if (null? g$745$21164) (begin (quote #f) (if (null? g$745$21163) (g$745$21128 (vector-ref g$745$21155 (quote 1)) g$745$21165) (g$745$21130 g$745$21163 g$745$21165))) (quote #f)) (quote #f)))) (if (memv g$745$21159 (quote (atom))) (if (equal? (vector-ref g$745$21155 (quote 1)) (g$745$14364 g$745$21154 g$745$21156)) (begin (quote #f) g$745$21158) (quote #f)) (if (memv g$745$21159 (quote (vector))) (if (vector? g$745$21154) (begin (quote #f) (g$745$21134 (vector->list g$745$21154) (vector-ref g$745$21155 (quote 1)) g$745$21156 g$745$21157 g$745$21158)) (quote #f)) (error (quote syntax-dispatch) (quote "invalid pattern") g$745$21155))))))) (vector-ref g$745$21155 (quote 0)))))))) (set! g$745$21134 (lambda (g$745$21140 g$745$21141 g$745$21142 g$745$21143 g$745$21144) (if (not g$745$21144) (quote #f) (if (eq? g$745$21141 (quote _)) g$745$21144 (if (eq? g$745$21141 (quote any)) (cons (g$745$21120 g$745$21140 g$745$21142 g$745$21143) g$745$21144) (if (g$745$14298 g$745$21140) (call-with-values (lambda () (g$745$14320 g$745$21142 g$745$21143 g$745$21140)) (lambda (g$745$21147 g$745$21148) (g$745$21134 (g$745$14300 g$745$21140) g$745$21141 g$745$21147 g$745$21148 g$745$21144))) (g$745$21132 g$745$21140 g$745$21141 g$745$21142 g$745$21143 g$745$21144))))))) (g$745$21134 g$745$21117 g$745$21118 (quote ()) (quote ()) (quote ())))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f)))) (set! g$745$14867 (lambda (g$745$21248) (if (g$745$14346 g$745$21248) (begin (quote #f) (g$745$14354 g$745$21248 (g$745$14775 (quote ...)))) (quote #f)))) (set! g$745$14869 ((lambda () ((lambda (g$745$21250 g$745$21252 g$745$21254 g$745$21256) (begin (set! g$745$21250 (lambda (g$745$21464 g$745$21465 g$745$21466 g$745$21467 g$745$21468) ((lambda (g$745$21471 g$745$21472) ((lambda (g$745$21475 g$745$21476) ((lambda (g$745$21478) (list (quote (primitive apply)) (g$745$14234 (quote #f) g$745$21476 g$745$21478) g$745$21466)) (g$745$14893 (g$745$14326 (g$745$14293 g$745$21471 g$745$21475) g$745$21465) (append (map (lambda (g$745$21482 g$745$21483 g$745$21484) (cons g$745$21482 (g$745$14372 (quote syntax) (cons g$745$21483 g$745$21484)))) g$745$21475 g$745$21476 (map cdr g$745$21464)) g$745$21467) g$745$21468))) (map g$745$14260 g$745$21471) (map g$745$14256 g$745$21471))) (map car g$745$21464) (map cdr g$745$21464)))) (set! g$745$21252 (lambda (g$745$21450 g$745$21451 g$745$21452) (letrec ((g$745$21454 (lambda (g$745$21457 g$745$21458) (if (null? g$745$21457) (error (quote expander) (quote #4#) (g$745$14366 g$745$21451)) (if (g$745$14346 (car g$745$21457)) (if (g$745$14360 (car g$745$21457) g$745$21458) (g$745$14998 (car g$745$21457) (quote "duplicate ") g$745$21452) (g$745$21454 (cdr g$745$21457) (cons (car g$745$21457) g$745$21458))) (g$745$14998 (car g$745$21457) (quote "invalid ") g$745$21452)))))) (g$745$21454 g$745$21450 (quote ()))))) (set! g$745$21254 (lambda (g$745$21423 g$745$21424 g$745$21425 g$745$21426 g$745$21427 g$745$21428 g$745$21429 g$745$21430) (call-with-values (lambda () (g$745$14863 g$745$21428 g$745$21424)) (lambda (g$745$21433 g$745$21434) (if (not (g$745$14358 (map car g$745$21434))) (g$745$21252 (map car g$745$21434) g$745$21428 (quote "pattern variable")) (if (not (for-all (lambda (g$745$21446) (not (g$745$14867 (car g$745$21446)))) g$745$21434)) (error (quote expander) (quote "misplaced ellipsis in syntax-case pattern") (g$745$14364 g$745$21428 (quote ()))) ((lambda (g$745$21436) ((lambda (g$745$21438) ((lambda (g$745$21440) ((lambda (g$745$21442) (list (g$745$14234 (quote #f) (list g$745$21436) (list (quote if) g$745$21438 g$745$21440 g$745$21442)) (list (quote (primitive syntax-dispatch)) g$745$21423 (list (quote quote) g$745$21433)))) (g$745$21256 g$745$21423 g$745$21424 g$745$21425 g$745$21426 g$745$21427))) (g$745$21250 g$745$21434 g$745$21430 g$745$21436 g$745$21426 g$745$21427))) (if (eq? g$745$21429 (quote #t)) g$745$21436 ((lambda (g$745$21444) (list (quote if) g$745$21436 g$745$21444 (list (quote quote) (quote #f)))) (g$745$21250 g$745$21434 g$745$21429 g$745$21436 g$745$21426 g$745$21427))))) (g$745$14256 (quote tmp))))))))) (set! g$745$21256 (lambda (g$745$21332 g$745$21333 g$745$21334 g$745$21335 g$745$21336) (if (null? g$745$21334) (list (quote (primitive syntax-error)) g$745$21332) ((lambda (g$745$21338) ((lambda (g$745$21340) (if (if g$745$21340 (begin (quote #f) (apply (lambda (g$745$21395 g$745$21396) (quote #t)) g$745$21340)) (quote #f)) (apply (lambda (g$745$21385 g$745$21386) (if (if (g$745$14346 g$745$21385) (if (not (g$745$14360 g$745$21385 g$745$21333)) (begin (quote #f) (not (g$745$14867 g$745$21385))) (quote #f)) (quote #f)) (if (g$745$14354 g$745$21385 (g$745$14775 (quote _))) (g$745$14893 g$745$21386 g$745$21335 g$745$21336) ((lambda (g$745$21389 g$745$21390) ((lambda (g$745$21392) (list (g$745$14234 (quote #f) (list g$745$21390) g$745$21392) g$745$21332)) (g$745$14893 (g$745$14326 (g$745$14293 (list g$745$21385) (list g$745$21389)) g$745$21386) (cons (cons g$745$21389 (g$745$14372 (quote syntax) (cons g$745$21390 (quote 0)))) g$745$21335) g$745$21336))) (g$745$14260 g$745$21385) (g$745$14256 g$745$21385))) (g$745$21254 g$745$21332 g$745$21333 (cdr g$745$21334) g$745$21335 g$745$21336 g$745$21385 (quote #t) g$745$21386))) g$745$21340) ((lambda (g$745$21342) ((lambda (g$745$21344) (if (if g$745$21344 (begin (quote #f) (apply (lambda (g$745$21354 g$745$21355 g$745$21356) (quote #t)) g$745$21344)) (quote #f)) (apply (lambda (g$745$21348 g$745$21349 g$745$21350) (g$745$21254 g$745$21332 g$745$21333 (cdr g$745$21334) g$745$21335 g$745$21336 g$745$21348 g$745$21349 g$745$21350)) g$745$21344) (error (quote expander) (quote #3#) (g$745$14364 g$745$21342 (quote ()))))) ((lambda (g$745$21358) (if (g$745$14332 g$745$21358) (begin (quote #f) ((lambda (g$745$21360) (if g$745$21360 (begin (quote #f) ((lambda (g$745$21362) (if g$745$21362 (begin (quote #f) (append g$745$21360 g$745$21362)) (quote #f))) ((lambda (g$745$21364) (if (g$745$14332 g$745$21364) (begin (quote #f) ((lambda (g$745$21366) (if g$745$21366 (begin (quote #f) ((lambda (g$745$21368) (if g$745$21368 (begin (quote #f) (append g$745$21366 g$745$21368)) (quote #f))) ((lambda (g$745$21370) (if (g$745$14332 g$745$21370) (begin (quote #f) ((lambda (g$745$21372) (if g$745$21372 (begin (quote #f) ((lambda (g$745$21374) (if g$745$21374 (begin (quote #f) (append g$745$21372 g$745$21374)) (quote #f))) ((lambda (g$745$21376) (if (equal? (g$745$14366 g$745$21376) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$21370)))) (quote #f))) ((lambda (g$745$21378) (list g$745$21378)) (g$745$14340 g$745$21370)))) (quote #f))) (g$745$14344 g$745$21364)))) (quote #f))) ((lambda (g$745$21380) (list g$745$21380)) (g$745$14340 g$745$21364)))) (quote #f))) (g$745$14344 g$745$21358)))) (quote #f))) ((lambda (g$745$21382) (list g$745$21382)) (g$745$14340 g$745$21358)))) (quote #f))) g$745$21342))) g$745$21338))) ((lambda (g$745$21398) (if (g$745$14332 g$745$21398) (begin (quote #f) ((lambda (g$745$21400) (if g$745$21400 (begin (quote #f) ((lambda (g$745$21402) (if g$745$21402 (begin (quote #f) (append g$745$21400 g$745$21402)) (quote #f))) ((lambda (g$745$21404) (if (g$745$14332 g$745$21404) (begin (quote #f) ((lambda (g$745$21406) (if g$745$21406 (begin (quote #f) ((lambda (g$745$21408) (if g$745$21408 (begin (quote #f) (append g$745$21406 g$745$21408)) (quote #f))) ((lambda (g$745$21410) (if (equal? (g$745$14366 g$745$21410) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$21404)))) (quote #f))) ((lambda (g$745$21412) (list g$745$21412)) (g$745$14340 g$745$21404)))) (quote #f))) (g$745$14344 g$745$21398)))) (quote #f))) ((lambda (g$745$21414) (list g$745$21414)) (g$745$14340 g$745$21398)))) (quote #f))) g$745$21338))) (car g$745$21334))))) (lambda (g$745$21260 g$745$21261 g$745$21262) ((lambda (g$745$21264) ((lambda (g$745$21266) (if (if g$745$21266 (begin (quote #f) (apply (lambda (g$745$21282 g$745$21283 g$745$21284) (quote #t)) g$745$21266)) (quote #f)) (apply (lambda (g$745$21270 g$745$21271 g$745$21272) (begin (if (for-all (lambda (g$745$21274) (if (g$745$14346 g$745$21274) (begin (quote #f) (not (g$745$14867 g$745$21274))) (quote #f))) g$745$21271) (void) (error (quote expander) (quote "invalid literals") (g$745$14364 g$745$21260 (quote ())))) ((lambda (g$745$21276) ((lambda (g$745$21278) (list (g$745$14234 (quote #f) (list g$745$21276) g$745$21278) (g$745$14893 g$745$21270 g$745$21261 g$745$21262))) (g$745$21256 g$745$21276 g$745$21271 g$745$21272 g$745$21261 g$745$21262))) (g$745$14256 (quote tmp))))) g$745$21266) (error (quote expander) (quote #3#) (g$745$14364 g$745$21264 (quote ()))))) ((lambda (g$745$21286) (if (g$745$14332 g$745$21286) (begin (quote #f) ((lambda (g$745$21288) (if g$745$21288 (begin (quote #f) ((lambda (g$745$21290) (if g$745$21290 (begin (quote #f) (append g$745$21288 g$745$21290)) (quote #f))) ((lambda (g$745$21292) (if (g$745$14332 g$745$21292) (begin (quote #f) ((lambda (g$745$21294) (if g$745$21294 (begin (quote #f) ((lambda (g$745$21296) (if g$745$21296 (begin (quote #f) (append g$745$21294 g$745$21296)) (quote #f))) ((lambda (g$745$21298) (if (g$745$14332 g$745$21298) (begin (quote #f) ((lambda (g$745$21300) (if g$745$21300 (begin (quote #f) ((lambda (g$745$21302) (if g$745$21302 (begin (quote #f) (append g$745$21300 g$745$21302)) (quote #f))) ((letrec ((g$745$21304 (lambda (g$745$21306) (if (g$745$14332 g$745$21306) ((lambda (g$745$21308) (if g$745$21308 (begin (quote #f) ((lambda (g$745$21310) (if g$745$21310 (begin (quote #f) (map cons g$745$21308 g$745$21310)) (quote #f))) (g$745$21304 (g$745$14344 g$745$21306)))) (quote #f))) ((lambda (g$745$21312) (list g$745$21312)) (g$745$14340 g$745$21306))) (if (g$745$14336 g$745$21306) (list (begin (quote clauses) (quote ()))) (quote #f)))))) g$745$21304) (g$745$14344 g$745$21298)))) (quote #f))) ((letrec ((g$745$21314 (lambda (g$745$21316) (if (g$745$14332 g$745$21316) ((lambda (g$745$21318) (if g$745$21318 (begin (quote #f) ((lambda (g$745$21320) (if g$745$21320 (begin (quote #f) (map cons g$745$21318 g$745$21320)) (quote #f))) (g$745$21314 (g$745$14344 g$745$21316)))) (quote #f))) ((lambda (g$745$21322) (list g$745$21322)) (g$745$14340 g$745$21316))) (if (g$745$14336 g$745$21316) (list (begin (quote keys) (quote ()))) (quote #f)))))) g$745$21314) (g$745$14340 g$745$21298)))) (quote #f))) (g$745$14344 g$745$21292)))) (quote #f))) ((lambda (g$745$21324) (list g$745$21324)) (g$745$14340 g$745$21292)))) (quote #f))) (g$745$14344 g$745$21286)))) (quote #f))) ((lambda (g$745$21326) (quote ())) (g$745$14340 g$745$21286)))) (quote #f))) g$745$21264))) g$745$21260)))) (quote #f) (quote #f) (quote #f) (quote #f))))) (set! g$745$14871 ((lambda () ((lambda (g$745$21486 g$745$21488 g$745$21490 g$745$21492 g$745$21494 g$745$21496 g$745$21498 g$745$21500) (begin (set! g$745$21486 (lambda (g$745$21613 g$745$21614 g$745$21615 g$745$21616 g$745$21617 g$745$21618) ((lambda (g$745$21620) ((lambda (g$745$21622) (if (if g$745$21622 (begin (quote #f) (apply (lambda (g$745$21832) (g$745$21617 g$745$21832)) g$745$21622)) (quote #f)) (apply (lambda (g$745$21830) (error (quote expander) (quote "misplaced ellipsis in syntax form") (g$745$14364 g$745$21613 (quote ())))) g$745$21622) ((lambda (g$745$21624) ((lambda (g$745$21626) (if (if g$745$21626 (begin (quote #f) (apply (lambda (g$745$21826) (g$745$14346 g$745$21826)) g$745$21626)) (quote #f)) (apply (lambda (g$745$21814) ((lambda (g$745$21816) ((lambda (g$745$21818) ((lambda () (if (eq? (g$745$14374 g$745$21818) (quote syntax)) (call-with-values (lambda () ((lambda (g$745$21820) (g$745$21488 g$745$21613 (car g$745$21820) (cdr g$745$21820) g$745$21616)) (g$745$14376 g$745$21818))) (lambda (g$745$21823 g$745$21824) (values (list (quote ref) g$745$21823) g$745$21824))) (values (list (quote quote) g$745$21614) g$745$21616))))) (g$745$14370 g$745$21816 g$745$21615))) (g$745$14368 g$745$21614))) g$745$21626) ((lambda (g$745$21628) ((lambda (g$745$21630) (if (if g$745$21630 (begin (quote #f) (apply (lambda (g$745$21793 g$745$21794) (g$745$21617 g$745$21793)) g$745$21630)) (quote #f)) (apply (lambda (g$745$21787 g$745$21788) (if g$745$21618 (error (quote expander) (quote "misplaced ellipsis in syntax form") (g$745$14364 g$745$21613 (quote ()))) (g$745$21486 g$745$21613 g$745$21788 g$745$21615 g$745$21616 (lambda (g$745$21790) (quote #f)) (quote #f)))) g$745$21630) ((lambda (g$745$21632) ((lambda (g$745$21634) (if (if g$745$21634 (begin (quote #f) (apply (lambda (g$745$21764 g$745$21765 g$745$21766) (g$745$21617 g$745$21765)) g$745$21634)) (quote #f)) (apply (lambda (g$745$21698 g$745$21699 g$745$21700) (letrec ((g$745$21702 (lambda (g$745$21705 g$745$21706) ((lambda (g$745$21708) ((lambda (g$745$21710) (if (if g$745$21710 (begin (quote #f) (apply (lambda () (quote #t)) g$745$21710)) (quote #f)) (apply (lambda () (g$745$21706 g$745$21616)) g$745$21710) ((lambda (g$745$21712) ((lambda (g$745$21714) (if (if g$745$21714 (begin (quote #f) (apply (lambda (g$745$21741 g$745$21742) (g$745$21617 g$745$21741)) g$745$21714)) (quote #f)) (apply (lambda (g$745$21731 g$745$21732) (g$745$21702 g$745$21732 (lambda (g$745$21734) (call-with-values (lambda () (g$745$21706 (cons (quote ()) g$745$21734))) (lambda (g$745$21737 g$745$21738) (if (null? (car g$745$21738)) (error (quote expander) (quote "extra ellipsis in syntax form") (g$745$14364 g$745$21613 (quote ()))) (values (g$745$21492 g$745$21737 (car g$745$21738)) (cdr g$745$21738)))))))) g$745$21714) ((lambda (g$745$21716) ((lambda (g$745$21718) (if (if g$745$21718 (begin (quote #f) (apply (lambda () (quote #t)) g$745$21718)) (quote #f)) (apply (lambda () (call-with-values (lambda () (g$745$21486 g$745$21613 g$745$21705 g$745$21615 g$745$21616 g$745$21617 g$745$21618)) (lambda (g$745$21721 g$745$21722) (call-with-values (lambda () (g$745$21706 g$745$21722)) (lambda (g$745$21725 g$745$21726) (values (g$745$21490 g$745$21725 g$745$21721) g$745$21726)))))) g$745$21718) (error (quote expander) (quote #3#) (g$745$14364 g$745$21716 (quote ()))))) ((lambda (g$745$21728) (quote ())) g$745$21716))) g$745$21712))) ((lambda (g$745$21744) (if (g$745$14332 g$745$21744) (begin (quote #f) ((lambda (g$745$21746) (if g$745$21746 (begin (quote #f) ((lambda (g$745$21748) (if g$745$21748 (begin (quote #f) (append g$745$21746 g$745$21748)) (quote #f))) ((lambda (g$745$21750) (list g$745$21750)) (g$745$14344 g$745$21744)))) (quote #f))) ((lambda (g$745$21752) (list g$745$21752)) (g$745$14340 g$745$21744)))) (quote #f))) g$745$21712))) g$745$21708))) ((lambda (g$745$21754) (if (equal? (g$745$14366 g$745$21754) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$21708))) g$745$21705)))) (g$745$21702 g$745$21700 (lambda (g$745$21756) (call-with-values (lambda () (g$745$21486 g$745$21613 g$745$21698 g$745$21615 (cons (quote ()) g$745$21756) g$745$21617 (quote #f))) (lambda (g$745$21759 g$745$21760) (if (null? (car g$745$21760)) (error (quote expander) (quote "extra ellipsis in syntax form") (g$745$14364 g$745$21613 (quote ()))) (values (g$745$21494 g$745$21759 (car g$745$21760)) (cdr g$745$21760))))))))) g$745$21634) ((lambda (g$745$21636) ((lambda (g$745$21638) (if (if g$745$21638 (begin (quote #f) (apply (lambda (g$745$21683 g$745$21684) (quote #t)) g$745$21638)) (quote #f)) (apply (lambda (g$745$21671 g$745$21672) (call-with-values (lambda () (g$745$21486 g$745$21613 g$745$21671 g$745$21615 g$745$21616 g$745$21617 (quote #f))) (lambda (g$745$21675 g$745$21676) (call-with-values (lambda () (g$745$21486 g$745$21613 g$745$21672 g$745$21615 g$745$21676 g$745$21617 g$745$21618)) (lambda (g$745$21679 g$745$21680) (values (g$745$21496 g$745$21614 g$745$21671 g$745$21672 g$745$21675 g$745$21679) g$745$21680)))))) g$745$21638) ((lambda (g$745$21640) ((lambda (g$745$21642) (if (if g$745$21642 (begin (quote #f) (apply (lambda (g$745$21656) (not (g$745$14298 g$745$21614))) g$745$21642)) (quote #f)) (apply (lambda (g$745$21650) (call-with-values (lambda () (g$745$21486 g$745$21613 g$745$21650 g$745$21615 g$745$21616 g$745$21617 (quote #t))) (lambda (g$745$21653 g$745$21654) (values (g$745$21498 g$745$21614 g$745$21650 g$745$21653) g$745$21654)))) g$745$21642) ((lambda (g$745$21644) ((lambda (g$745$21646) (if (if g$745$21646 (begin (quote #f) (apply (lambda () (quote #t)) g$745$21646)) (quote #f)) (apply (lambda () (values (list (quote quote) g$745$21614) g$745$21616)) g$745$21646) (error (quote expander) (quote #3#) (g$745$14364 g$745$21644 (quote ()))))) ((lambda (g$745$21648) (quote ())) g$745$21644))) g$745$21640))) ((lambda (g$745$21658) (if (g$745$14334 g$745$21658) (begin (quote #f) ((letrec ((g$745$21660 (lambda (g$745$21662) (if (g$745$14332 g$745$21662) ((lambda (g$745$21664) (if g$745$21664 (begin (quote #f) ((lambda (g$745$21666) (if g$745$21666 (begin (quote #f) (map cons g$745$21664 g$745$21666)) (quote #f))) (g$745$21660 (g$745$14344 g$745$21662)))) (quote #f))) ((lambda (g$745$21668) (list g$745$21668)) (g$745$14340 g$745$21662))) (if (g$745$14336 g$745$21662) (list (begin (quote ls) (quote ()))) (quote #f)))))) g$745$21660) (g$745$14330 g$745$21658))) (quote #f))) g$745$21640))) g$745$21636))) ((lambda (g$745$21686) (if (g$745$14332 g$745$21686) (begin (quote #f) ((lambda (g$745$21688) (if g$745$21688 (begin (quote #f) ((lambda (g$745$21690) (if g$745$21690 (begin (quote #f) (append g$745$21688 g$745$21690)) (quote #f))) ((lambda (g$745$21692) (list g$745$21692)) (g$745$14344 g$745$21686)))) (quote #f))) ((lambda (g$745$21694) (list g$745$21694)) (g$745$14340 g$745$21686)))) (quote #f))) g$745$21636))) g$745$21632))) ((lambda (g$745$21768) (if (g$745$14332 g$745$21768) (begin (quote #f) ((lambda (g$745$21770) (if g$745$21770 (begin (quote #f) ((lambda (g$745$21772) (if g$745$21772 (begin (quote #f) (append g$745$21770 g$745$21772)) (quote #f))) ((lambda (g$745$21774) (if (g$745$14332 g$745$21774) (begin (quote #f) ((lambda (g$745$21776) (if g$745$21776 (begin (quote #f) ((lambda (g$745$21778) (if g$745$21778 (begin (quote #f) (append g$745$21776 g$745$21778)) (quote #f))) ((lambda (g$745$21780) (list g$745$21780)) (g$745$14344 g$745$21774)))) (quote #f))) ((lambda (g$745$21782) (list g$745$21782)) (g$745$14340 g$745$21774)))) (quote #f))) (g$745$14344 g$745$21768)))) (quote #f))) ((lambda (g$745$21784) (list g$745$21784)) (g$745$14340 g$745$21768)))) (quote #f))) g$745$21632))) g$745$21628))) ((lambda (g$745$21796) (if (g$745$14332 g$745$21796) (begin (quote #f) ((lambda (g$745$21798) (if g$745$21798 (begin (quote #f) ((lambda (g$745$21800) (if g$745$21800 (begin (quote #f) (append g$745$21798 g$745$21800)) (quote #f))) ((lambda (g$745$21802) (if (g$745$14332 g$745$21802) (begin (quote #f) ((lambda (g$745$21804) (if g$745$21804 (begin (quote #f) ((lambda (g$745$21806) (if g$745$21806 (begin (quote #f) (append g$745$21804 g$745$21806)) (quote #f))) ((lambda (g$745$21808) (if (equal? (g$745$14366 g$745$21808) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$21802)))) (quote #f))) ((lambda (g$745$21810) (list g$745$21810)) (g$745$14340 g$745$21802)))) (quote #f))) (g$745$14344 g$745$21796)))) (quote #f))) ((lambda (g$745$21812) (list g$745$21812)) (g$745$14340 g$745$21796)))) (quote #f))) g$745$21628))) g$745$21624))) ((lambda (g$745$21828) (list g$745$21828)) g$745$21624))) g$745$21620))) ((lambda (g$745$21834) (list g$745$21834)) g$745$21620))) g$745$21614))) (set! g$745$21488 (lambda (g$745$21593 g$745$21594 g$745$21595 g$745$21596) (if (= g$745$21595 (quote 0)) (values g$745$21594 g$745$21596) (if (null? g$745$21596) (error (quote expander) (quote "missing ellipsis in syntax form") (g$745$14364 g$745$21593 (quote ()))) (call-with-values (lambda () (g$745$21488 g$745$21593 g$745$21594 (- g$745$21595 (quote 1)) (cdr g$745$21596))) (lambda (g$745$21599 g$745$21600) ((lambda (g$745$21602) (if g$745$21602 ((lambda (g$745$21606) (values (cdr g$745$21606) g$745$21596)) g$745$21602) ((lambda (g$745$21604) (values g$745$21604 (cons (cons (cons g$745$21599 g$745$21604) (car g$745$21596)) g$745$21600))) (g$745$14256 (quote tmp))))) (assq g$745$21599 (car g$745$21596))))))))) (set! g$745$21490 (lambda (g$745$21587 g$745$21588) (if (equal? g$745$21588 (quote (quote ()))) g$745$21587 (list (quote append) g$745$21587 g$745$21588)))) (set! g$745$21492 (lambda (g$745$21583 g$745$21584) (list (quote apply) (quote (primitive append)) (g$745$21494 g$745$21583 g$745$21584)))) (set! g$745$21494 (lambda (g$745$21565 g$745$21566) ((lambda (g$745$21569 g$745$21570) (if (eq? (car g$745$21565) (quote ref)) (car g$745$21570) (if (for-all (lambda (g$745$21578) (if (eq? (car g$745$21578) (quote ref)) (begin (quote #f) (memq (cadr g$745$21578) g$745$21569)) (quote #f))) (cdr g$745$21565)) ((lambda (g$745$21572) (cons (quote map) (cons (list (quote primitive) (car g$745$21565)) g$745$21572))) (map ((lambda (g$745$21574) (lambda (g$745$21576) (cdr (assq (cadr g$745$21576) g$745$21574)))) (map cons g$745$21569 g$745$21570)) (cdr g$745$21565))) (cons* (quote map) (list (quote lambda) g$745$21569 g$745$21565) g$745$21570)))) (map cdr g$745$21566) (map (lambda (g$745$21580) (list (quote ref) (car g$745$21580))) g$745$21566)))) (set! g$745$21496 (lambda (g$745$21553 g$745$21554 g$745$21555 g$745$21556 g$745$21557) ((lambda (g$745$21558) (if (memv g$745$21558 (quote (quote))) (if (eq? (car g$745$21556) (quote quote)) ((lambda (g$745$21561 g$745$21562) (if (if (eq? g$745$21561 g$745$21554) (begin (quote #f) (eq? g$745$21562 g$745$21555)) (quote #f)) (list (quote quote) g$745$21553) (list (quote quote) (cons g$745$21561 g$745$21562)))) (cadr g$745$21556) (cadr g$745$21557)) (if (null? (cadr g$745$21557)) (list (quote list) g$745$21556) (list (quote cons) g$745$21556 g$745$21557))) (if (memv g$745$21558 (quote (list))) (cons (quote list) (cons g$745$21556 (cdr g$745$21557))) (list (quote cons) g$745$21556 g$745$21557)))) (car g$745$21557)))) (set! g$745$21498 (lambda (g$745$21545 g$745$21546 g$745$21547) (if (eq? (car g$745$21547) (quote quote)) (if (eq? (cadr g$745$21547) g$745$21546) (list (quote quote) g$745$21545) (list (quote quote) (list->vector (cadr g$745$21547)))) (if (eq? (car g$745$21547) (quote list)) (cons (quote vector) (cdr g$745$21547)) (list (quote list->vector) g$745$21547))))) (set! g$745$21500 (lambda (g$745$21538) ((lambda (g$745$21539) (if (memv g$745$21539 (quote (ref))) (cadr g$745$21538) (if (memv g$745$21539 (quote (primitive))) (list (quote primitive) (cadr g$745$21538)) (if (memv g$745$21539 (quote (quote))) (list (quote quote) (cadr g$745$21538)) (if (memv g$745$21539 (quote (lambda))) (g$745$14234 (quote #f) (cadr g$745$21538) (g$745$21500 (caddr g$745$21538))) (if (memv g$745$21539 (quote (map))) ((lambda (g$745$21541) (cons (quote (primitive map)) g$745$21541)) (map g$745$21500 (cdr g$745$21538))) (cons (list (quote primitive) (car g$745$21538)) (map g$745$21500 (cdr g$745$21538))))))))) (car g$745$21538)))) (lambda (g$745$21504 g$745$21505 g$745$21506) ((lambda (g$745$21508) ((lambda (g$745$21510) (if (if g$745$21510 (begin (quote #f) (apply (lambda (g$745$21518) (quote #t)) g$745$21510)) (quote #f)) (apply (lambda (g$745$21512) (call-with-values (lambda () (g$745$21486 g$745$21504 g$745$21512 g$745$21505 (quote ()) g$745$14867 (quote #f))) (lambda (g$745$21515 g$745$21516) (g$745$21500 g$745$21515)))) g$745$21510) (error (quote expander) (quote #3#) (g$745$14364 g$745$21508 (quote ()))))) ((lambda (g$745$21520) (if (g$745$14332 g$745$21520) (begin (quote #f) ((lambda (g$745$21522) (if g$745$21522 (begin (quote #f) ((lambda (g$745$21524) (if g$745$21524 (begin (quote #f) (append g$745$21522 g$745$21524)) (quote #f))) ((lambda (g$745$21526) (if (g$745$14332 g$745$21526) (begin (quote #f) ((lambda (g$745$21528) (if g$745$21528 (begin (quote #f) ((lambda (g$745$21530) (if g$745$21530 (begin (quote #f) (append g$745$21528 g$745$21530)) (quote #f))) ((lambda (g$745$21532) (if (equal? (g$745$14366 g$745$21532) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$21526)))) (quote #f))) ((lambda (g$745$21534) (list g$745$21534)) (g$745$14340 g$745$21526)))) (quote #f))) (g$745$14344 g$745$21520)))) (quote #f))) ((lambda (g$745$21536) (quote ())) (g$745$14340 g$745$21520)))) (quote #f))) g$745$21508))) g$745$21504)))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f))))) (set! g$745$14873 (lambda (g$745$21836) ((lambda (g$745$21837) (if (memv g$745$21837 (quote (quote))) g$745$14803 (if (memv g$745$21837 (quote (lambda))) g$745$14807 (if (memv g$745$21837 (quote (case-lambda))) g$745$14805 (if (memv g$745$21837 (quote (let-values))) g$745$14781 (if (memv g$745$21837 (quote (letrec))) g$745$14785 (if (memv g$745$21837 (quote (letrec*))) g$745$14787 (if (memv g$745$21837 (quote (case))) g$745$14801 (if (memv g$745$21837 (quote (if))) g$745$14799 (if (memv g$745$21837 (quote (when))) g$745$14795 (if (memv g$745$21837 (quote (unless))) g$745$14797 (if (memv g$745$21837 (quote (parameterize))) g$745$14859 (if (memv g$745$21837 (quote (foreign-call))) g$745$14861 (if (memv g$745$21837 (quote (syntax-case))) g$745$14869 (if (memv g$745$21837 (quote (syntax))) g$745$14871 (if (memv g$745$21837 (quote (type-descriptor))) g$745$14789 (if (memv g$745$21837 (quote (record-type-descriptor))) g$745$14791 (if (memv g$745$21837 (quote (record-constructor-descriptor))) g$745$14793 (error (quote macro-transformer) (quote "cannot find transformer") g$745$21836))))))))))))))))))) g$745$21836))) (set! g$745$14875 (lambda (g$745$21839) ((lambda (g$745$21841) ((lambda (g$745$21843) (if (if g$745$21843 (begin (quote #f) (apply (lambda (g$745$21847) (if (for-all g$745$14346 g$745$21847) (begin (quote #f) (g$745$13358 (map g$745$14348 g$745$21847))) (quote #f))) g$745$21843)) (quote #f)) (apply (lambda (g$745$21845) (g$745$14809 (list (quote quote) (g$745$13358 (map g$745$14348 g$745$21845))))) g$745$21843) (error (quote expander) (quote #3#) (g$745$14364 g$745$21841 (quote ()))))) ((lambda (g$745$21849) (if (g$745$14332 g$745$21849) (begin (quote #f) ((lambda (g$745$21851) (if g$745$21851 (begin (quote #f) ((lambda (g$745$21853) (if g$745$21853 (begin (quote #f) (append g$745$21851 g$745$21853)) (quote #f))) ((letrec ((g$745$21855 (lambda (g$745$21857) (if (g$745$14332 g$745$21857) ((lambda (g$745$21859) (if g$745$21859 (begin (quote #f) ((lambda (g$745$21861) (if g$745$21861 (begin (quote #f) (map cons g$745$21859 g$745$21861)) (quote #f))) (g$745$21855 (g$745$14344 g$745$21857)))) (quote #f))) ((lambda (g$745$21863) (list g$745$21863)) (g$745$14340 g$745$21857))) (if (g$745$14336 g$745$21857) (list (begin (quote opt*) (quote ()))) (quote #f)))))) g$745$21855) (g$745$14344 g$745$21849)))) (quote #f))) ((lambda (g$745$21865) (quote ())) (g$745$14340 g$745$21849)))) (quote #f))) g$745$21841))) g$745$21839))) (set! g$745$14877 (lambda (g$745$21868 g$745$21869) ((lambda (g$745$21871) ((lambda (g$745$21873) (if (if g$745$21873 (begin (quote #f) (apply (lambda (g$745$21877) (if (g$745$14346 g$745$21877) (begin (quote #f) (memq (g$745$14348 g$745$21877) g$745$21869)) (quote #f))) g$745$21873)) (quote #f)) (apply (lambda (g$745$21875) (g$745$14809 (list (quote quote) g$745$21875))) g$745$21873) (error (quote expander) (quote #3#) (g$745$14364 g$745$21871 (quote ()))))) ((lambda (g$745$21879) (if (g$745$14332 g$745$21879) (begin (quote #f) ((lambda (g$745$21881) (if g$745$21881 (begin (quote #f) ((lambda (g$745$21883) (if g$745$21883 (begin (quote #f) (append g$745$21881 g$745$21883)) (quote #f))) ((lambda (g$745$21885) (if (g$745$14332 g$745$21885) (begin (quote #f) ((lambda (g$745$21887) (if g$745$21887 (begin (quote #f) ((lambda (g$745$21889) (if g$745$21889 (begin (quote #f) (append g$745$21887 g$745$21889)) (quote #f))) ((lambda (g$745$21891) (if (equal? (g$745$14366 g$745$21891) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$21885)))) (quote #f))) ((lambda (g$745$21893) (list g$745$21893)) (g$745$14340 g$745$21885)))) (quote #f))) (g$745$14344 g$745$21879)))) (quote #f))) ((lambda (g$745$21895) (quote ())) (g$745$14340 g$745$21879)))) (quote #f))) g$745$21871))) g$745$21868))) (set! g$745$14879 (lambda (g$745$21897) (if (procedure? g$745$21897) g$745$21897 (if (symbol? g$745$21897) ((lambda (g$745$21898) (if (memv g$745$21898 (quote (define-record-type))) g$745$14853 (if (memv g$745$21898 (quote (define-struct))) g$745$14851 (if (memv g$745$21898 (quote (include))) g$745$14843 (if (memv g$745$21898 (quote (cond))) g$745$14841 (if (memv g$745$21898 (quote (let))) g$745$14813 (if (memv g$745$21898 (quote (do))) g$745$14833 (if (memv g$745$21898 (quote (or))) g$745$14837 (if (memv g$745$21898 (quote (and))) g$745$14839 (if (memv g$745$21898 (quote (let*))) g$745$14835 (if (memv g$745$21898 (quote (syntax-rules))) g$745$14845 (if (memv g$745$21898 (quote (quasiquote))) g$745$14847 (if (memv g$745$21898 (quote (quasisyntax))) g$745$14849 (if (memv g$745$21898 (quote (with-syntax))) g$745$14811 (if (memv g$745$21898 (quote (identifier-syntax))) g$745$14831 (if (memv g$745$21898 (quote (time))) g$745$14823 (if (memv g$745$21898 (quote (delay))) g$745$14825 (if (memv g$745$21898 (quote (assert))) g$745$14827 (if (memv g$745$21898 (quote (endianness))) g$745$14829 (if (memv g$745$21898 (quote (guard))) g$745$14819 (if (memv g$745$21898 (quote (define-enumeration))) g$745$14821 (if (memv g$745$21898 (quote (trace-lambda))) g$745$14815 (if (memv g$745$21898 (quote (trace-define))) g$745$14817 (if (memv g$745$21898 (quote (define-condition-type))) g$745$14855 (if (memv g$745$21898 (quote (eol-style))) (lambda (g$745$21904) (g$745$14877 g$745$21904 (quote (none lf cr crlf nel crnel ls)))) (if (memv g$745$21898 (quote (error-handling-mode))) (lambda (g$745$21902) (g$745$14877 g$745$21902 (quote (ignore raise replace)))) (if (memv g$745$21898 (quote (buffer-mode))) (lambda (g$745$21900) (g$745$14877 g$745$21900 (quote (none line block)))) (if (memv g$745$21898 (quote (file-options))) g$745$14875 (if (memv g$745$21898 (quote (... => _ else unquote unquote-splicing unsyntax unsyntax-splicing fields mutable immutable parent protocol sealed opaque nongenerative parent-rtd))) g$745$14857 (error (quote macro-transformer) (quote "invalid macro") g$745$21897)))))))))))))))))))))))))))))) g$745$21897) (error (quote core-macro-transformer) (quote "invalid macro") g$745$21897))))) (set! g$745$14881 (lambda (g$745$21906) (car g$745$21906))) (set! g$745$14883 (lambda (g$745$21909 g$745$21910) ((lambda (g$745$21912) (g$745$14324 (g$745$14314) g$745$21912)) ((g$745$14879 g$745$21909) (g$745$14324 g$745$14316 g$745$21910))))) (set! g$745$14885 (lambda (g$745$21915 g$745$21916) ((lambda (g$745$21918) (g$745$14324 (g$745$14314) g$745$21918)) ((g$745$14881 g$745$21915) (g$745$14324 g$745$14316 g$745$21916))))) (set! g$745$14887 (lambda (g$745$21921 g$745$21922) ((lambda (g$745$21925 g$745$21926) (begin (g$745$13882 g$745$21925) ((lambda (g$745$21928) ((lambda (g$745$21930) ((lambda (g$745$21932) (g$745$14324 (g$745$14314) g$745$21932)) (g$745$21930 (g$745$14324 g$745$14316 g$745$21922)))) (if (procedure? g$745$21928) g$745$21928 (error (quote chi-global-macro) (quote "not a procedure"))))) (symbol-value g$745$21926)))) (car g$745$21921) (cdr g$745$21921)))) (set! g$745$14889 (lambda (g$745$21936 g$745$21937 g$745$21938) (if (null? g$745$21936) (quote ()) ((lambda (g$745$21940) (cons g$745$21940 (g$745$14889 (cdr g$745$21936) g$745$21937 g$745$21938))) (g$745$14893 (car g$745$21936) g$745$21937 g$745$21938))))) (set! g$745$14891 (lambda (g$745$21944 g$745$21945 g$745$21946) ((lambda (g$745$21948) ((lambda (g$745$21950) (if (if g$745$21950 (begin (quote #f) (apply (lambda (g$745$21959 g$745$21960) (quote #t)) g$745$21950)) (quote #f)) (apply (lambda (g$745$21953 g$745$21954) ((lambda (g$745$21956) (cons g$745$21956 (g$745$14889 g$745$21954 g$745$21945 g$745$21946))) (g$745$14893 g$745$21953 g$745$21945 g$745$21946))) g$745$21950) (error (quote expander) (quote #3#) (g$745$14364 g$745$21948 (quote ()))))) ((lambda (g$745$21962) (if (g$745$14332 g$745$21962) (begin (quote #f) ((lambda (g$745$21964) (if g$745$21964 (begin (quote #f) ((lambda (g$745$21966) (if g$745$21966 (begin (quote #f) (append g$745$21964 g$745$21966)) (quote #f))) ((letrec ((g$745$21968 (lambda (g$745$21970) (if (g$745$14332 g$745$21970) ((lambda (g$745$21972) (if g$745$21972 (begin (quote #f) ((lambda (g$745$21974) (if g$745$21974 (begin (quote #f) (map cons g$745$21972 g$745$21974)) (quote #f))) (g$745$21968 (g$745$14344 g$745$21970)))) (quote #f))) ((lambda (g$745$21976) (list g$745$21976)) (g$745$14340 g$745$21970))) (if (g$745$14336 g$745$21970) (list (begin (quote rands) (quote ()))) (quote #f)))))) g$745$21968) (g$745$14344 g$745$21962)))) (quote #f))) ((lambda (g$745$21978) (list g$745$21978)) (g$745$14340 g$745$21962)))) (quote #f))) g$745$21948))) g$745$21944))) (set! g$745$14893 (lambda (g$745$21982 g$745$21983 g$745$21984) (call-with-values (lambda () (g$745$14378 g$745$21982 g$745$21983)) (lambda (g$745$21988 g$745$21989 g$745$21990) ((lambda (g$745$21991) (if (memv g$745$21991 (quote (core-macro))) ((lambda (g$745$22129) (g$745$22129 g$745$21982 g$745$21983 g$745$21984)) (g$745$14873 g$745$21989)) (if (memv g$745$21991 (quote (global))) ((lambda (g$745$22125) ((lambda (g$745$22127) ((lambda () (begin ((g$745$14941) g$745$22125) g$745$22127)))) (cdr g$745$21989))) (car g$745$21989)) (if (memv g$745$21991 (quote (core-prim))) ((lambda (g$745$22123) (list (quote primitive) g$745$22123)) g$745$21989) (if (memv g$745$21991 (quote (call))) (g$745$14891 g$745$21982 g$745$21983 g$745$21984) (if (memv g$745$21991 (quote (lexical))) ((lambda (g$745$22121) g$745$22121) g$745$21989) (if (memv g$745$21991 (quote (global-macro global-macro!))) (g$745$14893 (g$745$14887 g$745$21989 g$745$21982) g$745$21983 g$745$21984) (if (memv g$745$21991 (quote (local-macro local-macro!))) (g$745$14893 (g$745$14885 g$745$21989 g$745$21982) g$745$21983 g$745$21984) (if (memv g$745$21991 (quote (macro macro!))) (g$745$14893 (g$745$14883 g$745$21989 g$745$21982) g$745$21983 g$745$21984) (if (memv g$745$21991 (quote (constant))) ((lambda (g$745$22119) (list (quote quote) g$745$22119)) g$745$21989) (if (memv g$745$21991 (quote (set!))) (g$745$14895 g$745$21982 g$745$21983 g$745$21984) (if (memv g$745$21991 (quote (begin))) ((lambda (g$745$22081) ((lambda (g$745$22083) (if (if g$745$22083 (begin (quote #f) (apply (lambda (g$745$22090 g$745$22091) (quote #t)) g$745$22083)) (quote #f)) (apply (lambda (g$745$22086 g$745$22087) (g$745$14228 (quote #f) (g$745$14889 (cons g$745$22086 g$745$22087) g$745$21983 g$745$21984))) g$745$22083) (error (quote expander) (quote #3#) (g$745$14364 g$745$22081 (quote ()))))) ((lambda (g$745$22093) (if (g$745$14332 g$745$22093) (begin (quote #f) ((lambda (g$745$22095) (if g$745$22095 (begin (quote #f) ((lambda (g$745$22097) (if g$745$22097 (begin (quote #f) (append g$745$22095 g$745$22097)) (quote #f))) ((lambda (g$745$22099) (if (g$745$14332 g$745$22099) (begin (quote #f) ((lambda (g$745$22101) (if g$745$22101 (begin (quote #f) ((lambda (g$745$22103) (if g$745$22103 (begin (quote #f) (append g$745$22101 g$745$22103)) (quote #f))) ((letrec ((g$745$22105 (lambda (g$745$22107) (if (g$745$14332 g$745$22107) ((lambda (g$745$22109) (if g$745$22109 (begin (quote #f) ((lambda (g$745$22111) (if g$745$22111 (begin (quote #f) (map cons g$745$22109 g$745$22111)) (quote #f))) (g$745$22105 (g$745$14344 g$745$22107)))) (quote #f))) ((lambda (g$745$22113) (list g$745$22113)) (g$745$14340 g$745$22107))) (if (g$745$14336 g$745$22107) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$22105) (g$745$14344 g$745$22099)))) (quote #f))) ((lambda (g$745$22115) (list g$745$22115)) (g$745$14340 g$745$22099)))) (quote #f))) (g$745$14344 g$745$22093)))) (quote #f))) ((lambda (g$745$22117) (quote ())) (g$745$14340 g$745$22093)))) (quote #f))) g$745$22081))) g$745$21982) (if (memv g$745$21991 (quote (let-syntax letrec-syntax))) ((lambda (g$745$21993) ((lambda (g$745$21995) (if (if g$745$21995 (begin (quote #f) (apply (lambda (g$745$22018 g$745$22019 g$745$22020 g$745$22021) (if (g$745$14356 g$745$22018) (void) (error (quote expander) (quote "invalid identifiers") (g$745$14364 g$745$21982 (quote ()))))) g$745$21995)) (quote #f)) (apply (lambda (g$745$22000 g$745$22001 g$745$22002 g$745$22003) ((lambda (g$745$22005) ((lambda (g$745$22007) ((lambda (g$745$22009) ((lambda () (g$745$14228 (quote #f) (g$745$14889 (map (lambda (g$745$22011) (g$745$14326 g$745$22007 g$745$22011)) (cons g$745$22002 g$745$22003)) (append (map cons g$745$22005 g$745$22009) g$745$21983) (append (map cons g$745$22005 g$745$22009) g$745$21984)))))) (map (lambda (g$745$22013) (g$745$14409 (g$745$14927 (if (eq? g$745$21988 (quote let-syntax)) g$745$22013 (g$745$14326 g$745$22007 g$745$22013)) g$745$21984))) g$745$22001))) (g$745$14293 g$745$22000 g$745$22005))) (map g$745$14260 g$745$22000))) g$745$21995) (error (quote expander) (quote #3#) (g$745$14364 g$745$21993 (quote ()))))) ((lambda (g$745$22023) (if (g$745$14332 g$745$22023) (begin (quote #f) ((lambda (g$745$22025) (if g$745$22025 (begin (quote #f) ((lambda (g$745$22027) (if g$745$22027 (begin (quote #f) (append g$745$22025 g$745$22027)) (quote #f))) ((lambda (g$745$22029) (if (g$745$14332 g$745$22029) (begin (quote #f) ((lambda (g$745$22031) (if g$745$22031 (begin (quote #f) ((lambda (g$745$22033) (if g$745$22033 (begin (quote #f) (append g$745$22031 g$745$22033)) (quote #f))) ((lambda (g$745$22035) (if (g$745$14332 g$745$22035) (begin (quote #f) ((lambda (g$745$22037) (if g$745$22037 (begin (quote #f) ((lambda (g$745$22039) (if g$745$22039 (begin (quote #f) (append g$745$22037 g$745$22039)) (quote #f))) ((letrec ((g$745$22041 (lambda (g$745$22043) (if (g$745$14332 g$745$22043) ((lambda (g$745$22045) (if g$745$22045 (begin (quote #f) ((lambda (g$745$22047) (if g$745$22047 (begin (quote #f) (map cons g$745$22045 g$745$22047)) (quote #f))) (g$745$22041 (g$745$14344 g$745$22043)))) (quote #f))) ((lambda (g$745$22049) (list g$745$22049)) (g$745$14340 g$745$22043))) (if (g$745$14336 g$745$22043) (list (begin (quote xbody*) (quote ()))) (quote #f)))))) g$745$22041) (g$745$14344 g$745$22035)))) (quote #f))) ((lambda (g$745$22051) (list g$745$22051)) (g$745$14340 g$745$22035)))) (quote #f))) (g$745$14344 g$745$22029)))) (quote #f))) ((letrec ((g$745$22053 (lambda (g$745$22055) (if (g$745$14332 g$745$22055) ((lambda (g$745$22057) (if g$745$22057 (begin (quote #f) ((lambda (g$745$22059) (if g$745$22059 (begin (quote #f) (map cons g$745$22057 g$745$22059)) (quote #f))) (g$745$22053 (g$745$14344 g$745$22055)))) (quote #f))) ((lambda (g$745$22061) (if (g$745$14332 g$745$22061) (begin (quote #f) ((lambda (g$745$22063) (if g$745$22063 (begin (quote #f) ((lambda (g$745$22065) (if g$745$22065 (begin (quote #f) (append g$745$22063 g$745$22065)) (quote #f))) ((lambda (g$745$22067) (if (g$745$14332 g$745$22067) (begin (quote #f) ((lambda (g$745$22069) (if g$745$22069 (begin (quote #f) ((lambda (g$745$22071) (if g$745$22071 (begin (quote #f) (append g$745$22069 g$745$22071)) (quote #f))) ((lambda (g$745$22073) (if (equal? (g$745$14366 g$745$22073) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$22067)))) (quote #f))) ((lambda (g$745$22075) (list g$745$22075)) (g$745$14340 g$745$22067)))) (quote #f))) (g$745$14344 g$745$22061)))) (quote #f))) ((lambda (g$745$22077) (list g$745$22077)) (g$745$14340 g$745$22061)))) (quote #f))) (g$745$14340 g$745$22055))) (if (g$745$14336 g$745$22055) (list (begin (quote xlhs*) (quote ())) (begin (quote xrhs*) (quote ()))) (quote #f)))))) g$745$22053) (g$745$14340 g$745$22029)))) (quote #f))) (g$745$14344 g$745$22023)))) (quote #f))) ((lambda (g$745$22079) (quote ())) (g$745$14340 g$745$22023)))) (quote #f))) g$745$21993))) g$745$21982) (if (memv g$745$21991 (quote (displaced-lexical))) (error (quote expander) (quote "identifier out of context") (g$745$14364 g$745$21982 (quote ()))) (if (memv g$745$21991 (quote (syntax))) (error (quote expander) (quote "reference to pattern variable outside a syntax form") (g$745$14364 g$745$21982 (quote ()))) (if (memv g$745$21991 (quote (define define-syntax module import))) (error (quote expander) (quote "invalid expression") (g$745$14364 g$745$21982 (quote ()))) (error (quote expander) (quote "invalid expression") (g$745$14364 g$745$21982 (quote ()))))))))))))))))))) g$745$21988))))) (set! g$745$14895 (lambda (g$745$22133 g$745$22134 g$745$22135) ((lambda (g$745$22137) ((lambda (g$745$22139) (if (if g$745$22139 (begin (quote #f) (apply (lambda (g$745$22153 g$745$22154) (g$745$14346 g$745$22153)) g$745$22139)) (quote #f)) (apply (lambda (g$745$22142 g$745$22143) (call-with-values (lambda () (g$745$14378 g$745$22142 g$745$22134)) (lambda (g$745$22147 g$745$22148 g$745$22149) ((lambda (g$745$22150) (if (memv g$745$22150 (quote (lexical))) (list (quote set!) g$745$22148 (g$745$14893 g$745$22143 g$745$22134 g$745$22135)) (if (memv g$745$22150 (quote (global core-prim))) (error (quote expander) (quote "cannot modify imported identifier in") (g$745$14364 g$745$22133 (quote ()))) (if (memv g$745$22150 (quote (global-macro!))) (g$745$14893 (g$745$14887 g$745$22148 g$745$22133) g$745$22134 g$745$22135) (if (memv g$745$22150 (quote (local-macro!))) (g$745$14893 (g$745$14885 g$745$22148 g$745$22133) g$745$22134 g$745$22135) (error (quote expander) (quote #4#) (g$745$14366 g$745$22133))))))) g$745$22147)))) g$745$22139) (error (quote expander) (quote #3#) (g$745$14364 g$745$22137 (quote ()))))) ((lambda (g$745$22156) (if (g$745$14332 g$745$22156) (begin (quote #f) ((lambda (g$745$22158) (if g$745$22158 (begin (quote #f) ((lambda (g$745$22160) (if g$745$22160 (begin (quote #f) (append g$745$22158 g$745$22160)) (quote #f))) ((lambda (g$745$22162) (if (g$745$14332 g$745$22162) (begin (quote #f) ((lambda (g$745$22164) (if g$745$22164 (begin (quote #f) ((lambda (g$745$22166) (if g$745$22166 (begin (quote #f) (append g$745$22164 g$745$22166)) (quote #f))) ((lambda (g$745$22168) (if (g$745$14332 g$745$22168) (begin (quote #f) ((lambda (g$745$22170) (if g$745$22170 (begin (quote #f) ((lambda (g$745$22172) (if g$745$22172 (begin (quote #f) (append g$745$22170 g$745$22172)) (quote #f))) ((lambda (g$745$22174) (if (equal? (g$745$14366 g$745$22174) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$22168)))) (quote #f))) ((lambda (g$745$22176) (list g$745$22176)) (g$745$14340 g$745$22168)))) (quote #f))) (g$745$14344 g$745$22162)))) (quote #f))) ((lambda (g$745$22178) (list g$745$22178)) (g$745$14340 g$745$22162)))) (quote #f))) (g$745$14344 g$745$22156)))) (quote #f))) ((lambda (g$745$22180) (quote ())) (g$745$14340 g$745$22156)))) (quote #f))) g$745$22137))) g$745$22133))) (set! g$745$14897 (lambda (g$745$22185 g$745$22186 g$745$22187 g$745$22188) ((lambda (g$745$22190) ((lambda (g$745$22192) (if (if g$745$22192 (begin (quote #f) (apply (lambda (g$745$22244) (quote #t)) g$745$22192)) (quote #f)) (apply (lambda (g$745$22238) (if (g$745$14356 g$745$22238) ((lambda (g$745$22241 g$745$22242) (values g$745$22241 (g$745$14909 (g$745$14326 (g$745$14293 g$745$22238 g$745$22242) g$745$22186) (g$745$14779 g$745$22242 g$745$22241 g$745$22187) g$745$22188))) (map g$745$14256 g$745$22238) (map g$745$14260 g$745$22238)) (error (quote expander) (quote "invalid fmls") (g$745$14364 g$745$22185 (quote ()))))) g$745$22192) ((lambda (g$745$22194) ((lambda (g$745$22196) (if (if g$745$22196 (begin (quote #f) (apply (lambda (g$745$22217 g$745$22218) (quote #t)) g$745$22196)) (quote #f)) (apply (lambda (g$745$22205 g$745$22206) (if (g$745$14356 (cons g$745$22206 g$745$22205)) ((lambda (g$745$22211 g$745$22212 g$745$22213 g$745$22214) (values (append g$745$22211 g$745$22213) (g$745$14909 (g$745$14326 (g$745$14293 (cons g$745$22206 g$745$22205) (cons g$745$22214 g$745$22212)) g$745$22186) (g$745$14779 (cons g$745$22214 g$745$22212) (cons g$745$22213 g$745$22211) g$745$22187) g$745$22188))) (map g$745$14256 g$745$22205) (map g$745$14260 g$745$22205) (g$745$14256 g$745$22206) (g$745$14260 g$745$22206)) (error (quote expander) (quote "invalid fmls") (g$745$14364 g$745$22185 (quote ()))))) g$745$22196) ((lambda (g$745$22198) ((lambda (g$745$22200) (if (if g$745$22200 (begin (quote #f) (apply (lambda () (quote #t)) g$745$22200)) (quote #f)) (apply (lambda () (error (quote expander) (quote "invalid fmls") (g$745$14364 g$745$22185 (quote ())))) g$745$22200) (error (quote expander) (quote #3#) (g$745$14364 g$745$22198 (quote ()))))) ((lambda (g$745$22202) (quote ())) g$745$22198))) g$745$22194))) ((letrec ((g$745$22220 (lambda (g$745$22222) (if (g$745$14332 g$745$22222) ((lambda (g$745$22228) (if g$745$22228 (begin (quote #f) ((lambda (g$745$22230) (if g$745$22230 (begin (quote #f) (cons (map cons g$745$22228 (car g$745$22230)) (cdr g$745$22230))) (quote #f))) (g$745$22220 (g$745$14344 g$745$22222)))) (quote #f))) ((lambda (g$745$22232) (list g$745$22232)) (g$745$14340 g$745$22222))) ((lambda (g$745$22224) (if g$745$22224 (begin (quote #f) (cons (list (begin (quote x*) (quote ()))) g$745$22224)) (quote #f))) ((lambda (g$745$22226) (list g$745$22226)) g$745$22222)))))) (lambda (g$745$22234) ((lambda (g$745$22236) (if g$745$22236 (begin (quote #f) (append (car g$745$22236) (cdr g$745$22236))) (quote #f))) (g$745$22220 g$745$22234)))) g$745$22194))) g$745$22190))) ((letrec ((g$745$22246 (lambda (g$745$22248) (if (g$745$14332 g$745$22248) ((lambda (g$745$22250) (if g$745$22250 (begin (quote #f) ((lambda (g$745$22252) (if g$745$22252 (begin (quote #f) (map cons g$745$22250 g$745$22252)) (quote #f))) (g$745$22246 (g$745$14344 g$745$22248)))) (quote #f))) ((lambda (g$745$22254) (list g$745$22254)) (g$745$14340 g$745$22248))) (if (g$745$14336 g$745$22248) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$22246) g$745$22190))) g$745$22185))) (set! g$745$14899 (lambda (g$745$22259 g$745$22260 g$745$22261 g$745$22262) (if (null? g$745$22259) (values (quote ()) (quote ())) (call-with-values (lambda () (g$745$14897 (car g$745$22259) (car g$745$22260) g$745$22261 g$745$22262)) (lambda (g$745$22265 g$745$22266) (call-with-values (lambda () (g$745$14899 (cdr g$745$22259) (cdr g$745$22260) g$745$22261 g$745$22262)) (lambda (g$745$22269 g$745$22270) (values (cons g$745$22265 g$745$22269) (cons g$745$22266 g$745$22270))))))))) (set! g$745$14901 (lambda (g$745$22274 g$745$22275 g$745$22276) ((lambda (g$745$22277) (if (memv g$745$22277 (quote (defun))) ((lambda (g$745$22283) ((lambda (g$745$22286 g$745$22287) (call-with-values (lambda () (g$745$14897 g$745$22286 g$745$22287 g$745$22275 g$745$22276)) (lambda (g$745$22290 g$745$22291) (g$745$14234 (quote #f) g$745$22290 g$745$22291)))) (car g$745$22283) (cdr g$745$22283))) (cdr g$745$22274)) (if (memv g$745$22277 (quote (expr))) ((lambda (g$745$22281) (g$745$14893 g$745$22281 g$745$22275 g$745$22276)) (cdr g$745$22274)) (if (memv g$745$22277 (quote (top-expr))) ((lambda (g$745$22279) (g$745$14228 (quote #f) (list (g$745$14893 g$745$22279 g$745$22275 g$745$22276) (g$745$14227)))) (cdr g$745$22274)) (error (quote chi-rhs) (quote "invalid rhs") g$745$22274))))) (car g$745$22274)))) (set! g$745$14903 (lambda (g$745$22295 g$745$22296 g$745$22297) (letrec ((g$745$22299 (lambda (g$745$22301) (if (null? g$745$22301) (quote ()) ((lambda (g$745$22303) (cons g$745$22303 (g$745$22299 (cdr g$745$22301)))) (g$745$14901 (car g$745$22301) g$745$22296 g$745$22297)))))) (g$745$22299 g$745$22295)))) (set! g$745$14905 (lambda (g$745$22307 g$745$22308 g$745$22309) (if (null? g$745$22308) (quote #f) (if (g$745$14352 g$745$22307 (car g$745$22308)) (car g$745$22309) (g$745$14905 g$745$22307 (cdr g$745$22308) (cdr g$745$22309)))))) (set! g$745$14907 (lambda (g$745$22311) (letrec ((g$745$22313 (lambda (g$745$22316 g$745$22317) (if (null? g$745$22316) g$745$22317 ((lambda (g$745$22319) (if g$745$22319 ((lambda (g$745$22321) (g$745$22313 (cdr g$745$22316) (cons (list (car g$745$22316) g$745$22321) g$745$22317))) g$745$22319) (g$745$22313 (cdr g$745$22316) g$745$22317))) (g$745$14905 (car g$745$22316) (cdr g$745$22316) (cdr g$745$22316))))))) (g$745$22313 g$745$22311 (quote ()))))) (set! g$745$14909 (lambda (g$745$22325 g$745$22326 g$745$22327) ((lambda (g$745$22329) (call-with-values (lambda () (g$745$14915 (map (lambda (g$745$22331) (g$745$14326 g$745$22329 g$745$22331)) (g$745$14342 g$745$22325)) g$745$22326 g$745$22327 (quote ()) (quote ()) (quote ()) (quote ()) g$745$22329 (quote #f))) (lambda (g$745$22339 g$745$22340 g$745$22341 g$745$22342 g$745$22343 g$745$22344 g$745$22345) (begin (if (null? g$745$22339) (error (quote expander) (quote "no expression in body") (g$745$14364 g$745$22339 (quote ()))) (void)) ((lambda (g$745$22348 g$745$22349) (g$745$14225 (quote #f) (reverse g$745$22342) (reverse g$745$22348) (g$745$14228 (quote #f) g$745$22349))) (g$745$14903 g$745$22343 g$745$22340 g$745$22341) (g$745$14889 (append (apply append (reverse g$745$22344)) g$745$22339) g$745$22340 g$745$22341)))))) (g$745$14283)))) (set! g$745$14911 (lambda (g$745$22351) ((lambda (g$745$22353) ((lambda (g$745$22355) (if (if g$745$22355 (begin (quote #f) (apply (lambda (g$745$22420 g$745$22421) (quote #t)) g$745$22355)) (quote #f)) (apply (lambda (g$745$22416 g$745$22417) (begin (if (for-all g$745$14346 g$745$22416) (void) (error (quote expander) (quote "module exports must be identifiers") (g$745$14364 g$745$22351 (quote ())))) (values (quote #f) g$745$22416 g$745$22417))) g$745$22355) ((lambda (g$745$22357) ((lambda (g$745$22359) (if (if g$745$22359 (begin (quote #f) (apply (lambda (g$745$22369 g$745$22370 g$745$22371) (quote #t)) g$745$22359)) (quote #f)) (apply (lambda (g$745$22363 g$745$22364 g$745$22365) (begin (if (g$745$14346 g$745$22363) (void) (error (quote expander) (quote "module name must be an identifier") (g$745$14364 g$745$22351 (quote ())))) (if (for-all g$745$14346 g$745$22364) (void) (error (quote expander) (quote "module exports must be identifiers") (g$745$14364 g$745$22351 (quote ())))) (values g$745$22363 g$745$22364 g$745$22365))) g$745$22359) (error (quote expander) (quote #3#) (g$745$14364 g$745$22357 (quote ()))))) ((lambda (g$745$22373) (if (g$745$14332 g$745$22373) (begin (quote #f) ((lambda (g$745$22375) (if g$745$22375 (begin (quote #f) ((lambda (g$745$22377) (if g$745$22377 (begin (quote #f) (append g$745$22375 g$745$22377)) (quote #f))) ((lambda (g$745$22379) (if (g$745$14332 g$745$22379) (begin (quote #f) ((lambda (g$745$22381) (if g$745$22381 (begin (quote #f) ((lambda (g$745$22383) (if g$745$22383 (begin (quote #f) (append g$745$22381 g$745$22383)) (quote #f))) ((lambda (g$745$22385) (if (g$745$14332 g$745$22385) (begin (quote #f) ((lambda (g$745$22387) (if g$745$22387 (begin (quote #f) ((lambda (g$745$22389) (if g$745$22389 (begin (quote #f) (append g$745$22387 g$745$22389)) (quote #f))) ((letrec ((g$745$22391 (lambda (g$745$22393) (if (g$745$14332 g$745$22393) ((lambda (g$745$22395) (if g$745$22395 (begin (quote #f) ((lambda (g$745$22397) (if g$745$22397 (begin (quote #f) (map cons g$745$22395 g$745$22397)) (quote #f))) (g$745$22391 (g$745$14344 g$745$22393)))) (quote #f))) ((lambda (g$745$22399) (list g$745$22399)) (g$745$14340 g$745$22393))) (if (g$745$14336 g$745$22393) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$22391) (g$745$14344 g$745$22385)))) (quote #f))) ((letrec ((g$745$22401 (lambda (g$745$22403) (if (g$745$14332 g$745$22403) ((lambda (g$745$22405) (if g$745$22405 (begin (quote #f) ((lambda (g$745$22407) (if g$745$22407 (begin (quote #f) (map cons g$745$22405 g$745$22407)) (quote #f))) (g$745$22401 (g$745$14344 g$745$22403)))) (quote #f))) ((lambda (g$745$22409) (list g$745$22409)) (g$745$14340 g$745$22403))) (if (g$745$14336 g$745$22403) (list (begin (quote export*) (quote ()))) (quote #f)))))) g$745$22401) (g$745$14340 g$745$22385)))) (quote #f))) (g$745$14344 g$745$22379)))) (quote #f))) ((lambda (g$745$22411) (list g$745$22411)) (g$745$14340 g$745$22379)))) (quote #f))) (g$745$14344 g$745$22373)))) (quote #f))) ((lambda (g$745$22413) (quote ())) (g$745$14340 g$745$22373)))) (quote #f))) g$745$22357))) g$745$22353))) ((lambda (g$745$22423) (if (g$745$14332 g$745$22423) (begin (quote #f) ((lambda (g$745$22425) (if g$745$22425 (begin (quote #f) ((lambda (g$745$22427) (if g$745$22427 (begin (quote #f) (append g$745$22425 g$745$22427)) (quote #f))) ((lambda (g$745$22429) (if (g$745$14332 g$745$22429) (begin (quote #f) ((lambda (g$745$22431) (if g$745$22431 (begin (quote #f) ((lambda (g$745$22433) (if g$745$22433 (begin (quote #f) (append g$745$22431 g$745$22433)) (quote #f))) ((letrec ((g$745$22435 (lambda (g$745$22437) (if (g$745$14332 g$745$22437) ((lambda (g$745$22439) (if g$745$22439 (begin (quote #f) ((lambda (g$745$22441) (if g$745$22441 (begin (quote #f) (map cons g$745$22439 g$745$22441)) (quote #f))) (g$745$22435 (g$745$14344 g$745$22437)))) (quote #f))) ((lambda (g$745$22443) (list g$745$22443)) (g$745$14340 g$745$22437))) (if (g$745$14336 g$745$22437) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$22435) (g$745$14344 g$745$22429)))) (quote #f))) ((letrec ((g$745$22445 (lambda (g$745$22447) (if (g$745$14332 g$745$22447) ((lambda (g$745$22449) (if g$745$22449 (begin (quote #f) ((lambda (g$745$22451) (if g$745$22451 (begin (quote #f) (map cons g$745$22449 g$745$22451)) (quote #f))) (g$745$22445 (g$745$14344 g$745$22447)))) (quote #f))) ((lambda (g$745$22453) (list g$745$22453)) (g$745$14340 g$745$22447))) (if (g$745$14336 g$745$22447) (list (begin (quote export*) (quote ()))) (quote #f)))))) g$745$22445) (g$745$14340 g$745$22429)))) (quote #f))) (g$745$14344 g$745$22423)))) (quote #f))) ((lambda (g$745$22455) (quote ())) (g$745$14340 g$745$22423)))) (quote #f))) g$745$22353))) g$745$22351))) (set! g$745$14913 (lambda (g$745$22463 g$745$22464 g$745$22465 g$745$22466 g$745$22467 g$745$22468 g$745$22469) (call-with-values (lambda () (g$745$14911 g$745$22463)) (lambda (g$745$22473 g$745$22474 g$745$22475) ((lambda (g$745$22477) ((lambda (g$745$22479) ((lambda () (call-with-values (lambda () (g$745$14915 g$745$22479 g$745$22464 g$745$22465 g$745$22466 g$745$22467 g$745$22468 g$745$22469 g$745$22477 (quote #f))) (lambda (g$745$22487 g$745$22488 g$745$22489 g$745$22490 g$745$22491 g$745$22492 g$745$22493) ((lambda (g$745$22496 g$745$22497) (if (not g$745$22473) (values g$745$22490 g$745$22491 g$745$22474 g$745$22496 g$745$22488 g$745$22489 g$745$22497 g$745$22493) ((lambda (g$745$22500 g$745$22501) (values g$745$22490 g$745$22491 (list g$745$22473) (list g$745$22500) (cons (cons g$745$22500 (cons (quote $module) g$745$22501)) g$745$22488) (cons (cons g$745$22500 (cons (quote $module) g$745$22501)) g$745$22489) g$745$22497 g$745$22493)) (g$745$14260 (quote module)) (cons g$745$22474 g$745$22496)))) (map (lambda (g$745$22503) ((lambda (g$745$22505) (if g$745$22505 g$745$22505 (begin (quote #f) (error (quote expander) (quote "cannot find module export") (g$745$14364 g$745$22503 (quote ())))))) (g$745$14368 (g$745$14322 (g$745$14348 g$745$22503) (g$745$14302 g$745$22503) (list g$745$22477))))) g$745$22474) (cons g$745$22487 g$745$22492))))))) (map (lambda (g$745$22507) (g$745$14326 g$745$22477 g$745$22507)) (g$745$14342 g$745$22475)))) (g$745$14283)))))) (set! g$745$14915 (lambda (g$745$22517 g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22523 g$745$22524 g$745$22525) (if (null? g$745$22517) (values g$745$22517 g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22523) ((lambda (g$745$22527) (call-with-values (lambda () (g$745$14378 g$745$22527 g$745$22518)) (lambda (g$745$22531 g$745$22532 g$745$22533) ((lambda (g$745$22535) ((lambda (g$745$22536) (if (memv g$745$22536 (quote (define))) (call-with-values (lambda () (g$745$14771 g$745$22527)) (lambda (g$745$22724 g$745$22725) (begin (if (g$745$14360 g$745$22724 g$745$22535) (error (quote expander) (quote "cannot redefine keyword") (g$745$14364 g$745$22527 (quote ()))) (void)) ((lambda (g$745$22728 g$745$22729) (begin (g$745$14285 g$745$22524 g$745$22724 g$745$22729) (g$745$14915 (cdr g$745$22517) (g$745$14777 g$745$22729 g$745$22728 g$745$22518) g$745$22519 (cons g$745$22728 g$745$22520) (cons g$745$22725 g$745$22521) g$745$22522 g$745$22535 g$745$22524 g$745$22525))) (g$745$14256 g$745$22724) (g$745$14260 g$745$22724))))) (if (memv g$745$22536 (quote (define-syntax))) (call-with-values (lambda () (g$745$14773 g$745$22527)) (lambda (g$745$22714 g$745$22715) (begin (if (g$745$14360 g$745$22714 g$745$22535) (error (quote expander) (quote "cannot redefine keyword") (g$745$14364 g$745$22527 (quote ()))) (void)) ((lambda (g$745$22718 g$745$22719) (begin (g$745$14285 g$745$22524 g$745$22714 g$745$22718) ((lambda (g$745$22721) (g$745$14915 (cdr g$745$22517) (cons (cons g$745$22718 g$745$22721) g$745$22518) (cons (cons g$745$22718 g$745$22721) g$745$22519) g$745$22520 g$745$22521 g$745$22522 g$745$22535 g$745$22524 g$745$22525)) (g$745$14409 g$745$22719)))) (g$745$14260 g$745$22714) (g$745$14927 g$745$22715 g$745$22519))))) (if (memv g$745$22536 (quote (let-syntax letrec-syntax))) ((lambda (g$745$22637) ((lambda (g$745$22639) (if (if g$745$22639 (begin (quote #f) (apply (lambda (g$745$22659 g$745$22660 g$745$22661) (if (g$745$14356 g$745$22659) (void) (error (quote expander) (quote "invalid identifiers") (g$745$14364 g$745$22527 (quote ()))))) g$745$22639)) (quote #f)) (apply (lambda (g$745$22643 g$745$22644 g$745$22645) ((lambda (g$745$22647) ((lambda (g$745$22649) ((lambda (g$745$22651) ((lambda () (g$745$14915 (append (map (lambda (g$745$22653) (g$745$14326 g$745$22649 g$745$22653)) g$745$22645) (cdr g$745$22517)) (append (map cons g$745$22647 g$745$22651) g$745$22518) (append (map cons g$745$22647 g$745$22651) g$745$22519) g$745$22520 g$745$22521 g$745$22522 g$745$22535 g$745$22524 g$745$22525)))) (map (lambda (g$745$22655) (g$745$14409 (g$745$14927 (if (eq? g$745$22531 (quote let-syntax)) g$745$22655 (g$745$14326 g$745$22649 g$745$22655)) g$745$22519))) g$745$22644))) (g$745$14293 g$745$22643 g$745$22647))) (map g$745$14260 g$745$22643))) g$745$22639) (error (quote expander) (quote #3#) (g$745$14364 g$745$22637 (quote ()))))) ((lambda (g$745$22663) (if (g$745$14332 g$745$22663) (begin (quote #f) ((lambda (g$745$22665) (if g$745$22665 (begin (quote #f) ((lambda (g$745$22667) (if g$745$22667 (begin (quote #f) (append g$745$22665 g$745$22667)) (quote #f))) ((lambda (g$745$22669) (if (g$745$14332 g$745$22669) (begin (quote #f) ((lambda (g$745$22671) (if g$745$22671 (begin (quote #f) ((lambda (g$745$22673) (if g$745$22673 (begin (quote #f) (append g$745$22671 g$745$22673)) (quote #f))) ((letrec ((g$745$22675 (lambda (g$745$22677) (if (g$745$14332 g$745$22677) ((lambda (g$745$22679) (if g$745$22679 (begin (quote #f) ((lambda (g$745$22681) (if g$745$22681 (begin (quote #f) (map cons g$745$22679 g$745$22681)) (quote #f))) (g$745$22675 (g$745$14344 g$745$22677)))) (quote #f))) ((lambda (g$745$22683) (list g$745$22683)) (g$745$14340 g$745$22677))) (if (g$745$14336 g$745$22677) (list (begin (quote xbody*) (quote ()))) (quote #f)))))) g$745$22675) (g$745$14344 g$745$22669)))) (quote #f))) ((letrec ((g$745$22685 (lambda (g$745$22687) (if (g$745$14332 g$745$22687) ((lambda (g$745$22689) (if g$745$22689 (begin (quote #f) ((lambda (g$745$22691) (if g$745$22691 (begin (quote #f) (map cons g$745$22689 g$745$22691)) (quote #f))) (g$745$22685 (g$745$14344 g$745$22687)))) (quote #f))) ((lambda (g$745$22693) (if (g$745$14332 g$745$22693) (begin (quote #f) ((lambda (g$745$22695) (if g$745$22695 (begin (quote #f) ((lambda (g$745$22697) (if g$745$22697 (begin (quote #f) (append g$745$22695 g$745$22697)) (quote #f))) ((lambda (g$745$22699) (if (g$745$14332 g$745$22699) (begin (quote #f) ((lambda (g$745$22701) (if g$745$22701 (begin (quote #f) ((lambda (g$745$22703) (if g$745$22703 (begin (quote #f) (append g$745$22701 g$745$22703)) (quote #f))) ((lambda (g$745$22705) (if (equal? (g$745$14366 g$745$22705) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$22699)))) (quote #f))) ((lambda (g$745$22707) (list g$745$22707)) (g$745$14340 g$745$22699)))) (quote #f))) (g$745$14344 g$745$22693)))) (quote #f))) ((lambda (g$745$22709) (list g$745$22709)) (g$745$14340 g$745$22693)))) (quote #f))) (g$745$14340 g$745$22687))) (if (g$745$14336 g$745$22687) (list (begin (quote xlhs*) (quote ())) (begin (quote xrhs*) (quote ()))) (quote #f)))))) g$745$22685) (g$745$14340 g$745$22669)))) (quote #f))) (g$745$14344 g$745$22663)))) (quote #f))) ((lambda (g$745$22711) (quote ())) (g$745$14340 g$745$22663)))) (quote #f))) g$745$22637))) g$745$22527) (if (memv g$745$22536 (quote (begin))) ((lambda (g$745$22611) ((lambda (g$745$22613) (if (if g$745$22613 (begin (quote #f) (apply (lambda (g$745$22617) (quote #t)) g$745$22613)) (quote #f)) (apply (lambda (g$745$22615) (g$745$14915 (append g$745$22615 (cdr g$745$22517)) g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22535 g$745$22524 g$745$22525)) g$745$22613) (error (quote expander) (quote #3#) (g$745$14364 g$745$22611 (quote ()))))) ((lambda (g$745$22619) (if (g$745$14332 g$745$22619) (begin (quote #f) ((lambda (g$745$22621) (if g$745$22621 (begin (quote #f) ((lambda (g$745$22623) (if g$745$22623 (begin (quote #f) (append g$745$22621 g$745$22623)) (quote #f))) ((letrec ((g$745$22625 (lambda (g$745$22627) (if (g$745$14332 g$745$22627) ((lambda (g$745$22629) (if g$745$22629 (begin (quote #f) ((lambda (g$745$22631) (if g$745$22631 (begin (quote #f) (map cons g$745$22629 g$745$22631)) (quote #f))) (g$745$22625 (g$745$14344 g$745$22627)))) (quote #f))) ((lambda (g$745$22633) (list g$745$22633)) (g$745$14340 g$745$22627))) (if (g$745$14336 g$745$22627) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$22625) (g$745$14344 g$745$22619)))) (quote #f))) ((lambda (g$745$22635) (quote ())) (g$745$14340 g$745$22619)))) (quote #f))) g$745$22611))) g$745$22527) (if (memv g$745$22536 (quote (global-macro global-macro!))) (g$745$14915 (cons (g$745$14326 g$745$22524 (g$745$14887 g$745$22532 g$745$22527)) (cdr g$745$22517)) g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22535 g$745$22524 g$745$22525) (if (memv g$745$22536 (quote (local-macro local-macro!))) (g$745$14915 (cons (g$745$14326 g$745$22524 (g$745$14885 g$745$22532 g$745$22527)) (cdr g$745$22517)) g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22535 g$745$22524 g$745$22525) (if (memv g$745$22536 (quote (macro macro!))) (g$745$14915 (cons (g$745$14326 g$745$22524 (g$745$14883 g$745$22532 g$745$22527)) (cdr g$745$22517)) g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22535 g$745$22524 g$745$22525) (if (memv g$745$22536 (quote (module))) (call-with-values (lambda () (g$745$14913 g$745$22527 g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22535)) (lambda (g$745$22598 g$745$22599 g$745$22600 g$745$22601 g$745$22602 g$745$22603 g$745$22604 g$745$22605) (begin (for-each (lambda (g$745$22608 g$745$22609) (g$745$14285 g$745$22524 g$745$22608 g$745$22609)) g$745$22600 g$745$22601) (g$745$14915 (cdr g$745$22517) g$745$22602 g$745$22603 g$745$22598 g$745$22599 g$745$22604 g$745$22605 g$745$22524 g$745$22525)))) (if (memv g$745$22536 (quote (import))) (begin ((lambda () ((lambda (g$745$22538) (begin (set! g$745$22538 (lambda (g$745$22549 g$745$22550) ((lambda (g$745$22552) ((lambda (g$745$22554) (if (if g$745$22554 (begin (quote #f) (apply (lambda (g$745$22571) (g$745$14346 g$745$22571)) g$745$22554)) (quote #f)) (apply (lambda (g$745$22556) (call-with-values (lambda () (g$745$14378 g$745$22556 g$745$22550)) (lambda (g$745$22560 g$745$22561 g$745$22562) ((lambda (g$745$22563) (if (memv g$745$22563 (quote ($module))) ((lambda (g$745$22565) ((lambda (g$745$22568 g$745$22569) (values g$745$22568 g$745$22569)) (car g$745$22565) (cdr g$745$22565))) g$745$22561) (error (quote expander) (quote "invalid import") (g$745$14364 g$745$22549 (quote ()))))) g$745$22560)))) g$745$22554) (error (quote expander) (quote #3#) (g$745$14364 g$745$22552 (quote ()))))) ((lambda (g$745$22573) (if (g$745$14332 g$745$22573) (begin (quote #f) ((lambda (g$745$22575) (if g$745$22575 (begin (quote #f) ((lambda (g$745$22577) (if g$745$22577 (begin (quote #f) (append g$745$22575 g$745$22577)) (quote #f))) ((lambda (g$745$22579) (if (g$745$14332 g$745$22579) (begin (quote #f) ((lambda (g$745$22581) (if g$745$22581 (begin (quote #f) ((lambda (g$745$22583) (if g$745$22583 (begin (quote #f) (append g$745$22581 g$745$22583)) (quote #f))) ((lambda (g$745$22585) (if (equal? (g$745$14366 g$745$22585) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$22579)))) (quote #f))) ((lambda (g$745$22587) (list g$745$22587)) (g$745$14340 g$745$22579)))) (quote #f))) (g$745$14344 g$745$22573)))) (quote #f))) ((lambda (g$745$22589) (quote ())) (g$745$14340 g$745$22573)))) (quote #f))) g$745$22552))) g$745$22549))) (call-with-values (lambda () (g$745$22538 g$745$22527 g$745$22518)) (lambda (g$745$22541 g$745$22542) (for-each (lambda (g$745$22545 g$745$22546) (g$745$14285 g$745$22524 g$745$22545 g$745$22546)) g$745$22541 g$745$22542))))) (quote #f)))) (g$745$14915 (cdr g$745$22517) g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22535 g$745$22524 g$745$22525)) (if g$745$22525 (g$745$14915 (cdr g$745$22517) g$745$22518 g$745$22519 (cons (g$745$14256 (quote dummy)) g$745$22520) (cons (cons (quote top-expr) g$745$22527) g$745$22521) g$745$22522 g$745$22535 g$745$22524 g$745$22525) (values g$745$22517 g$745$22518 g$745$22519 g$745$22520 g$745$22521 g$745$22522 g$745$22535)))))))))))) g$745$22531)) (if (g$745$14346 g$745$22533) (cons g$745$22533 g$745$22523) g$745$22523))))) (car g$745$22517))))) (set! g$745$14917 (lambda (g$745$22733 g$745$22734 g$745$22735) (begin (g$745$13886 (g$745$15008) g$745$22733 g$745$22734) (g$745$13885 (g$745$15008) g$745$22734 g$745$22735)))) (set! g$745$14919 (lambda (g$745$22738 g$745$22739) (g$745$14921 g$745$22738 g$745$22739))) (set! g$745$14921 (lambda (g$745$22742 g$745$22743) ((lambda (g$745$22745) ((lambda (g$745$22747) ((lambda (g$745$22748) (if (memv g$745$22748 (quote (global))) ((lambda (g$745$22750) ((lambda (g$745$22753 g$745$22754) (if (eq? g$745$22753 (g$745$15008)) g$745$22754 (error (quote expander) (quote "cannot modify imported binding") (g$745$14364 g$745$22743 (quote ()))))) (car g$745$22750) (cdr g$745$22750))) (g$745$14376 g$745$22747)) (error (quote expander) (quote "cannot modify binding in") (g$745$14364 g$745$22743 (quote ()))))) (g$745$14374 g$745$22747))) (g$745$13884 g$745$22745))) (g$745$14368 g$745$22742)))) (set! g$745$14923 (lambda (g$745$22756) ((lambda (g$745$22758) ((lambda (g$745$22760) (if (if g$745$22760 (begin (quote #f) (apply (lambda (g$745$22771 g$745$22772) (g$745$14346 g$745$22771)) g$745$22760)) (quote #f)) (apply (lambda (g$745$22763 g$745$22764) ((lambda (g$745$22766) ((lambda (g$745$22768) (values g$745$22766 g$745$22768)) (g$745$14893 g$745$22764 (quote ()) (quote ())))) (g$745$14921 g$745$22763 g$745$22756))) g$745$22760) (error (quote expander) (quote #3#) (g$745$14364 g$745$22758 (quote ()))))) ((lambda (g$745$22774) (if (g$745$14332 g$745$22774) (begin (quote #f) ((lambda (g$745$22776) (if g$745$22776 (begin (quote #f) ((lambda (g$745$22778) (if g$745$22778 (begin (quote #f) (append g$745$22776 g$745$22778)) (quote #f))) ((lambda (g$745$22780) (if (g$745$14332 g$745$22780) (begin (quote #f) ((lambda (g$745$22782) (if g$745$22782 (begin (quote #f) ((lambda (g$745$22784) (if g$745$22784 (begin (quote #f) (append g$745$22782 g$745$22784)) (quote #f))) ((lambda (g$745$22786) (if (g$745$14332 g$745$22786) (begin (quote #f) ((lambda (g$745$22788) (if g$745$22788 (begin (quote #f) ((lambda (g$745$22790) (if g$745$22790 (begin (quote #f) (append g$745$22788 g$745$22790)) (quote #f))) ((lambda (g$745$22792) (if (equal? (g$745$14366 g$745$22792) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$22786)))) (quote #f))) ((lambda (g$745$22794) (list g$745$22794)) (g$745$14340 g$745$22786)))) (quote #f))) (g$745$14344 g$745$22780)))) (quote #f))) ((lambda (g$745$22796) (list g$745$22796)) (g$745$14340 g$745$22780)))) (quote #f))) (g$745$14344 g$745$22774)))) (quote #f))) ((lambda (g$745$22798) (quote ())) (g$745$14340 g$745$22774)))) (quote #f))) g$745$22758))) g$745$22756))) (set! g$745$14925 (lambda (g$745$22801 g$745$22802) (if (null? g$745$22801) g$745$22802 ((lambda (g$745$22804) (call-with-values (lambda () (g$745$14378 g$745$22804 (quote ()))) (lambda (g$745$22808 g$745$22809 g$745$22810) ((lambda (g$745$22811) (if (memv g$745$22811 (quote (define))) (call-with-values (lambda () (g$745$14771 g$745$22804)) (lambda (g$745$22854 g$745$22855) ((lambda (g$745$22857) ((lambda (g$745$22859) (g$745$14925 (cdr g$745$22801) (cons (cons g$745$22857 g$745$22859) g$745$22802))) (g$745$14901 g$745$22855 (quote ()) (quote ())))) (g$745$14921 g$745$22854 g$745$22804)))) (if (memv g$745$22811 (quote (set!))) (call-with-values (lambda () (g$745$14923 g$745$22804)) (lambda (g$745$22850 g$745$22851) (g$745$14925 (cdr g$745$22801) (cons (cons g$745$22850 g$745$22851) g$745$22802)))) (if (memv g$745$22811 (quote (define-syntax))) (call-with-values (lambda () (g$745$14773 g$745$22804)) (lambda (g$745$22840 g$745$22841) ((lambda (g$745$22843) ((lambda (g$745$22845) ((lambda (g$745$22847) (begin (g$745$14917 (g$745$14348 g$745$22840) g$745$22843 g$745$22847) (g$745$14925 (cdr g$745$22801) g$745$22802))) (g$745$14409 g$745$22845))) (g$745$14927 g$745$22841 (quote ())))) (g$745$14919 g$745$22840 g$745$22804)))) (if (memv g$745$22811 (quote (let-syntax letrec-syntax))) (error (quote chi-top*) (quote "not supported yet at top level") g$745$22808) (if (memv g$745$22811 (quote (begin))) ((lambda (g$745$22813) ((lambda (g$745$22815) (if (if g$745$22815 (begin (quote #f) (apply (lambda (g$745$22819) (quote #t)) g$745$22815)) (quote #f)) (apply (lambda (g$745$22817) (g$745$14925 (append g$745$22817 (cdr g$745$22801)) g$745$22802)) g$745$22815) (error (quote expander) (quote #3#) (g$745$14364 g$745$22813 (quote ()))))) ((lambda (g$745$22821) (if (g$745$14332 g$745$22821) (begin (quote #f) ((lambda (g$745$22823) (if g$745$22823 (begin (quote #f) ((lambda (g$745$22825) (if g$745$22825 (begin (quote #f) (append g$745$22823 g$745$22825)) (quote #f))) ((letrec ((g$745$22827 (lambda (g$745$22829) (if (g$745$14332 g$745$22829) ((lambda (g$745$22831) (if g$745$22831 (begin (quote #f) ((lambda (g$745$22833) (if g$745$22833 (begin (quote #f) (map cons g$745$22831 g$745$22833)) (quote #f))) (g$745$22827 (g$745$14344 g$745$22829)))) (quote #f))) ((lambda (g$745$22835) (list g$745$22835)) (g$745$14340 g$745$22829))) (if (g$745$14336 g$745$22829) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$22827) (g$745$14344 g$745$22821)))) (quote #f))) ((lambda (g$745$22837) (quote ())) (g$745$14340 g$745$22821)))) (quote #f))) g$745$22813))) g$745$22804) (if (memv g$745$22811 (quote (global-macro global-macro!))) (g$745$14925 (cons (g$745$14887 g$745$22809 g$745$22804) (cdr g$745$22801)) g$745$22802) (if (memv g$745$22811 (quote (local-macro local-macro!))) (g$745$14925 (cons (g$745$14885 g$745$22809 g$745$22804) (cdr g$745$22801)) g$745$22802) (if (memv g$745$22811 (quote (macro macro!))) (g$745$14925 (cons (g$745$14883 g$745$22809 g$745$22804) (cdr g$745$22801)) g$745$22802) (g$745$14925 (cdr g$745$22801) (cons (cons (quote #f) (g$745$14893 g$745$22804 (quote ()) (quote ()))) g$745$22802))))))))))) g$745$22808)))) (car g$745$22801))))) (set! g$745$14927 (lambda (g$745$22862 g$745$22863) ((lambda (g$745$22865) ((lambda (g$745$22867) (begin (for-each ((lambda (g$745$22869) (lambda (g$745$22871) (begin (g$745$13883 g$745$22871) (g$745$22869 g$745$22871)))) (g$745$14943)) (g$745$22865)) g$745$22867)) ((lambda (g$745$22880 g$745$22881 g$745$22882 g$745$22883) ((lambda (g$745$22885) (dynamic-wind g$745$22885 (lambda () (g$745$14893 g$745$22862 g$745$22863 g$745$22863)) g$745$22885)) (lambda () (begin ((lambda (g$745$22887) (begin (g$745$22880 g$745$22882) (set! g$745$22882 g$745$22887))) (g$745$22880)) ((lambda (g$745$22889) (begin (g$745$22881 g$745$22883) (set! g$745$22883 g$745$22889))) (g$745$22881)))))) g$745$14941 g$745$14943 g$745$22865 (lambda (g$745$22891) (values))))) (g$745$14939)))) (set! g$745$14929 (lambda (g$745$22893) (letrec ((g$745$22895 (lambda (g$745$22899 g$745$22900 g$745$22901) (if (null? g$745$22899) (begin ((lambda (g$745$22963) (if (g$745$14356 g$745$22963) (void) (error (quote expander) (quote "invalid exports") (g$745$14907 g$745$22963)))) (map (lambda (g$745$22965) (g$745$14322 g$745$22965 g$745$14252 (quote ()))) g$745$22901)) (values g$745$22900 g$745$22901)) ((lambda (g$745$22903) ((lambda (g$745$22905) (if (if g$745$22905 (begin (quote #f) (apply (lambda (g$745$22925 g$745$22926 g$745$22927) (quote #t)) g$745$22905)) (quote #f)) (apply (lambda (g$745$22919 g$745$22920 g$745$22921) (begin (if (if (eq? g$745$22919 (quote rename)) (if (for-all symbol? g$745$22920) (begin (quote #f) (for-all symbol? g$745$22921)) (quote #f)) (quote #f)) (void) (error (quote expander) (quote "invalid export specifier") (car g$745$22899))) (g$745$22895 (cdr g$745$22899) (append g$745$22920 g$745$22900) (append g$745$22921 g$745$22901)))) g$745$22905) ((lambda (g$745$22907) ((lambda (g$745$22909) (if (if g$745$22909 (begin (quote #f) (apply (lambda (g$745$22913) (quote #t)) g$745$22909)) (quote #f)) (apply (lambda (g$745$22911) (begin (if (symbol? g$745$22911) (void) (error (quote expander) (quote "invalid export") g$745$22911)) (g$745$22895 (cdr g$745$22899) (cons g$745$22911 g$745$22900) (cons g$745$22911 g$745$22901)))) g$745$22909) (error (quote expander) (quote #3#) (g$745$14364 g$745$22907 (quote ()))))) ((lambda (g$745$22915) (list g$745$22915)) g$745$22907))) g$745$22903))) ((lambda (g$745$22929) (if (g$745$14332 g$745$22929) (begin (quote #f) ((lambda (g$745$22931) (if g$745$22931 (begin (quote #f) ((lambda (g$745$22933) (if g$745$22933 (begin (quote #f) (append g$745$22931 g$745$22933)) (quote #f))) ((letrec ((g$745$22935 (lambda (g$745$22937) (if (g$745$14332 g$745$22937) ((lambda (g$745$22939) (if g$745$22939 (begin (quote #f) ((lambda (g$745$22941) (if g$745$22941 (begin (quote #f) (map cons g$745$22939 g$745$22941)) (quote #f))) (g$745$22935 (g$745$14344 g$745$22937)))) (quote #f))) ((lambda (g$745$22943) (if (g$745$14332 g$745$22943) (begin (quote #f) ((lambda (g$745$22945) (if g$745$22945 (begin (quote #f) ((lambda (g$745$22947) (if g$745$22947 (begin (quote #f) (append g$745$22945 g$745$22947)) (quote #f))) ((lambda (g$745$22949) (if (g$745$14332 g$745$22949) (begin (quote #f) ((lambda (g$745$22951) (if g$745$22951 (begin (quote #f) ((lambda (g$745$22953) (if g$745$22953 (begin (quote #f) (append g$745$22951 g$745$22953)) (quote #f))) ((lambda (g$745$22955) (if (equal? (g$745$14366 g$745$22955) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$22949)))) (quote #f))) ((lambda (g$745$22957) (list g$745$22957)) (g$745$14340 g$745$22949)))) (quote #f))) (g$745$14344 g$745$22943)))) (quote #f))) ((lambda (g$745$22959) (list g$745$22959)) (g$745$14340 g$745$22943)))) (quote #f))) (g$745$14340 g$745$22937))) (if (g$745$14336 g$745$22937) (list (begin (quote i*) (quote ())) (begin (quote e*) (quote ()))) (quote #f)))))) g$745$22935) (g$745$14344 g$745$22929)))) (quote #f))) ((lambda (g$745$22961) (list g$745$22961)) (g$745$14340 g$745$22929)))) (quote #f))) g$745$22903))) (car g$745$22899)))))) (g$745$22895 g$745$22893 (quote ()) (quote ()))))) (set! g$745$14931 (lambda (g$745$22967) ((lambda (g$745$22969) (begin (set! g$745$22969 (lambda (g$745$22975) ((lambda (g$745$22977) ((lambda (g$745$22979) (if (if g$745$22979 (begin (quote #f) (apply (lambda (g$745$23021) (for-all (lambda (g$745$23023) (if (integer? g$745$23023) (begin (quote #f) (exact? g$745$23023)) (quote #f))) g$745$23021)) g$745$22979)) (quote #f)) (apply (lambda (g$745$23019) (values (quote ()) g$745$23019)) g$745$22979) ((lambda (g$745$22981) ((lambda (g$745$22983) (if (if g$745$22983 (begin (quote #f) (apply (lambda (g$745$23006 g$745$23007) (symbol? g$745$23006)) g$745$22983)) (quote #f)) (apply (lambda (g$745$22998 g$745$22999) (call-with-values (lambda () (g$745$22969 g$745$22999)) (lambda (g$745$23002 g$745$23003) (values (cons g$745$22998 g$745$23002) g$745$23003)))) g$745$22983) ((lambda (g$745$22985) ((lambda (g$745$22987) (if (if g$745$22987 (begin (quote #f) (apply (lambda () (quote #t)) g$745$22987)) (quote #f)) (apply (lambda () (values (quote ()) (quote ()))) g$745$22987) ((lambda (g$745$22989) ((lambda (g$745$22991) (if (if g$745$22991 (begin (quote #f) (apply (lambda () (quote #t)) g$745$22991)) (quote #f)) (apply (lambda () (error (quote expander) (quote "invalid library name") (g$745$14364 g$745$22967 (quote ())))) g$745$22991) (error (quote expander) (quote #3#) (g$745$14364 g$745$22989 (quote ()))))) ((lambda (g$745$22993) (quote ())) g$745$22989))) g$745$22985))) ((lambda (g$745$22995) (if (equal? (g$745$14366 g$745$22995) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$22985))) g$745$22981))) ((lambda (g$745$23009) (if (g$745$14332 g$745$23009) (begin (quote #f) ((lambda (g$745$23011) (if g$745$23011 (begin (quote #f) ((lambda (g$745$23013) (if g$745$23013 (begin (quote #f) (append g$745$23011 g$745$23013)) (quote #f))) ((lambda (g$745$23015) (list g$745$23015)) (g$745$14344 g$745$23009)))) (quote #f))) ((lambda (g$745$23017) (list g$745$23017)) (g$745$14340 g$745$23009)))) (quote #f))) g$745$22981))) g$745$22977))) ((lambda (g$745$23025) (if (g$745$14332 g$745$23025) (begin (quote #f) ((lambda (g$745$23027) (if g$745$23027 (begin (quote #f) ((lambda (g$745$23029) (if g$745$23029 (begin (quote #f) (append g$745$23027 g$745$23029)) (quote #f))) ((lambda (g$745$23031) (if (equal? (g$745$14366 g$745$23031) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23025)))) (quote #f))) ((letrec ((g$745$23033 (lambda (g$745$23035) (if (g$745$14332 g$745$23035) ((lambda (g$745$23037) (if g$745$23037 (begin (quote #f) ((lambda (g$745$23039) (if g$745$23039 (begin (quote #f) (map cons g$745$23037 g$745$23039)) (quote #f))) (g$745$23033 (g$745$14344 g$745$23035)))) (quote #f))) ((lambda (g$745$23041) (list g$745$23041)) (g$745$14340 g$745$23035))) (if (g$745$14336 g$745$23035) (list (begin (quote v*) (quote ()))) (quote #f)))))) g$745$23033) (g$745$14340 g$745$23025)))) (quote #f))) g$745$22977))) g$745$22975))) (call-with-values (lambda () (g$745$22969 g$745$22967)) (lambda (g$745$22972 g$745$22973) (begin (if (null? g$745$22972) (error (quote expander) (quote "empty library name") (g$745$14364 g$745$22967 (quote ()))) (void)) (values g$745$22972 g$745$22973)))))) (quote #f)))) (set! g$745$14933 (lambda (g$745$23043) ((lambda (g$745$23045) ((lambda (g$745$23047) (if (if g$745$23047 (begin (quote #f) (apply (lambda (g$745$23075 g$745$23076 g$745$23077 g$745$23078 g$745$23079 g$745$23080 g$745$23081) (if (eq? g$745$23077 (quote export)) (if (eq? g$745$23079 (quote import)) (begin (quote #f) (eq? g$745$23075 (quote library))) (quote #f)) (quote #f))) g$745$23047)) (quote #f)) (apply (lambda (g$745$23061 g$745$23062 g$745$23063 g$745$23064 g$745$23065 g$745$23066 g$745$23067) (values g$745$23062 g$745$23064 g$745$23066 g$745$23067)) g$745$23047) ((lambda (g$745$23049) ((lambda (g$745$23051) (if (if g$745$23051 (begin (quote #f) (apply (lambda () (quote #t)) g$745$23051)) (quote #f)) (apply (lambda () (error (quote expander) (quote "malformed library") (g$745$14364 g$745$23043 (quote ())))) g$745$23051) (error (quote expander) (quote #3#) (g$745$14364 g$745$23049 (quote ()))))) ((lambda (g$745$23053) (quote ())) g$745$23049))) g$745$23045))) ((lambda (g$745$23083) (if (g$745$14332 g$745$23083) (begin (quote #f) ((lambda (g$745$23085) (if g$745$23085 (begin (quote #f) ((lambda (g$745$23087) (if g$745$23087 (begin (quote #f) (append g$745$23085 g$745$23087)) (quote #f))) ((lambda (g$745$23089) (if (g$745$14332 g$745$23089) (begin (quote #f) ((lambda (g$745$23091) (if g$745$23091 (begin (quote #f) ((lambda (g$745$23093) (if g$745$23093 (begin (quote #f) (append g$745$23091 g$745$23093)) (quote #f))) ((lambda (g$745$23095) (if (g$745$14332 g$745$23095) (begin (quote #f) ((lambda (g$745$23097) (if g$745$23097 (begin (quote #f) ((lambda (g$745$23099) (if g$745$23099 (begin (quote #f) (append g$745$23097 g$745$23099)) (quote #f))) ((lambda (g$745$23101) (if (g$745$14332 g$745$23101) (begin (quote #f) ((lambda (g$745$23103) (if g$745$23103 (begin (quote #f) ((lambda (g$745$23105) (if g$745$23105 (begin (quote #f) (append g$745$23103 g$745$23105)) (quote #f))) ((letrec ((g$745$23107 (lambda (g$745$23109) (if (g$745$14332 g$745$23109) ((lambda (g$745$23111) (if g$745$23111 (begin (quote #f) ((lambda (g$745$23113) (if g$745$23113 (begin (quote #f) (map cons g$745$23111 g$745$23113)) (quote #f))) (g$745$23107 (g$745$14344 g$745$23109)))) (quote #f))) ((lambda (g$745$23115) (list g$745$23115)) (g$745$14340 g$745$23109))) (if (g$745$14336 g$745$23109) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$23107) (g$745$14344 g$745$23101)))) (quote #f))) ((lambda (g$745$23117) (if (g$745$14332 g$745$23117) (begin (quote #f) ((lambda (g$745$23119) (if g$745$23119 (begin (quote #f) ((lambda (g$745$23121) (if g$745$23121 (begin (quote #f) (append g$745$23119 g$745$23121)) (quote #f))) ((letrec ((g$745$23123 (lambda (g$745$23125) (if (g$745$14332 g$745$23125) ((lambda (g$745$23127) (if g$745$23127 (begin (quote #f) ((lambda (g$745$23129) (if g$745$23129 (begin (quote #f) (map cons g$745$23127 g$745$23129)) (quote #f))) (g$745$23123 (g$745$14344 g$745$23125)))) (quote #f))) ((lambda (g$745$23131) (list g$745$23131)) (g$745$14340 g$745$23125))) (if (g$745$14336 g$745$23125) (list (begin (quote imp*) (quote ()))) (quote #f)))))) g$745$23123) (g$745$14344 g$745$23117)))) (quote #f))) ((lambda (g$745$23133) (list g$745$23133)) (g$745$14340 g$745$23117)))) (quote #f))) (g$745$14340 g$745$23101)))) (quote #f))) (g$745$14344 g$745$23095)))) (quote #f))) ((lambda (g$745$23135) (if (g$745$14332 g$745$23135) (begin (quote #f) ((lambda (g$745$23137) (if g$745$23137 (begin (quote #f) ((lambda (g$745$23139) (if g$745$23139 (begin (quote #f) (append g$745$23137 g$745$23139)) (quote #f))) ((letrec ((g$745$23141 (lambda (g$745$23143) (if (g$745$14332 g$745$23143) ((lambda (g$745$23145) (if g$745$23145 (begin (quote #f) ((lambda (g$745$23147) (if g$745$23147 (begin (quote #f) (map cons g$745$23145 g$745$23147)) (quote #f))) (g$745$23141 (g$745$14344 g$745$23143)))) (quote #f))) ((lambda (g$745$23149) (list g$745$23149)) (g$745$14340 g$745$23143))) (if (g$745$14336 g$745$23143) (list (begin (quote exp*) (quote ()))) (quote #f)))))) g$745$23141) (g$745$14344 g$745$23135)))) (quote #f))) ((lambda (g$745$23151) (list g$745$23151)) (g$745$14340 g$745$23135)))) (quote #f))) (g$745$14340 g$745$23095)))) (quote #f))) (g$745$14344 g$745$23089)))) (quote #f))) ((letrec ((g$745$23153 (lambda (g$745$23155) (if (g$745$14332 g$745$23155) ((lambda (g$745$23157) (if g$745$23157 (begin (quote #f) ((lambda (g$745$23159) (if g$745$23159 (begin (quote #f) (map cons g$745$23157 g$745$23159)) (quote #f))) (g$745$23153 (g$745$14344 g$745$23155)))) (quote #f))) ((lambda (g$745$23161) (list g$745$23161)) (g$745$14340 g$745$23155))) (if (g$745$14336 g$745$23155) (list (begin (quote name*) (quote ()))) (quote #f)))))) g$745$23153) (g$745$14340 g$745$23089)))) (quote #f))) (g$745$14344 g$745$23083)))) (quote #f))) ((lambda (g$745$23163) (list g$745$23163)) (g$745$14340 g$745$23083)))) (quote #f))) g$745$23045))) g$745$23043))) (set! g$745$14935 (lambda (g$745$23165) ((lambda (g$745$23167 g$745$23169 g$745$23171 g$745$23173 g$745$23175 g$745$23177 g$745$23179 g$745$23181) (begin (set! g$745$23167 (g$745$14939)) (set! g$745$23169 (lambda (g$745$23944 g$745$23945) ((lambda (g$745$23947) (begin (set! g$745$23947 (lambda (g$745$23950 g$745$23951) ((lambda (g$745$23954 g$745$23955) ((lambda (g$745$23957) (if g$745$23957 ((lambda (g$745$23959) (if (eq? (cdr g$745$23959) g$745$23955) g$745$23951 (error (quote import) (quote "two imports with different bindings") g$745$23954))) g$745$23957) (cons g$745$23950 g$745$23951))) (assq g$745$23954 g$745$23951))) (car g$745$23950) (cdr g$745$23950)))) (if (null? g$745$23944) g$745$23945 (g$745$23947 (car g$745$23944) (g$745$23169 (cdr g$745$23944) g$745$23945))))) (quote #f)))) (set! g$745$23171 (lambda (g$745$23920 g$745$23921) ((lambda (g$745$23923) (begin (set! g$745$23923 (lambda (g$745$23934 g$745$23935) (if (null? g$745$23935) (error (quote import) (quote "cannot rename unbound identifier") g$745$23934) (if (eq? g$745$23934 (caar g$745$23935)) (values (cdar g$745$23935) (cdr g$745$23935)) ((lambda (g$745$23937) (call-with-values (lambda () (g$745$23923 g$745$23934 (cdr g$745$23935))) (lambda (g$745$23940 g$745$23941) (values g$745$23940 (cons g$745$23937 g$745$23941))))) (car g$745$23935)))))) (if (null? g$745$23920) (values (quote ()) g$745$23921) (call-with-values (lambda () (g$745$23923 (car g$745$23920) g$745$23921)) (lambda (g$745$23926 g$745$23927) (call-with-values (lambda () (g$745$23171 (cdr g$745$23920) g$745$23927)) (lambda (g$745$23930 g$745$23931) (values (cons g$745$23926 g$745$23930) g$745$23931)))))))) (quote #f)))) (set! g$745$23173 (lambda (g$745$23912 g$745$23913) (map (lambda (g$745$23915) ((lambda (g$745$23917) (if g$745$23917 (cdr g$745$23917) (error (quote import) (quote "cannot find identifier") g$745$23915))) (assq g$745$23915 g$745$23913))) g$745$23912))) (set! g$745$23175 (lambda (g$745$23904 g$745$23905) (letrec ((g$745$23907 (lambda (g$745$23909) (if (null? g$745$23909) (quote ()) (if (memq (caar g$745$23909) g$745$23904) (g$745$23907 (cdr g$745$23909)) (cons (car g$745$23909) (g$745$23907 (cdr g$745$23909)))))))) (g$745$23907 g$745$23905)))) (set! g$745$23177 (lambda (g$745$23901) (if (null? g$745$23901) (quote ()) (if (memq (car g$745$23901) (cdr g$745$23901)) (g$745$23177 (cdr g$745$23901)) (cons (car g$745$23901) (g$745$23177 (cdr g$745$23901))))))) (set! g$745$23179 (lambda (g$745$23481) ((lambda (g$745$23483 g$745$23485 g$745$23487) (begin (set! g$745$23483 (lambda (g$745$23899) (if (integer? g$745$23899) (if (exact? g$745$23899) (begin (quote #f) (>= g$745$23899 (quote 0))) (quote #f)) (quote #f)))) (set! g$745$23485 (lambda (g$745$23709) ((lambda (g$745$23711) ((lambda (g$745$23713) (if (if g$745$23713 (begin (quote #f) (apply (lambda (g$745$23895) (g$745$23483 g$745$23895)) g$745$23713)) (quote #f)) (apply (lambda (g$745$23891) (lambda (g$745$23893) (= g$745$23893 g$745$23891))) g$745$23713) ((lambda (g$745$23715) ((lambda (g$745$23717) (if (if g$745$23717 (begin (quote #f) (apply (lambda (g$745$23870 g$745$23871) (eq? g$745$23870 (quote and))) g$745$23717)) (quote #f)) (apply (lambda (g$745$23860 g$745$23861) ((lambda (g$745$23863) (lambda (g$745$23865) (for-all (lambda (g$745$23867) (g$745$23867 g$745$23865)) g$745$23863))) (map g$745$23485 g$745$23861))) g$745$23717) ((lambda (g$745$23719) ((lambda (g$745$23721) (if (if g$745$23721 (begin (quote #f) (apply (lambda (g$745$23838 g$745$23839) (eq? g$745$23838 (quote or))) g$745$23721)) (quote #f)) (apply (lambda (g$745$23828 g$745$23829) ((lambda (g$745$23831) (lambda (g$745$23833) (exists (lambda (g$745$23835) (g$745$23835 g$745$23833)) g$745$23831))) (map g$745$23485 g$745$23829))) g$745$23721) ((lambda (g$745$23723) ((lambda (g$745$23725) (if (if g$745$23725 (begin (quote #f) (apply (lambda (g$745$23806 g$745$23807) (eq? g$745$23806 (quote not))) g$745$23725)) (quote #f)) (apply (lambda (g$745$23798 g$745$23799) ((lambda (g$745$23801) (lambda (g$745$23803) (not (g$745$23801 g$745$23803)))) (g$745$23485 g$745$23799))) g$745$23725) ((lambda (g$745$23727) ((lambda (g$745$23729) (if (if g$745$23729 (begin (quote #f) (apply (lambda (g$745$23776 g$745$23777) (if (eq? g$745$23776 (quote <=)) (begin (quote #f) (g$745$23483 g$745$23777)) (quote #f))) g$745$23729)) (quote #f)) (apply (lambda (g$745$23770 g$745$23771) (lambda (g$745$23773) (<= g$745$23773 g$745$23771))) g$745$23729) ((lambda (g$745$23731) ((lambda (g$745$23733) (if (if g$745$23733 (begin (quote #f) (apply (lambda (g$745$23748 g$745$23749) (if (eq? g$745$23748 (quote >=)) (begin (quote #f) (g$745$23483 g$745$23749)) (quote #f))) g$745$23733)) (quote #f)) (apply (lambda (g$745$23742 g$745$23743) (lambda (g$745$23745) (>= g$745$23745 g$745$23743))) g$745$23733) ((lambda (g$745$23735) ((lambda (g$745$23737) (if (if g$745$23737 (begin (quote #f) (apply (lambda () (quote #t)) g$745$23737)) (quote #f)) (apply (lambda () (error (quote import) (quote "invalid sub-version spec") g$745$23709 g$745$23481)) g$745$23737) (error (quote expander) (quote #3#) (g$745$14364 g$745$23735 (quote ()))))) ((lambda (g$745$23739) (quote ())) g$745$23735))) g$745$23731))) ((lambda (g$745$23751) (if (g$745$14332 g$745$23751) (begin (quote #f) ((lambda (g$745$23753) (if g$745$23753 (begin (quote #f) ((lambda (g$745$23755) (if g$745$23755 (begin (quote #f) (append g$745$23753 g$745$23755)) (quote #f))) ((lambda (g$745$23757) (if (g$745$14332 g$745$23757) (begin (quote #f) ((lambda (g$745$23759) (if g$745$23759 (begin (quote #f) ((lambda (g$745$23761) (if g$745$23761 (begin (quote #f) (append g$745$23759 g$745$23761)) (quote #f))) ((lambda (g$745$23763) (if (equal? (g$745$14366 g$745$23763) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23757)))) (quote #f))) ((lambda (g$745$23765) (list g$745$23765)) (g$745$14340 g$745$23757)))) (quote #f))) (g$745$14344 g$745$23751)))) (quote #f))) ((lambda (g$745$23767) (list g$745$23767)) (g$745$14340 g$745$23751)))) (quote #f))) g$745$23731))) g$745$23727))) ((lambda (g$745$23779) (if (g$745$14332 g$745$23779) (begin (quote #f) ((lambda (g$745$23781) (if g$745$23781 (begin (quote #f) ((lambda (g$745$23783) (if g$745$23783 (begin (quote #f) (append g$745$23781 g$745$23783)) (quote #f))) ((lambda (g$745$23785) (if (g$745$14332 g$745$23785) (begin (quote #f) ((lambda (g$745$23787) (if g$745$23787 (begin (quote #f) ((lambda (g$745$23789) (if g$745$23789 (begin (quote #f) (append g$745$23787 g$745$23789)) (quote #f))) ((lambda (g$745$23791) (if (equal? (g$745$14366 g$745$23791) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23785)))) (quote #f))) ((lambda (g$745$23793) (list g$745$23793)) (g$745$14340 g$745$23785)))) (quote #f))) (g$745$14344 g$745$23779)))) (quote #f))) ((lambda (g$745$23795) (list g$745$23795)) (g$745$14340 g$745$23779)))) (quote #f))) g$745$23727))) g$745$23723))) ((lambda (g$745$23809) (if (g$745$14332 g$745$23809) (begin (quote #f) ((lambda (g$745$23811) (if g$745$23811 (begin (quote #f) ((lambda (g$745$23813) (if g$745$23813 (begin (quote #f) (append g$745$23811 g$745$23813)) (quote #f))) ((lambda (g$745$23815) (if (g$745$14332 g$745$23815) (begin (quote #f) ((lambda (g$745$23817) (if g$745$23817 (begin (quote #f) ((lambda (g$745$23819) (if g$745$23819 (begin (quote #f) (append g$745$23817 g$745$23819)) (quote #f))) ((lambda (g$745$23821) (if (equal? (g$745$14366 g$745$23821) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23815)))) (quote #f))) ((lambda (g$745$23823) (list g$745$23823)) (g$745$14340 g$745$23815)))) (quote #f))) (g$745$14344 g$745$23809)))) (quote #f))) ((lambda (g$745$23825) (list g$745$23825)) (g$745$14340 g$745$23809)))) (quote #f))) g$745$23723))) g$745$23719))) ((lambda (g$745$23841) (if (g$745$14332 g$745$23841) (begin (quote #f) ((lambda (g$745$23843) (if g$745$23843 (begin (quote #f) ((lambda (g$745$23845) (if g$745$23845 (begin (quote #f) (append g$745$23843 g$745$23845)) (quote #f))) ((letrec ((g$745$23847 (lambda (g$745$23849) (if (g$745$14332 g$745$23849) ((lambda (g$745$23851) (if g$745$23851 (begin (quote #f) ((lambda (g$745$23853) (if g$745$23853 (begin (quote #f) (map cons g$745$23851 g$745$23853)) (quote #f))) (g$745$23847 (g$745$14344 g$745$23849)))) (quote #f))) ((lambda (g$745$23855) (list g$745$23855)) (g$745$14340 g$745$23849))) (if (g$745$14336 g$745$23849) (list (begin (quote sub*) (quote ()))) (quote #f)))))) g$745$23847) (g$745$14344 g$745$23841)))) (quote #f))) ((lambda (g$745$23857) (list g$745$23857)) (g$745$14340 g$745$23841)))) (quote #f))) g$745$23719))) g$745$23715))) ((lambda (g$745$23873) (if (g$745$14332 g$745$23873) (begin (quote #f) ((lambda (g$745$23875) (if g$745$23875 (begin (quote #f) ((lambda (g$745$23877) (if g$745$23877 (begin (quote #f) (append g$745$23875 g$745$23877)) (quote #f))) ((letrec ((g$745$23879 (lambda (g$745$23881) (if (g$745$14332 g$745$23881) ((lambda (g$745$23883) (if g$745$23883 (begin (quote #f) ((lambda (g$745$23885) (if g$745$23885 (begin (quote #f) (map cons g$745$23883 g$745$23885)) (quote #f))) (g$745$23879 (g$745$14344 g$745$23881)))) (quote #f))) ((lambda (g$745$23887) (list g$745$23887)) (g$745$14340 g$745$23881))) (if (g$745$14336 g$745$23881) (list (begin (quote sub*) (quote ()))) (quote #f)))))) g$745$23879) (g$745$14344 g$745$23873)))) (quote #f))) ((lambda (g$745$23889) (list g$745$23889)) (g$745$14340 g$745$23873)))) (quote #f))) g$745$23715))) g$745$23711))) ((lambda (g$745$23897) (list g$745$23897)) g$745$23711))) g$745$23709))) (set! g$745$23487 (lambda (g$745$23559) ((lambda (g$745$23561) ((lambda (g$745$23563) (if (if g$745$23563 (begin (quote #f) (apply (lambda () (quote #t)) g$745$23563)) (quote #f)) (apply (lambda () (lambda (g$745$23705) (quote #t))) g$745$23563) ((lambda (g$745$23565) ((lambda (g$745$23567) (if (if g$745$23567 (begin (quote #f) (apply (lambda (g$745$23684 g$745$23685) (eq? g$745$23684 (quote and))) g$745$23567)) (quote #f)) (apply (lambda (g$745$23674 g$745$23675) ((lambda (g$745$23677) (lambda (g$745$23679) (for-all (lambda (g$745$23681) (g$745$23681 g$745$23679)) g$745$23677))) (map g$745$23487 g$745$23675))) g$745$23567) ((lambda (g$745$23569) ((lambda (g$745$23571) (if (if g$745$23571 (begin (quote #f) (apply (lambda (g$745$23652 g$745$23653) (eq? g$745$23652 (quote or))) g$745$23571)) (quote #f)) (apply (lambda (g$745$23642 g$745$23643) ((lambda (g$745$23645) (lambda (g$745$23647) (exists (lambda (g$745$23649) (g$745$23649 g$745$23647)) g$745$23645))) (map g$745$23487 g$745$23643))) g$745$23571) ((lambda (g$745$23573) ((lambda (g$745$23575) (if (if g$745$23575 (begin (quote #f) (apply (lambda (g$745$23620 g$745$23621) (eq? g$745$23620 (quote not))) g$745$23575)) (quote #f)) (apply (lambda (g$745$23612 g$745$23613) ((lambda (g$745$23615) (lambda (g$745$23617) (not (g$745$23615 g$745$23617)))) (g$745$23487 g$745$23613))) g$745$23575) ((lambda (g$745$23577) ((lambda (g$745$23579) (if (if g$745$23579 (begin (quote #f) (apply (lambda (g$745$23599) (quote #t)) g$745$23579)) (quote #f)) (apply (lambda (g$745$23587) ((lambda (g$745$23589) (lambda (g$745$23591) (letrec ((g$745$23593 (lambda (g$745$23596 g$745$23597) (if (null? g$745$23596) (quote #t) (if (null? g$745$23597) (quote #f) (if ((car g$745$23596) (car g$745$23597)) (begin (quote #f) (g$745$23593 (cdr g$745$23596) (cdr g$745$23559))) (quote #f))))))) (g$745$23593 g$745$23589 g$745$23591)))) (map g$745$23485 g$745$23587))) g$745$23579) ((lambda (g$745$23581) ((lambda (g$745$23583) (if (if g$745$23583 (begin (quote #f) (apply (lambda () (quote #t)) g$745$23583)) (quote #f)) (apply (lambda () (error (quote import) (quote "invalid version spec") g$745$23559 g$745$23481)) g$745$23583) (error (quote expander) (quote #3#) (g$745$14364 g$745$23581 (quote ()))))) ((lambda (g$745$23585) (quote ())) g$745$23581))) g$745$23577))) ((letrec ((g$745$23601 (lambda (g$745$23603) (if (g$745$14332 g$745$23603) ((lambda (g$745$23605) (if g$745$23605 (begin (quote #f) ((lambda (g$745$23607) (if g$745$23607 (begin (quote #f) (map cons g$745$23605 g$745$23607)) (quote #f))) (g$745$23601 (g$745$14344 g$745$23603)))) (quote #f))) ((lambda (g$745$23609) (list g$745$23609)) (g$745$14340 g$745$23603))) (if (g$745$14336 g$745$23603) (list (begin (quote sub*) (quote ()))) (quote #f)))))) g$745$23601) g$745$23577))) g$745$23573))) ((lambda (g$745$23623) (if (g$745$14332 g$745$23623) (begin (quote #f) ((lambda (g$745$23625) (if g$745$23625 (begin (quote #f) ((lambda (g$745$23627) (if g$745$23627 (begin (quote #f) (append g$745$23625 g$745$23627)) (quote #f))) ((lambda (g$745$23629) (if (g$745$14332 g$745$23629) (begin (quote #f) ((lambda (g$745$23631) (if g$745$23631 (begin (quote #f) ((lambda (g$745$23633) (if g$745$23633 (begin (quote #f) (append g$745$23631 g$745$23633)) (quote #f))) ((lambda (g$745$23635) (if (equal? (g$745$14366 g$745$23635) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23629)))) (quote #f))) ((lambda (g$745$23637) (list g$745$23637)) (g$745$14340 g$745$23629)))) (quote #f))) (g$745$14344 g$745$23623)))) (quote #f))) ((lambda (g$745$23639) (list g$745$23639)) (g$745$14340 g$745$23623)))) (quote #f))) g$745$23573))) g$745$23569))) ((lambda (g$745$23655) (if (g$745$14332 g$745$23655) (begin (quote #f) ((lambda (g$745$23657) (if g$745$23657 (begin (quote #f) ((lambda (g$745$23659) (if g$745$23659 (begin (quote #f) (append g$745$23657 g$745$23659)) (quote #f))) ((letrec ((g$745$23661 (lambda (g$745$23663) (if (g$745$14332 g$745$23663) ((lambda (g$745$23665) (if g$745$23665 (begin (quote #f) ((lambda (g$745$23667) (if g$745$23667 (begin (quote #f) (map cons g$745$23665 g$745$23667)) (quote #f))) (g$745$23661 (g$745$14344 g$745$23663)))) (quote #f))) ((lambda (g$745$23669) (list g$745$23669)) (g$745$14340 g$745$23663))) (if (g$745$14336 g$745$23663) (list (begin (quote ver*) (quote ()))) (quote #f)))))) g$745$23661) (g$745$14344 g$745$23655)))) (quote #f))) ((lambda (g$745$23671) (list g$745$23671)) (g$745$14340 g$745$23655)))) (quote #f))) g$745$23569))) g$745$23565))) ((lambda (g$745$23687) (if (g$745$14332 g$745$23687) (begin (quote #f) ((lambda (g$745$23689) (if g$745$23689 (begin (quote #f) ((lambda (g$745$23691) (if g$745$23691 (begin (quote #f) (append g$745$23689 g$745$23691)) (quote #f))) ((letrec ((g$745$23693 (lambda (g$745$23695) (if (g$745$14332 g$745$23695) ((lambda (g$745$23697) (if g$745$23697 (begin (quote #f) ((lambda (g$745$23699) (if g$745$23699 (begin (quote #f) (map cons g$745$23697 g$745$23699)) (quote #f))) (g$745$23693 (g$745$14344 g$745$23695)))) (quote #f))) ((lambda (g$745$23701) (list g$745$23701)) (g$745$14340 g$745$23695))) (if (g$745$14336 g$745$23695) (list (begin (quote ver*) (quote ()))) (quote #f)))))) g$745$23693) (g$745$14344 g$745$23687)))) (quote #f))) ((lambda (g$745$23703) (list g$745$23703)) (g$745$14340 g$745$23687)))) (quote #f))) g$745$23565))) g$745$23561))) ((lambda (g$745$23707) (if (equal? (g$745$14366 g$745$23707) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$23561))) g$745$23559))) (letrec ((g$745$23489 (lambda (g$745$23491) ((lambda (g$745$23493) ((lambda (g$745$23495) (if (if g$745$23495 (begin (quote #f) (apply (lambda (g$745$23539) (quote #t)) g$745$23495)) (quote #f)) (apply (lambda (g$745$23537) (values (quote ()) (g$745$23487 g$745$23537))) g$745$23495) ((lambda (g$745$23497) ((lambda (g$745$23499) (if (if g$745$23499 (begin (quote #f) (apply (lambda (g$745$23524 g$745$23525) (symbol? g$745$23524)) g$745$23499)) (quote #f)) (apply (lambda (g$745$23516 g$745$23517) (call-with-values (lambda () (g$745$23489 g$745$23517)) (lambda (g$745$23520 g$745$23521) (values (cons g$745$23516 g$745$23520) g$745$23521)))) g$745$23499) ((lambda (g$745$23501) ((lambda (g$745$23503) (if (if g$745$23503 (begin (quote #f) (apply (lambda () (quote #t)) g$745$23503)) (quote #f)) (apply (lambda () (values (quote ()) (lambda (g$745$23511) (quote #t)))) g$745$23503) ((lambda (g$745$23505) ((lambda (g$745$23507) (if (if g$745$23507 (begin (quote #f) (apply (lambda () (quote #t)) g$745$23507)) (quote #f)) (apply (lambda () (error (quote expander) (quote "invalid import spec") (g$745$14364 g$745$23481 (quote ())))) g$745$23507) (error (quote expander) (quote #3#) (g$745$14364 g$745$23505 (quote ()))))) ((lambda (g$745$23509) (quote ())) g$745$23505))) g$745$23501))) ((lambda (g$745$23513) (if (equal? (g$745$14366 g$745$23513) (quote ())) (begin (quote #f) (quote ())) (quote #f))) g$745$23501))) g$745$23497))) ((lambda (g$745$23527) (if (g$745$14332 g$745$23527) (begin (quote #f) ((lambda (g$745$23529) (if g$745$23529 (begin (quote #f) ((lambda (g$745$23531) (if g$745$23531 (begin (quote #f) (append g$745$23529 g$745$23531)) (quote #f))) ((lambda (g$745$23533) (list g$745$23533)) (g$745$14344 g$745$23527)))) (quote #f))) ((lambda (g$745$23535) (list g$745$23535)) (g$745$14340 g$745$23527)))) (quote #f))) g$745$23497))) g$745$23493))) ((lambda (g$745$23541) (if (g$745$14332 g$745$23541) (begin (quote #f) ((lambda (g$745$23543) (if g$745$23543 (begin (quote #f) ((lambda (g$745$23545) (if g$745$23545 (begin (quote #f) (append g$745$23543 g$745$23545)) (quote #f))) ((lambda (g$745$23547) (if (equal? (g$745$14366 g$745$23547) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23541)))) (quote #f))) ((letrec ((g$745$23549 (lambda (g$745$23551) (if (g$745$14332 g$745$23551) ((lambda (g$745$23553) (if g$745$23553 (begin (quote #f) ((lambda (g$745$23555) (if g$745$23555 (begin (quote #f) (map cons g$745$23553 g$745$23555)) (quote #f))) (g$745$23549 (g$745$14344 g$745$23551)))) (quote #f))) ((lambda (g$745$23557) (list g$745$23557)) (g$745$14340 g$745$23551))) (if (g$745$14336 g$745$23551) (list (begin (quote version-spec*) (quote ()))) (quote #f)))))) g$745$23549) (g$745$14340 g$745$23541)))) (quote #f))) g$745$23493))) g$745$23491)))) (g$745$23489 g$745$23481)))) (quote #f) (quote #f) (quote #f)))) (set! g$745$23181 (lambda (g$745$23189) ((lambda (g$745$23191) ((lambda (g$745$23193) (if (if g$745$23193 (begin (quote #f) (apply (lambda (g$745$23434 g$745$23435 g$745$23436 g$745$23437) (if (eq? g$745$23434 (quote rename)) (if (for-all symbol? g$745$23436) (begin (quote #f) (for-all symbol? g$745$23437)) (quote #f)) (quote #f))) g$745$23193)) (quote #f)) (apply (lambda (g$745$23420 g$745$23421 g$745$23422 g$745$23423) ((lambda (g$745$23425) ((lambda (g$745$23427) ((lambda (g$745$23429) (g$745$23169 (map cons g$745$23423 g$745$23427) g$745$23429)) (g$745$23175 g$745$23422 g$745$23425))) (g$745$23173 g$745$23422 g$745$23425))) (g$745$23181 g$745$23421))) g$745$23193) ((lambda (g$745$23195) ((lambda (g$745$23197) (if (if g$745$23197 (begin (quote #f) (apply (lambda (g$745$23387 g$745$23388 g$745$23389) (if (eq? g$745$23387 (quote except)) (begin (quote #f) (for-all symbol? g$745$23389)) (quote #f))) g$745$23197)) (quote #f)) (apply (lambda (g$745$23379 g$745$23380 g$745$23381) ((lambda (g$745$23383) (g$745$23175 g$745$23381 g$745$23383)) (g$745$23181 g$745$23380))) g$745$23197) ((lambda (g$745$23199) ((lambda (g$745$23201) (if (if g$745$23201 (begin (quote #f) (apply (lambda (g$745$23347 g$745$23348 g$745$23349) (if (eq? g$745$23347 (quote only)) (begin (quote #f) (for-all symbol? g$745$23349)) (quote #f))) g$745$23201)) (quote #f)) (apply (lambda (g$745$23335 g$745$23336 g$745$23337) ((lambda (g$745$23339) ((lambda (g$745$23341) ((lambda (g$745$23343) (map cons g$745$23341 g$745$23343)) (g$745$23173 g$745$23341 g$745$23339))) (g$745$23177 g$745$23337))) (g$745$23181 g$745$23336))) g$745$23201) ((lambda (g$745$23203) ((lambda (g$745$23205) (if (if g$745$23205 (begin (quote #f) (apply (lambda (g$745$23303 g$745$23304 g$745$23305) (if (eq? g$745$23303 (quote prefix)) (begin (quote #f) (symbol? g$745$23305)) (quote #f))) g$745$23205)) (quote #f)) (apply (lambda (g$745$23293 g$745$23294 g$745$23295) ((lambda (g$745$23297) (map (lambda (g$745$23299) (cons (string->symbol (string-append (symbol->string g$745$23295) (symbol->string (car g$745$23299)))) (cdr g$745$23299))) g$745$23297)) (g$745$23181 g$745$23294))) g$745$23205) ((lambda (g$745$23207) ((lambda (g$745$23209) (if (if g$745$23209 (begin (quote #f) (apply (lambda (g$745$23262 g$745$23263) (eq? g$745$23262 (quote library))) g$745$23209)) (quote #f)) (apply (lambda (g$745$23252 g$745$23253) (call-with-values (lambda () (g$745$23179 g$745$23253)) (lambda (g$745$23256 g$745$23257) (begin (if (null? g$745$23256) (error (quote import) (quote "empty library name") g$745$23253) (void)) ((lambda (g$745$23259) (begin (if g$745$23259 (void) (error (quote import) (quote "cannot find library with required name") g$745$23256)) (if (g$745$23257 (g$745$13921 g$745$23259)) (void) (error (quote import) (quote "library does not satisfy version specification") g$745$23259 g$745$23253)) (g$745$23167 g$745$23259) (g$745$13917 g$745$23259))) (g$745$13892 g$745$23256)))))) g$745$23209) ((lambda (g$745$23211) ((lambda (g$745$23213) (if (if g$745$23213 (begin (quote #f) (apply (lambda (g$745$23230 g$745$23231) (not (memq g$745$23230 (quote (rename except only prefix library))))) g$745$23213)) (quote #f)) (apply (lambda (g$745$23226 g$745$23227) (g$745$23181 (list (quote library) (cons g$745$23226 g$745$23227)))) g$745$23213) ((lambda (g$745$23215) ((lambda (g$745$23217) (if (if g$745$23217 (begin (quote #f) (apply (lambda (g$745$23221) (quote #t)) g$745$23217)) (quote #f)) (apply (lambda (g$745$23219) (error (quote import) (quote "invalid import spec") g$745$23219)) g$745$23217) (error (quote expander) (quote #3#) (g$745$14364 g$745$23215 (quote ()))))) ((lambda (g$745$23223) (list g$745$23223)) g$745$23215))) g$745$23211))) ((lambda (g$745$23233) (if (g$745$14332 g$745$23233) (begin (quote #f) ((lambda (g$745$23235) (if g$745$23235 (begin (quote #f) ((lambda (g$745$23237) (if g$745$23237 (begin (quote #f) (append g$745$23235 g$745$23237)) (quote #f))) ((letrec ((g$745$23239 (lambda (g$745$23241) (if (g$745$14332 g$745$23241) ((lambda (g$745$23243) (if g$745$23243 (begin (quote #f) ((lambda (g$745$23245) (if g$745$23245 (begin (quote #f) (map cons g$745$23243 g$745$23245)) (quote #f))) (g$745$23239 (g$745$14344 g$745$23241)))) (quote #f))) ((lambda (g$745$23247) (list g$745$23247)) (g$745$14340 g$745$23241))) (if (g$745$14336 g$745$23241) (list (begin (quote x*) (quote ()))) (quote #f)))))) g$745$23239) (g$745$14344 g$745$23233)))) (quote #f))) ((lambda (g$745$23249) (list g$745$23249)) (g$745$14340 g$745$23233)))) (quote #f))) g$745$23211))) g$745$23207))) ((lambda (g$745$23265) (if (g$745$14332 g$745$23265) (begin (quote #f) ((lambda (g$745$23267) (if g$745$23267 (begin (quote #f) ((lambda (g$745$23269) (if g$745$23269 (begin (quote #f) (append g$745$23267 g$745$23269)) (quote #f))) ((lambda (g$745$23271) (if (g$745$14332 g$745$23271) (begin (quote #f) ((lambda (g$745$23273) (if g$745$23273 (begin (quote #f) ((lambda (g$745$23275) (if g$745$23275 (begin (quote #f) (append g$745$23273 g$745$23275)) (quote #f))) ((lambda (g$745$23277) (if (equal? (g$745$14366 g$745$23277) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23271)))) (quote #f))) ((letrec ((g$745$23279 (lambda (g$745$23281) (if (g$745$14332 g$745$23281) ((lambda (g$745$23283) (if g$745$23283 (begin (quote #f) ((lambda (g$745$23285) (if g$745$23285 (begin (quote #f) (map cons g$745$23283 g$745$23285)) (quote #f))) (g$745$23279 (g$745$14344 g$745$23281)))) (quote #f))) ((lambda (g$745$23287) (list g$745$23287)) (g$745$14340 g$745$23281))) (if (g$745$14336 g$745$23281) (list (begin (quote spec*) (quote ()))) (quote #f)))))) g$745$23279) (g$745$14340 g$745$23271)))) (quote #f))) (g$745$14344 g$745$23265)))) (quote #f))) ((lambda (g$745$23289) (list g$745$23289)) (g$745$14340 g$745$23265)))) (quote #f))) g$745$23207))) g$745$23203))) ((lambda (g$745$23307) (if (g$745$14332 g$745$23307) (begin (quote #f) ((lambda (g$745$23309) (if g$745$23309 (begin (quote #f) ((lambda (g$745$23311) (if g$745$23311 (begin (quote #f) (append g$745$23309 g$745$23311)) (quote #f))) ((lambda (g$745$23313) (if (g$745$14332 g$745$23313) (begin (quote #f) ((lambda (g$745$23315) (if g$745$23315 (begin (quote #f) ((lambda (g$745$23317) (if g$745$23317 (begin (quote #f) (append g$745$23315 g$745$23317)) (quote #f))) ((lambda (g$745$23319) (if (g$745$14332 g$745$23319) (begin (quote #f) ((lambda (g$745$23321) (if g$745$23321 (begin (quote #f) ((lambda (g$745$23323) (if g$745$23323 (begin (quote #f) (append g$745$23321 g$745$23323)) (quote #f))) ((lambda (g$745$23325) (if (equal? (g$745$14366 g$745$23325) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23319)))) (quote #f))) ((lambda (g$745$23327) (list g$745$23327)) (g$745$14340 g$745$23319)))) (quote #f))) (g$745$14344 g$745$23313)))) (quote #f))) ((lambda (g$745$23329) (list g$745$23329)) (g$745$14340 g$745$23313)))) (quote #f))) (g$745$14344 g$745$23307)))) (quote #f))) ((lambda (g$745$23331) (list g$745$23331)) (g$745$14340 g$745$23307)))) (quote #f))) g$745$23203))) g$745$23199))) ((lambda (g$745$23351) (if (g$745$14332 g$745$23351) (begin (quote #f) ((lambda (g$745$23353) (if g$745$23353 (begin (quote #f) ((lambda (g$745$23355) (if g$745$23355 (begin (quote #f) (append g$745$23353 g$745$23355)) (quote #f))) ((lambda (g$745$23357) (if (g$745$14332 g$745$23357) (begin (quote #f) ((lambda (g$745$23359) (if g$745$23359 (begin (quote #f) ((lambda (g$745$23361) (if g$745$23361 (begin (quote #f) (append g$745$23359 g$745$23361)) (quote #f))) ((letrec ((g$745$23363 (lambda (g$745$23365) (if (g$745$14332 g$745$23365) ((lambda (g$745$23367) (if g$745$23367 (begin (quote #f) ((lambda (g$745$23369) (if g$745$23369 (begin (quote #f) (map cons g$745$23367 g$745$23369)) (quote #f))) (g$745$23363 (g$745$14344 g$745$23365)))) (quote #f))) ((lambda (g$745$23371) (list g$745$23371)) (g$745$14340 g$745$23365))) (if (g$745$14336 g$745$23365) (list (begin (quote sym*) (quote ()))) (quote #f)))))) g$745$23363) (g$745$14344 g$745$23357)))) (quote #f))) ((lambda (g$745$23373) (list g$745$23373)) (g$745$14340 g$745$23357)))) (quote #f))) (g$745$14344 g$745$23351)))) (quote #f))) ((lambda (g$745$23375) (list g$745$23375)) (g$745$14340 g$745$23351)))) (quote #f))) g$745$23199))) g$745$23195))) ((lambda (g$745$23391) (if (g$745$14332 g$745$23391) (begin (quote #f) ((lambda (g$745$23393) (if g$745$23393 (begin (quote #f) ((lambda (g$745$23395) (if g$745$23395 (begin (quote #f) (append g$745$23393 g$745$23395)) (quote #f))) ((lambda (g$745$23397) (if (g$745$14332 g$745$23397) (begin (quote #f) ((lambda (g$745$23399) (if g$745$23399 (begin (quote #f) ((lambda (g$745$23401) (if g$745$23401 (begin (quote #f) (append g$745$23399 g$745$23401)) (quote #f))) ((letrec ((g$745$23403 (lambda (g$745$23405) (if (g$745$14332 g$745$23405) ((lambda (g$745$23407) (if g$745$23407 (begin (quote #f) ((lambda (g$745$23409) (if g$745$23409 (begin (quote #f) (map cons g$745$23407 g$745$23409)) (quote #f))) (g$745$23403 (g$745$14344 g$745$23405)))) (quote #f))) ((lambda (g$745$23411) (list g$745$23411)) (g$745$14340 g$745$23405))) (if (g$745$14336 g$745$23405) (list (begin (quote sym*) (quote ()))) (quote #f)))))) g$745$23403) (g$745$14344 g$745$23397)))) (quote #f))) ((lambda (g$745$23413) (list g$745$23413)) (g$745$14340 g$745$23397)))) (quote #f))) (g$745$14344 g$745$23391)))) (quote #f))) ((lambda (g$745$23415) (list g$745$23415)) (g$745$14340 g$745$23391)))) (quote #f))) g$745$23195))) g$745$23191))) ((lambda (g$745$23439) (if (g$745$14332 g$745$23439) (begin (quote #f) ((lambda (g$745$23441) (if g$745$23441 (begin (quote #f) ((lambda (g$745$23443) (if g$745$23443 (begin (quote #f) (append g$745$23441 g$745$23443)) (quote #f))) ((lambda (g$745$23445) (if (g$745$14332 g$745$23445) (begin (quote #f) ((lambda (g$745$23447) (if g$745$23447 (begin (quote #f) ((lambda (g$745$23449) (if g$745$23449 (begin (quote #f) (append g$745$23447 g$745$23449)) (quote #f))) ((letrec ((g$745$23451 (lambda (g$745$23453) (if (g$745$14332 g$745$23453) ((lambda (g$745$23455) (if g$745$23455 (begin (quote #f) ((lambda (g$745$23457) (if g$745$23457 (begin (quote #f) (map cons g$745$23455 g$745$23457)) (quote #f))) (g$745$23451 (g$745$14344 g$745$23453)))) (quote #f))) ((lambda (g$745$23459) (if (g$745$14332 g$745$23459) (begin (quote #f) ((lambda (g$745$23461) (if g$745$23461 (begin (quote #f) ((lambda (g$745$23463) (if g$745$23463 (begin (quote #f) (append g$745$23461 g$745$23463)) (quote #f))) ((lambda (g$745$23465) (if (g$745$14332 g$745$23465) (begin (quote #f) ((lambda (g$745$23467) (if g$745$23467 (begin (quote #f) ((lambda (g$745$23469) (if g$745$23469 (begin (quote #f) (append g$745$23467 g$745$23469)) (quote #f))) ((lambda (g$745$23471) (if (equal? (g$745$14366 g$745$23471) (quote ())) (begin (quote #f) (quote ())) (quote #f))) (g$745$14344 g$745$23465)))) (quote #f))) ((lambda (g$745$23473) (list g$745$23473)) (g$745$14340 g$745$23465)))) (quote #f))) (g$745$14344 g$745$23459)))) (quote #f))) ((lambda (g$745$23475) (list g$745$23475)) (g$745$14340 g$745$23459)))) (quote #f))) (g$745$14340 g$745$23453))) (if (g$745$14336 g$745$23453) (list (begin (quote old*) (quote ())) (begin (quote new*) (quote ()))) (quote #f)))))) g$745$23451) (g$745$14344 g$745$23445)))) (quote #f))) ((lambda (g$745$23477) (list g$745$23477)) (g$745$14340 g$745$23445)))) (quote #f))) (g$745$14344 g$745$23439)))) (quote #f))) ((lambda (g$745$23479) (list g$745$23479)) (g$745$14340 g$745$23439)))) (quote #f))) g$745$23191))) g$745$23189))) (letrec ((g$745$23183 (lambda (g$745$23186 g$745$23187) (if (null? g$745$23186) (values g$745$23187 (g$745$23167)) (g$745$23183 (cdr g$745$23186) (g$745$23169 (g$745$23181 (car g$745$23186)) g$745$23187)))))) (g$745$23183 g$745$23165 (quote ()))))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f)))) (set! g$745$14937 (lambda (g$745$23961) ((lambda (g$745$23963) (begin (for-each (lambda (g$745$23965) ((lambda (g$745$23968 g$745$23969) (g$745$14285 g$745$23963 (g$745$14322 g$745$23968 g$745$14252 (quote ())) g$745$23969)) (car g$745$23965) (cdr g$745$23965))) g$745$23961) g$745$23963)) (g$745$14283)))) (set! g$745$14939 (lambda () ((lambda (g$745$23971) (lambda g$745$23975 ((lambda (g$745$23974) (if (= g$745$23974 (quote 0)) (apply (lambda () g$745$23971) g$745$23975) (if (= g$745$23974 (quote 1)) (apply (lambda (g$745$23973) (set! g$745$23971 (g$745$14245 g$745$23973 g$745$23971))) g$745$23975) (error (quote apply) (quote "invalid arg count"))))) (length g$745$23975)))) (quote ())))) (set! g$745$14941 (g$745$13361 (lambda g$745$23977 (error (quote inv-collector) (quote "not initialized"))) (lambda (g$745$23979) (begin (if (procedure? g$745$23979) (void) (error (quote inv-collector) (quote "not a procedure") g$745$23979)) g$745$23979)))) (set! g$745$14943 (g$745$13361 (lambda g$745$23981 (error (quote vis-collector) (quote "not initialized"))) (lambda (g$745$23983) (begin (if (procedure? g$745$23983) (void) (error (quote vis-collector) (quote "not a procedure") g$745$23983)) g$745$23983)))) (set! g$745$14945 (lambda (g$745$23987 g$745$23988 g$745$23989) (call-with-values (lambda () (g$745$14915 g$745$23987 (quote ()) (quote ()) (quote ()) (quote ()) (quote ()) (quote ()) g$745$23988 g$745$23989)) (lambda (g$745$23997 g$745$23998 g$745$23999 g$745$24000 g$745$24001 g$745$24002 g$745$24003) (values (append (apply append (reverse g$745$24002)) g$745$23997) g$745$23998 g$745$23999 (reverse g$745$24000) (reverse g$745$24001)))))) (set! g$745$14947 (lambda (g$745$24007 g$745$24008 g$745$24009) (call-with-values (lambda () (g$745$14929 g$745$24007)) (lambda (g$745$24014 g$745$24015) (call-with-values (lambda () (g$745$14935 g$745$24008)) (lambda (g$745$24016 g$745$24017) ((lambda (g$745$24019) ((lambda (g$745$24023 g$745$24024 g$745$24025) ((lambda (g$745$24034 g$745$24035 g$745$24036 g$745$24037) ((lambda (g$745$24039) (dynamic-wind g$745$24039 (lambda () (call-with-values (lambda () (g$745$14945 g$745$24023 g$745$24019 (quote #f))) (lambda (g$745$24045 g$745$24046 g$745$24047 g$745$24048 g$745$24049) (begin (g$745$14287 g$745$24019) ((lambda (g$745$24052 g$745$24053) (begin (g$745$14289 g$745$24019) ((lambda (g$745$24055) (call-with-values (lambda () (g$745$14990 g$745$24046)) (lambda (g$745$24059 g$745$24060 g$745$24061) ((lambda (g$745$24064 g$745$24065) (values g$745$24017 (g$745$24024) (g$745$24025) (g$745$14228 (quote #f) (append g$745$24065 (list g$745$24064))) g$745$24061 g$745$24055 g$745$24059)) (g$745$14225 (quote #f) g$745$24048 g$745$24052 (g$745$14986 g$745$24060 g$745$24053)) (map g$745$14242 (map cdr g$745$24060)))))) (g$745$14988 g$745$24014 g$745$24015 g$745$24019)))) (g$745$14903 g$745$24049 g$745$24046 g$745$24047) (g$745$14889 g$745$24045 g$745$24046 g$745$24047)))))) g$745$24039)) (lambda () (begin ((lambda (g$745$24067) (begin (g$745$24034 g$745$24036) (set! g$745$24036 g$745$24067))) (g$745$24034)) ((lambda (g$745$24069) (begin (g$745$24035 g$745$24037) (set! g$745$24037 g$745$24069))) (g$745$24035)))))) g$745$14941 g$745$14943 g$745$24024 g$745$24025)) (map (lambda (g$745$24071) (g$745$14322 g$745$24071 g$745$14252 (list g$745$24019))) g$745$24009) (g$745$14939) (g$745$14939))) (g$745$14937 g$745$24016)))))))) (set! g$745$14949 (lambda (g$745$24073) (call-with-values (lambda () (g$745$14933 g$745$24073)) (lambda (g$745$24078 g$745$24079 g$745$24080 g$745$24081) (call-with-values (lambda () (g$745$14931 g$745$24078)) (lambda (g$745$24084 g$745$24085) (call-with-values (lambda () (g$745$14947 g$745$24079 g$745$24080 g$745$24081)) (lambda (g$745$24093 g$745$24094 g$745$24095 g$745$24096 g$745$24097 g$745$24098 g$745$24099) (values g$745$24084 g$745$24085 g$745$24093 g$745$24094 g$745$24095 g$745$24096 g$745$24097 g$745$24098 g$745$24099))))))))) (set! g$745$14951 (lambda (g$745$24101) ((lambda (g$745$24103) ((lambda (g$745$24105) (if (if g$745$24105 (begin (quote #f) (apply (lambda (g$745$24121 g$745$24122 g$745$24123) (eq? g$745$24121 (quote import))) g$745$24105)) (quote #f)) (apply (lambda (g$745$24115 g$745$24116 g$745$24117) (values g$745$24116 g$745$24117)) g$745$24105) ((lambda (g$745$24107) ((lambda (g$745$24109) (if (if g$745$24109 (begin (quote #f) (apply (lambda () (quote #t)) g$745$24109)) (quote #f)) (apply (lambda () (error (quote "invalid syntax of top-level program"))) g$745$24109) (error (quote expander) (quote #3#) (g$745$14364 g$745$24107 (quote ()))))) ((lambda (g$745$24111) (quote ())) g$745$24107))) g$745$24103))) ((lambda (g$745$24125) (if (g$745$14332 g$745$24125) (begin (quote #f) ((lambda (g$745$24127) (if g$745$24127 (begin (quote #f) ((lambda (g$745$24129) (if g$745$24129 (begin (quote #f) (append g$745$24127 g$745$24129)) (quote #f))) ((letrec ((g$745$24131 (lambda (g$745$24133) (if (g$745$14332 g$745$24133) ((lambda (g$745$24135) (if g$745$24135 (begin (quote #f) ((lambda (g$745$24137) (if g$745$24137 (begin (quote #f) (map cons g$745$24135 g$745$24137)) (quote #f))) (g$745$24131 (g$745$14344 g$745$24133)))) (quote #f))) ((lambda (g$745$24139) (list g$745$24139)) (g$745$14340 g$745$24133))) (if (g$745$14336 g$745$24133) (list (begin (quote b*) (quote ()))) (quote #f)))))) g$745$24131) (g$745$14344 g$745$24125)))) (quote #f))) ((lambda (g$745$24141) (if (g$745$14332 g$745$24141) (begin (quote #f) ((lambda (g$745$24143) (if g$745$24143 (begin (quote #f) ((lambda (g$745$24145) (if g$745$24145 (begin (quote #f) (append g$745$24143 g$745$24145)) (quote #f))) ((letrec ((g$745$24147 (lambda (g$745$24149) (if (g$745$14332 g$745$24149) ((lambda (g$745$24151) (if g$745$24151 (begin (quote #f) ((lambda (g$745$24153) (if g$745$24153 (begin (quote #f) (map cons g$745$24151 g$745$24153)) (quote #f))) (g$745$24147 (g$745$14344 g$745$24149)))) (quote #f))) ((lambda (g$745$24155) (list g$745$24155)) (g$745$14340 g$745$24149))) (if (g$745$14336 g$745$24149) (list (begin (quote imp*) (quote ()))) (quote #f)))))) g$745$24147) (g$745$14344 g$745$24141)))) (quote #f))) ((lambda (g$745$24157) (list g$745$24157)) (g$745$14340 g$745$24141)))) (quote #f))) (g$745$14340 g$745$24125)))) (quote #f))) g$745$24103))) g$745$24101))) (set! g$745$14953 (lambda (g$745$24159) (call-with-values (lambda () (g$745$14951 g$745$24159)) (lambda (g$745$24162 g$745$24163) (call-with-values (lambda () (g$745$14947 (quote ()) g$745$24162 g$745$24163)) (lambda (g$745$24171 g$745$24172 g$745$24173 g$745$24174 g$745$24175 g$745$24176 g$745$24177) (values g$745$24172 g$745$24174))))))) (set! g$745$14956 (lambda (g$745$24180 g$745$24181) (vector (quote g$745$14954) g$745$24180 g$745$24181))) (set! g$745$14958 (lambda (g$745$24183) (if (vector? g$745$24183) (if (= (vector-length g$745$24183) (+ (quote 1) (length (quote (subst imp*))))) (begin (quote #f) (eq? (vector-ref g$745$24183 (quote 0)) (quote g$745$14954))) (quote #f)) (quote #f)))) (set! g$745$14960 (lambda (g$745$24185) (if (g$745$14958 g$745$24185) (vector-ref g$745$24185 (quote 1)) (error (quote env-subst) (quote #1#) g$745$24185 (quote env))))) (set! g$745$14962 (lambda (g$745$24187) (if (g$745$14958 g$745$24187) (vector-ref g$745$24187 (quote 2)) (error (quote env-imp*) (quote #1#) g$745$24187 (quote env))))) (set! g$745$14964 (lambda (g$745$24190 g$745$24191) (if (g$745$14958 g$745$24190) (vector-set! g$745$24190 (quote 1) g$745$24191) (error (quote set-env-subst!) (quote #2#) g$745$24190 (quote env))))) (set! g$745$14966 (lambda (g$745$24194 g$745$24195) (if (g$745$14958 g$745$24194) (vector-set! g$745$24194 (quote 2) g$745$24195) (error (quote set-env-imp*!) (quote #2#) g$745$24194 (quote env))))) (set! g$745$14968 (lambda (g$745$24197) (g$745$14958 g$745$24197))) (set! g$745$14970 (lambda g$745$24199 (call-with-values (lambda () (g$745$14935 g$745$24199)) (lambda (g$745$24202 g$745$24203) (g$745$14956 g$745$24202 g$745$24203))))) (set! g$745$14972 (lambda (g$745$24205) (begin (if (eqv? g$745$24205 (quote 5)) (void) (error (quote null-environment) (quote "not 5") g$745$24205)) (g$745$14970 (quote (psyntax null-environment-5)))))) (set! g$745$14974 (lambda (g$745$24207) (begin (if (eqv? g$745$24207 (quote 5)) (void) (error (quote scheme-report-environment) (quote "not 5") g$745$24207)) (g$745$14970 (quote (psyntax scheme-report-environment-5)))))) (set! g$745$14976 (lambda (g$745$24210 g$745$24211) (begin (if (g$745$14958 g$745$24211) (void) (error (quote expand) (quote "not an environment") g$745$24211)) ((lambda (g$745$24213) ((lambda (g$745$24215) ((lambda (g$745$24219 g$745$24220 g$745$24221) ((lambda (g$745$24223) (begin (g$745$14287 g$745$24215) (values g$745$24223 (g$745$24220)))) ((lambda (g$745$24232 g$745$24233 g$745$24234 g$745$24235) ((lambda (g$745$24237) (dynamic-wind g$745$24237 (lambda () (g$745$14893 g$745$24219 (quote ()) (quote ()))) g$745$24237)) (lambda () (begin ((lambda (g$745$24239) (begin (g$745$24232 g$745$24234) (set! g$745$24234 g$745$24239))) (g$745$24232)) ((lambda (g$745$24241) (begin (g$745$24233 g$745$24235) (set! g$745$24235 g$745$24241))) (g$745$24233)))))) g$745$14941 g$745$14943 g$745$24220 g$745$24221))) (g$745$14322 g$745$24210 g$745$14252 (list g$745$24215)) (g$745$14939) (g$745$14939))) (g$745$14937 g$745$24213))) (g$745$14960 g$745$24211))))) (set! g$745$14978 (lambda (g$745$24244 g$745$24245) (begin (if (g$745$14958 g$745$24245) (void) (error (quote eval) (quote "not an environment") g$745$24245)) (call-with-values (lambda () (g$745$14976 g$745$24244 g$745$24245)) (lambda (g$745$24248 g$745$24249) (begin (for-each g$745$13883 g$745$24249) (eval-core (g$745$13435 g$745$24248)))))))) (set! g$745$14980 (lambda (g$745$24251) ((lambda (g$745$24253 g$745$24255) (begin (set! g$745$24253 (lambda (g$745$24295) (if (null? g$745$24295) (g$745$14227) (g$745$14228 (quote #f) (map (lambda (g$745$24297) ((lambda (g$745$24300 g$745$24301) (list (quote set!) g$745$24300 g$745$24301)) (car g$745$24297) (cddr g$745$24297))) g$745$24295))))) (set! g$745$24255 (lambda (g$745$24287) (for-each (lambda (g$745$24289) ((lambda (g$745$24292 g$745$24293) (set-symbol-value! g$745$24292 g$745$24293)) (car g$745$24289) (cadr g$745$24289))) g$745$24287))) (call-with-values (lambda () (g$745$14949 g$745$24251)) (lambda (g$745$24265 g$745$24266 g$745$24267 g$745$24268 g$745$24269 g$745$24270 g$745$24271 g$745$24272 g$745$24273) ((lambda (g$745$24280 g$745$24281 g$745$24282 g$745$24283 g$745$24284 g$745$24285) (begin (g$745$13887 g$745$24280 g$745$24281 g$745$24282 g$745$24283 g$745$24284 g$745$24285 g$745$24272 g$745$24273 (lambda () (g$745$24255 g$745$24271)) (lambda () (eval-core (g$745$13435 g$745$24270))) (quote #t)) (values g$745$24270 (g$745$24253 g$745$24271) g$745$24272 g$745$24273))) (gensym) g$745$24265 g$745$24266 (map g$745$13879 g$745$24267) (map g$745$13879 g$745$24269) (map g$745$13879 g$745$24268)))))) (quote #f) (quote #f)))) (set! g$745$14982 (lambda (g$745$24303) (call-with-values (lambda () (g$745$14980 g$745$24303)) (lambda (g$745$24308 g$745$24309 g$745$24310 g$745$24311) (values g$745$24308 g$745$24310 g$745$24311))))) (set! g$745$14984 (lambda (g$745$24315 g$745$24316 g$745$24317) (if (null? g$745$24316) g$745$24317 (g$745$14984 g$745$24315 (cdr g$745$24316) (cons (g$745$24315 (car g$745$24316)) g$745$24317))))) (set! g$745$14986 (lambda (g$745$24320 g$745$24321) (g$745$14228 (quote #f) (cons (g$745$14227) (g$745$14984 (lambda (g$745$24323) (list (quote set!) (cdr g$745$24323) (car g$745$24323))) g$745$24320 g$745$24321))))) (set! g$745$14988 (lambda (g$745$24327 g$745$24328 g$745$24329) (map (lambda (g$745$24332 g$745$24333) ((lambda (g$745$24335) ((lambda (g$745$24337) ((lambda () (begin (if g$745$24337 (void) (error (quote expander) (quote "cannot export unbound identifier") (g$745$14364 g$745$24335 (quote ())))) (cons g$745$24333 g$745$24337))))) (g$745$14368 g$745$24335))) (g$745$14322 g$745$24332 g$745$14252 (list g$745$24329)))) g$745$24327 g$745$24328))) (set! g$745$14990 (lambda (g$745$24339) (letrec ((g$745$24341 (lambda (g$745$24346 g$745$24347 g$745$24348 g$745$24349) (if (null? g$745$24346) (values g$745$24347 g$745$24348 g$745$24349) ((lambda (g$745$24351) ((lambda (g$745$24354 g$745$24355) ((lambda (g$745$24356) (if (memv g$745$24356 (quote (lexical))) ((lambda (g$745$24362) (g$745$24341 (cdr g$745$24346) (cons (cons* g$745$24354 (quote global) g$745$24362) g$745$24347) (cons (cons (g$745$14376 g$745$24355) g$745$24362) g$745$24348) g$745$24349)) (g$745$14258 (g$745$14376 g$745$24355))) (if (memv g$745$24356 (quote (local-macro))) ((lambda (g$745$24360) (g$745$24341 (cdr g$745$24346) (cons (cons* g$745$24354 (quote global-macro) g$745$24360) g$745$24347) g$745$24348 (cons (cons g$745$24360 (g$745$14376 g$745$24355)) g$745$24349))) (gensym)) (if (memv g$745$24356 (quote (local-macro!))) ((lambda (g$745$24358) (g$745$24341 (cdr g$745$24346) (cons (cons* g$745$24354 (quote global-macro!) g$745$24358) g$745$24347) g$745$24348 (cons (cons g$745$24358 (g$745$14376 g$745$24355)) g$745$24349))) (gensym)) (if (memv g$745$24356 (quote ($rtd $module))) (g$745$24341 (cdr g$745$24346) (cons g$745$24351 g$745$24347) g$745$24348 g$745$24349) (error (quote expander) (quote "BUG: do not know how to export") (g$745$14374 g$745$24355) (g$745$14376 g$745$24355))))))) (g$745$14374 g$745$24355))) (car g$745$24351) (cdr g$745$24351))) (car g$745$24346)))))) (g$745$24341 g$745$24339 (quote ()) (quote ()) (quote ()))))) (set! g$745$14992 (lambda (g$745$24364) ((lambda (g$745$24366) ((lambda (g$745$24368) (if (if g$745$24368 (begin (quote #f) (apply (lambda (g$745$24380) (quote #t)) g$745$24368)) (quote #f)) (apply (lambda (g$745$24376) (map (lambda (g$745$24378) (g$745$14296 (gensym (quote t)) g$745$14252 (quote ()))) g$745$24376)) g$745$24368) ((lambda (g$745$24370) ((lambda (g$745$24372) (if (if g$745$24372 (begin (quote #f) (apply (lambda () (quote #t)) g$745$24372)) (quote #f)) (apply (lambda () (error (quote generate-temporaries) (quote "not a list"))) g$745$24372) (error (quote expander) (quote #3#) (g$745$14364 g$745$24370 (quote ()))))) ((lambda (g$745$24374) (quote ())) g$745$24370))) g$745$24366))) ((letrec ((g$745$24382 (lambda (g$745$24384) (if (g$745$14332 g$745$24384) ((lambda (g$745$24386) (if g$745$24386 (begin (quote #f) ((lambda (g$745$24388) (if g$745$24388 (begin (quote #f) (map cons g$745$24386 g$745$24388)) (quote #f))) (g$745$24382 (g$745$14344 g$745$24384)))) (quote #f))) ((lambda (g$745$24390) (list g$745$24390)) (g$745$14340 g$745$24384))) (if (g$745$14336 g$745$24384) (list (begin (quote ls) (quote ()))) (quote #f)))))) g$745$24382) g$745$24366))) g$745$24364))) (set! g$745$14994 (lambda (g$745$24393 g$745$24394) (if (g$745$14346 g$745$24393) (if (g$745$14346 g$745$24394) (g$745$14354 g$745$24393 g$745$24394) (error (quote free-identifier=?) (quote "not an identifier") g$745$24394)) (error (quote free-identifier=?) (quote "not an identifier") g$745$24393)))) (set! g$745$14996 (lambda (g$745$24397 g$745$24398) (if (g$745$14346 g$745$24397) (if (g$745$14346 g$745$24398) (g$745$14352 g$745$24397 g$745$24398) (error (quote bound-identifier=?) (quote "not an identifier") g$745$24398)) (error (quote bound-identifier=?) (quote "not an identifier") g$745$24397)))) (set! g$745$14998 (lambda (g$745$24402 . g$745$24400) (begin (if (for-all string? g$745$24400) (void) (error (quote syntax-error) (quote "invalid argument") g$745$24400)) (error (quote expander) (quote "invalid syntax") (g$745$14366 g$745$24402) (apply string-append g$745$24400))))) (set! g$745$15000 (lambda (g$745$24404) (g$745$14346 g$745$24404))) (set! g$745$15002 (lambda (g$745$24407 g$745$24408) (if (g$745$14346 g$745$24407) (g$745$14312 g$745$24407 g$745$24408) (error (quote datum->syntax) (quote "not an identifier") g$745$24407)))) (set! g$745$15004 (lambda (g$745$24410) (g$745$14366 g$745$24410))) (set! g$745$15006 (lambda (g$745$24412) (call-with-values (lambda () (g$745$14953 g$745$24412)) (lambda (g$745$24415 g$745$24416) (begin (for-each g$745$13883 g$745$24415) (eval-core (g$745$13435 g$745$24416))))))) (set! g$745$15008 (g$745$13361 (quote #f))) (set! g$745$15010 (lambda (g$745$24418) ((lambda (g$745$24420) (if g$745$24420 ((lambda (g$745$24422) ((lambda (g$745$24424) (if g$745$24424 (cdr g$745$24424) ((lambda (g$745$24426) ((lambda (g$745$24428) (if g$745$24428 ((lambda (g$745$24432) ((lambda (g$745$24434) (begin (g$745$13886 g$745$24422 g$745$24418 g$745$24434) g$745$24434)) (cdr g$745$24432))) g$745$24428) ((lambda (g$745$24430) (begin (g$745$13886 g$745$24422 g$745$24418 g$745$24430) (g$745$13885 g$745$24422 g$745$24430 (cons (quote global) (cons g$745$24422 (g$745$14258 g$745$24418)))) g$745$24430)) (g$745$14260 g$745$24418)))) (assq g$745$24418 g$745$24426))) (if (g$745$13891 (quote (ikarus))) (g$745$13917 (g$745$13892 (quote (ikarus)))) (quote ()))))) (assq g$745$24418 (g$745$13917 g$745$24422)))) g$745$24420) (quote #f))) (g$745$15008)))) (set! g$745$15012 (lambda (g$745$24436) ((lambda (g$745$24438) (begin (set! g$745$24438 (lambda (g$745$24472) ((lambda (g$745$24475 g$745$24476) (if g$745$24475 (set-symbol-value! g$745$24475 (eval-core (g$745$13435 g$745$24476))) (eval-core (g$745$13435 g$745$24476)))) (car g$745$24472) (cdr g$745$24472)))) ((lambda (g$745$24441 g$745$24442) ((lambda (g$745$24444) (begin (for-each g$745$13883 (g$745$24441)) (if (null? g$745$24444) (void) (begin (for-each g$745$24438 (reverse (cdr g$745$24444))) (g$745$24438 (car g$745$24444)))))) ((lambda (g$745$24457 g$745$24458 g$745$24459 g$745$24460 g$745$24461 g$745$24462) ((lambda (g$745$24464) (dynamic-wind g$745$24464 (lambda () (g$745$14925 (list (g$745$14322 g$745$24436 g$745$14252 (quote ()))) (quote ()))) g$745$24464)) (lambda () (begin ((lambda (g$745$24466) (begin (g$745$24457 g$745$24460) (set! g$745$24460 g$745$24466))) (g$745$24457)) ((lambda (g$745$24468) (begin (g$745$24458 g$745$24461) (set! g$745$24461 g$745$24468))) (g$745$24458)) ((lambda (g$745$24470) (begin (g$745$24459 g$745$24462) (set! g$745$24462 g$745$24470))) (g$745$24459)))))) g$745$14941 g$745$14943 g$745$15008 g$745$24441 g$745$24442 (g$745$13892 (quote (ikarus interaction)))))) (g$745$14939) (g$745$14939)))) (quote #f)))) (begin (set! g$745$24477 g$745$15012) (set! g$745$24478 g$745$15010) (set! g$745$24479 g$745$15008) (set! g$745$24480 g$745$15006) (set! g$745$24481 g$745$15004) (set! g$745$24482 g$745$15002) (set! g$745$24483 g$745$15000) (set! g$745$24484 g$745$14998) (set! g$745$24485 g$745$14996) (set! g$745$24486 g$745$14994) (set! g$745$24487 g$745$14992) (set! g$745$24488 g$745$14990) (set! g$745$24489 g$745$14988) (set! g$745$24490 g$745$14986) (set! g$745$24491 g$745$14984) (set! g$745$24492 g$745$14982) (set! g$745$24493 g$745$14980) (set! g$745$24494 g$745$14978) (set! g$745$24495 g$745$14976) (set! g$745$24496 g$745$14974) (set! g$745$24497 g$745$14972) (set! g$745$24498 g$745$14970) (set! g$745$24499 g$745$14968) (set! g$745$24500 g$745$14966) (set! g$745$24501 g$745$14964) (set! g$745$24502 g$745$14962) (set! g$745$24503 g$745$14960) (set! g$745$24504 g$745$14958) (set! g$745$24505 g$745$14956) (set! g$745$24506 g$745$14953) (set! g$745$24507 g$745$14951) (set! g$745$24508 g$745$14949) (set! g$745$24509 g$745$14947) (set! g$745$24510 g$745$14945) (set! g$745$24511 g$745$14943) (set! g$745$24512 g$745$14941) (set! g$745$24513 g$745$14939) (set! g$745$24514 g$745$14937) (set! g$745$24515 g$745$14935) (set! g$745$24516 g$745$14933) (set! g$745$24517 g$745$14931) (set! g$745$24518 g$745$14929) (set! g$745$24519 g$745$14927) (set! g$745$24520 g$745$14925) (set! g$745$24521 g$745$14923) (set! g$745$24522 g$745$14921) (set! g$745$24523 g$745$14919) (set! g$745$24524 g$745$14917) (set! g$745$24525 g$745$14915) (set! g$745$24526 g$745$14913) (set! g$745$24527 g$745$14911) (set! g$745$24528 g$745$14909) (set! g$745$24529 g$745$14907) (set! g$745$24530 g$745$14905) (set! g$745$24531 g$745$14903) (set! g$745$24532 g$745$14901) (set! g$745$24533 g$745$14899) (set! g$745$24534 g$745$14897) (set! g$745$24535 g$745$14895) (set! g$745$24536 g$745$14893) (set! g$745$24537 g$745$14891) (set! g$745$24538 g$745$14889) (set! g$745$24539 g$745$14887) (set! g$745$24540 g$745$14885) (set! g$745$24541 g$745$14883) (set! g$745$24542 g$745$14881) (set! g$745$24543 g$745$14879) (set! g$745$24544 g$745$14877) (set! g$745$24545 g$745$14875) (set! g$745$24546 g$745$14873) (set! g$745$24547 g$745$14871) (set! g$745$24548 g$745$14869) (set! g$745$24549 g$745$14867) (set! g$745$24550 g$745$14865) (set! g$745$24551 g$745$14863) (set! g$745$24552 g$745$14861) (set! g$745$24553 g$745$14859) (set! g$745$24554 g$745$14857) (set! g$745$24555 g$745$14855) (set! g$745$24556 g$745$14853) (set! g$745$24557 g$745$14851) (set! g$745$24558 g$745$14849) (set! g$745$24559 g$745$14847) (set! g$745$24560 g$745$14845) (set! g$745$24561 g$745$14843) (set! g$745$24562 g$745$14841) (set! g$745$24563 g$745$14839) (set! g$745$24564 g$745$14837) (set! g$745$24565 g$745$14835) (set! g$745$24566 g$745$14833) (set! g$745$24567 g$745$14831) (set! g$745$24568 g$745$14829) (set! g$745$24569 g$745$14827) (set! g$745$24570 g$745$14825) (set! g$745$24571 g$745$14823) (set! g$745$24572 g$745$14821) (set! g$745$24573 g$745$14819) (set! g$745$24574 g$745$14817) (set! g$745$24575 g$745$14815) (set! g$745$24576 g$745$14813) (set! g$745$24577 g$745$14811) (set! g$745$24578 g$745$14809) (set! g$745$24579 g$745$14807) (set! g$745$24580 g$745$14805) (set! g$745$24581 g$745$14803) (set! g$745$24582 g$745$14801) (set! g$745$24583 g$745$14799) (set! g$745$24584 g$745$14797) (set! g$745$24585 g$745$14795) (set! g$745$24586 g$745$14793) (set! g$745$24587 g$745$14791) (set! g$745$24588 g$745$14789) (set! g$745$24589 g$745$14787) (set! g$745$24590 g$745$14785) (set! g$745$24591 g$745$14783) (set! g$745$24592 g$745$14781) (set! g$745$24593 g$745$14779) (set! g$745$24594 g$745$14777) (set! g$745$24595 g$745$14775) (set! g$745$24596 g$745$14773) (set! g$745$24597 g$745$14771) (set! g$745$24599 g$745$14409) (set! g$745$24600 g$745$14407) (set! g$745$24601 g$745$14405) (set! g$745$24603 g$745$14378) (set! g$745$24604 g$745$14376) (set! g$745$24605 g$745$14374) (set! g$745$24606 g$745$14372) (set! g$745$24607 g$745$14370) (set! g$745$24608 g$745$14368) (set! g$745$24609 g$745$14366) (set! g$745$24610 g$745$14364) (set! g$745$24611 g$745$14362) (set! g$745$24612 g$745$14360) (set! g$745$24613 g$745$14358) (set! g$745$24614 g$745$14356) (set! g$745$24615 g$745$14354) (set! g$745$24616 g$745$14352) (set! g$745$24617 g$745$14350) (set! g$745$24618 g$745$14348) (set! g$745$24619 g$745$14346) (set! g$745$24620 g$745$14344) (set! g$745$24621 g$745$14342) (set! g$745$24622 g$745$14340) (set! g$745$24623 g$745$14338) (set! g$745$24624 g$745$14336) (set! g$745$24625 g$745$14334) (set! g$745$24626 g$745$14332) (set! g$745$24627 g$745$14330) (set! g$745$24628 g$745$14328) (set! g$745$24629 g$745$14326) (set! g$745$24630 g$745$14324) (set! g$745$24631 g$745$14322) (set! g$745$24632 g$745$14320) (set! g$745$24633 g$745$14318) (set! g$745$24634 g$745$14316) (set! g$745$24635 g$745$14314) (set! g$745$24636 g$745$14312) (set! g$745$24637 g$745$14310) (set! g$745$24638 g$745$14308) (set! g$745$24639 g$745$14306) (set! g$745$24640 g$745$14304) (set! g$745$24641 g$745$14302) (set! g$745$24642 g$745$14300) (set! g$745$24643 g$745$14298) (set! g$745$24644 g$745$14296) (set! g$745$24645 g$745$14293) (set! g$745$24646 g$745$14291) (set! g$745$24647 g$745$14289) (set! g$745$24648 g$745$14287) (set! g$745$24649 g$745$14285) (set! g$745$24650 g$745$14283) (set! g$745$24651 g$745$14281) (set! g$745$24652 g$745$14279) (set! g$745$24653 g$745$14277) (set! g$745$24654 g$745$14275) (set! g$745$24655 g$745$14273) (set! g$745$24656 g$745$14271) (set! g$745$24657 g$745$14269) (set! g$745$24658 g$745$14267) (set! g$745$24659 g$745$14265) (set! g$745$24660 g$745$14263) (set! g$745$24661 g$745$14260) (set! g$745$24662 g$745$14258) (set! g$745$24663 g$745$14256) (set! g$745$24664 g$745$14254) (set! g$745$24665 g$745$14252) (set! g$745$24667 g$745$14247) (set! g$745$24668 g$745$14245) (g$745$13895 g$745$14980)))) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f) (quote #f)))


(begin (g$745$13439 (lambda (g$745$25432) ((lambda (g$745$25434) (if g$745$25434 (cdr g$745$25434) (quote #f))) (assq g$745$25432 (quote ((syntax-error . g$745$24484) (syntax-dispatch . g$745$24550) (make-variable-transformer . g$745$24600) (identifier? . g$745$24483) (generate-temporaries . g$745$24487) (free-identifier=? . g$745$24486) (syntax->datum . g$745$24481) (datum->syntax . g$745$24482) (bound-identifier=? . g$745$24485) (null-environment . g$745$24497) (eval . g$745$24494) (environment . g$745$24498))))))) (g$745$13887 (quote g$745$25398) (quote (ikarus interaction)) (quote ()) (quote ()) (quote ()) (quote ()) (quote ()) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25399) (quote (psyntax null-environment-5)) (quote ()) (quote ()) (quote ()) (quote ()) (quote (#0=(unquote-splicing . g$745$24735) #1=(unquote . g$745$24734) #2=(delay . g$745$24727) #3=(or . g$745$24725) #4=(and . g$745$24724) #5=(do . g$745$24723) #6=(cond . g$745$24722) #7=(let* . g$745$24721) #8=(let . g$745$24720) #9=(quasiquote . g$745$24716) #10=(syntax-rules . g$745$24715) #11=(case . g$745$24709) #12=(if . g$745$24705) #13=(letrec . g$745$24703) #14=(lambda . g$745$24700) #15=(quote . g$745$24697) #16=(letrec-syntax . g$745$24695) #17=(let-syntax . g$745$24694) #18=(set! . g$745$24693) #19=(begin . g$745$24691) #20=(define-syntax . g$745$24689) #21=(define . g$745$24688))) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25400) (quote (psyntax scheme-report-environment-5)) (quote ()) (quote ()) (quote ()) (quote ()) (quote (#22=(string-ci>? . g$745$25380) #23=(string-ci>=? . g$745$25379) #24=(string-ci=? . g$745$25378) #25=(string-ci<? . g$745$25377) #26=(string-ci<=? . g$745$25376) #27=(char-whitespace? . g$745$25375) #28=(char-upper-case? . g$745$25374) #29=(char-numeric? . g$745$25372) #30=(char-lower-case? . g$745$25371) #31=(char-upcase . g$745$25369) #32=(char-downcase . g$745$25366) #33=(char-ci>? . g$745$25365) #34=(char-ci>=? . g$745$25364) #35=(char-ci=? . g$745$25363) #36=(char-ci<? . g$745$25362) #37=(char-ci<=? . g$745$25361) #38=(char-alphabetic? . g$745$25360) #39=(call-with-output-file . g$745$25316) #40=(call-with-input-file . g$745$25315) #41=(write-char . g$745$25314) #42=(write . g$745$25313) #43=(with-output-to-file . g$745$25312) #44=(with-input-from-file . g$745$25311) #45=(read-char . g$745$25310) #46=(read . g$745$25309) #47=(peek-char . g$745$25308) #48=(open-output-file . g$745$25307) #49=(open-input-file . g$745$25306) #50=(newline . g$745$25305) #51=(display . g$745$25304) #52=(close-output-port . g$745$25303) #53=(close-input-port . g$745$25302) #54=(eof-object . g$745$25300) #55=(current-output-port . g$745$25298) #56=(current-input-port . g$745$25297) #57=(output-port? . g$745$25296) #58=(input-port? . g$745$25295) #59=(scheme-report-environment . g$745$25210) #60=(quotient . g$745$25209) #61=(null-environment . g$745$14971) #62=(remainder . g$745$25208) #63=(modulo . g$745$25207) #64=(inexact->exact . g$745$25206) #65=(force . g$745$25205) #66=(exact->inexact . g$745$25204) #67=(string-fill! . g$745$25201) #68=(string-set! . g$745$25200) #69=(set-cdr! . g$745$25199) #70=(set-car! . g$745$25198) #71=(memv . g$745$25192) #72=(memq . g$745$25191) #73=(member . g$745$25189) #74=(assv . g$745$25181) #75=(assq . g$745$25180) #76=(assoc . g$745$25178) #77=(eval . g$745$14977) #78=(zero? . g$745$24947) #79=(vector? . g$745$24946) #80=(vector-set! . g$745$24945) #81=(vector-ref . g$745$24944) #82=(vector-length . g$745$24942) #83=(vector-fill! . g$745$24940) #84=(vector->list . g$745$24939) #85=(vector . g$745$24938) #86=(values . g$745$24937) #87=(truncate . g$745$24936) #88=(tan . g$745$24935) #89=(symbol? . g$745$24934) #90=(symbol->string . g$745$24932) #91=(substring . g$745$24931) #92=(string? . g$745$24930) #93=(string>? . g$745$24929) #94=(string>=? . g$745$24928) #95=(string=? . g$745$24927) #96=(string<? . g$745$24926) #97=(string<=? . g$745$24925) #98=(string-ref . g$745$24924) #99=(string-length . g$745$24923) #100=(string-copy . g$745$24921) #101=(string-append . g$745$24920) #102=(string->symbol . g$745$24919) #103=(string->number . g$745$24918) #104=(string->list . g$745$24917) #105=(string . g$745$24916) #106=(sqrt . g$745$24915) #107=(sin . g$745$24914) #108=(round . g$745$24913) #109=(reverse . g$745$24912) #110=(real? . g$745$24911) #111=(real-part . g$745$24909) #112=(rationalize . g$745$24908) #113=(rational? . g$745$24907) #114=(procedure? . g$745$24905) #115=(positive? . g$745$24904) #116=(pair? . g$745$24903) #117=(odd? . g$745$24902) #118=(numerator . g$745$24901) #119=(number? . g$745$24900) #120=(number->string . g$745$24899) #121=(not . g$745$24897) #122=(negative? . g$745$24896) #123=(min . g$745$24894) #124=(max . g$745$24893) #125=(map . g$745$24892) #126=(make-vector . g$745$24891) #127=(make-string . g$745$24890) #128=(make-rectangular . g$745$24889) #129=(make-polar . g$745$24888) #130=(magnitude . g$745$24887) #131=(log . g$745$24886) #132=(list? . g$745$24885) #133=(list-tail . g$745$24884) #134=(list-ref . g$745$24883) #135=(list->vector . g$745$24882) #136=(list->string . g$745$24881) #137=(list . g$745$24880) #138=(length . g$745$24879) #139=(lcm . g$745$24878) #140=(integer? . g$745$24877) #141=(integer->char . g$745$24875) #142=(inexact? . g$745$24873) #143=(imag-part . g$745$24871) #144=(gcd . g$745$24870) #145=(for-each . g$745$24869) #146=(floor . g$745$24868) #147=(expt . g$745$24866) #148=(exp . g$745$24865) #149=(exact? . g$745$24864) #150=(even? . g$745$24861) #151=(eqv? . g$745$24859) #152=(equal? . g$745$24858) #153=(eq? . g$745$24857) #154=(dynamic-wind . g$745$24856) #155=(denominator . g$745$24849) #156=(cos . g$745$24848) #157=(cons . g$745$24847) #158=(complex? . g$745$24846) #159=(char? . g$745$24845) #160=(char>? . g$745$24844) #161=(char>=? . g$745$24843) #162=(char=? . g$745$24842) #163=(char<? . g$745$24841) #164=(char<=? . g$745$24840) #165=(char->integer . g$745$24839) #166=(ceiling . g$745$24838) #167=(call-with-values . g$745$24837) #168=(call-with-current-continuation . g$745$24835) #169=(cddddr . g$745$24834) #170=(cdddar . g$745$24833) #171=(cddadr . g$745$24832) #172=(cddaar . g$745$24831) #173=(cdaddr . g$745$24830) #174=(cdadar . g$745$24829) #175=(cdaadr . g$745$24828) #176=(cdaaar . g$745$24827) #177=(cadddr . g$745$24826) #178=(caddar . g$745$24825) #179=(cadadr . g$745$24824) #180=(cadaar . g$745$24823) #181=(caaddr . g$745$24822) #182=(caadar . g$745$24821) #183=(caaadr . g$745$24820) #184=(caaaar . g$745$24819) #185=(cdddr . g$745$24818) #186=(cddar . g$745$24817) #187=(cdadr . g$745$24816) #188=(cdaar . g$745$24815) #189=(caddr . g$745$24814) #190=(cadar . g$745$24813) #191=(caadr . g$745$24812) #192=(caaar . g$745$24811) #193=(cddr . g$745$24810) #194=(cdar . g$745$24809) #195=(cadr . g$745$24808) #196=(caar . g$745$24807) #197=(cdr . g$745$24806) #198=(car . g$745$24805) #199=(boolean? . g$745$24804) #200=(atan . g$745$24802) #201=(asin . g$745$24800) #202=(apply . g$745$24799) #203=(append . g$745$24798) #204=(angle . g$745$24797) #205=(acos . g$745$24796) #206=(abs . g$745$24795) #207=(/ . g$745$24794) #208=(* . g$745$24793) #209=(- . g$745$24792) #210=(+ . g$745$24791) #211=(>= . g$745$24790) #212=(> . g$745$24789) #213=(= . g$745$24788) #214=(<= . g$745$24787) #215=(< . g$745$24786) #0# #1# #2# #3# #4# #5# #6# #7# #8# #9# #10# #11# #12# #13# #14# #15# #16# #17# #18# #19# #20# #21#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25401) (quote (psyntax modules)) (quote ()) (quote ()) (quote ()) (quote ()) (quote (#216=(module . g$745$24690))) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25402) (quote (chez parameters)) (quote ()) (quote ()) (quote ()) (quote ()) (quote ()) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25403) (quote (rnrs)) (quote #217=(6)) (quote ()) (quote ()) (quote ()) (quote (#218=(string-upcase . g$745$25388) #219=(string-titlecase . g$745$25387) #220=(string-normalize-nfkd . g$745$25386) #221=(string-normalize-nfkc . g$745$25385) #222=(string-normalize-nfd . g$745$25384) #223=(string-normalize-nfc . g$745$25383) #224=(string-foldcase . g$745$25382) #225=(string-downcase . g$745$25381) #22# #23# #24# #25# #26# #27# #28# #226=(char-title-case? . g$745$25373) #29# #30# #227=(char-general-category . g$745$25370) #31# #228=(char-titlecase . g$745$25368) #229=(char-foldcase . g$745$25367) #32# #33# #34# #35# #36# #37# #38# #230=(make-variable-transformer . g$745$14406) #231=(identifier? . g$745$14999) #232=(generate-temporaries . g$745$14991) #233=(free-identifier=? . g$745$14993) #234=(syntax->datum . g$745$15003) #235=(datum->syntax . g$745$15001) #236=(bound-identifier=? . g$745$14995) #237=(record-type-descriptor? . g$745$25359) #238=(record-predicate . g$745$25358) #239=(record-mutator . g$745$25357) #240=(record-constructor . g$745$25356) #241=(record-accessor . g$745$25355) #242=(make-record-type-descriptor . g$745$25354) #243=(make-record-constructor-descriptor . g$745$25353) #244=(record? . g$745$25352) #245=(record-type-uid . g$745$25351) #246=(record-type-sealed? . g$745$25350) #247=(record-type-parent . g$745$25349) #248=(record-type-opaque? . g$745$25348) #249=(record-type-name . g$745$25347) #250=(record-type-generative? . g$745$25346) #251=(record-type-field-names . g$745$25345) #252=(record-rtd . g$745$25344) #253=(record-field-mutable? . g$745$25343) #254=(delete-file . g$745$25342) #255=(file-exists? . g$745$25341) #256=(vector-sort! . g$745$25340) #257=(vector-sort . g$745$25339) #258=(list-sort . g$745$25338) #259=(symbol-hash . g$745$25337) #260=(string-ci-hash . g$745$25336) #261=(string-hash . g$745$25335) #262=(equal-hash . g$745$25334) #263=(hashtable-equivalence-function . g$745$25333) #264=(make-hashtable . g$745$25332) #265=(hashtable-hash-function . g$745$25331) #266=(make-eqv-hashtable . g$745$25330) #267=(make-eq-hashtable . g$745$25329) #268=(hashtable? . g$745$25328) #269=(hashtable-update! . g$745$25327) #270=(hashtable-size . g$745$25326) #271=(hashtable-set! . g$745$25325) #272=(hashtable-ref . g$745$25324) #273=(hashtable-mutable? . g$745$25323) #274=(hashtable-keys . g$745$25322) #275=(hashtable-entries . g$745$25321) #276=(hashtable-delete! . g$745$25320) #277=(hashtable-copy . g$745$25319) #278=(hashtable-contains? . g$745$25318) #279=(hashtable-clear! . g$745$25317) #39# #40# #41# #42# #43# #44# #45# #46# #47# #48# #49# #50# #51# #52# #53# #280=(eof-object? . g$745$25301) #54# #281=(current-error-port . g$745$25299) #55# #56# #57# #58# #282=(utf-8-codec . g$745$25294) #283=(utf-16-codec . g$745$25293) #284=(transcoder-error-handling-mode . g$745$25292) #285=(transcoder-eol-style . g$745$25291) #286=(transcoder-codec . g$745$25290) #287=(transcoded-port . g$745$25289) #288=(textual-port? . g$745$25288) #289=(string->bytevector . g$745$25287) #290=(standard-output-port . g$745$25286) #291=(standard-input-port . g$745$25285) #292=(standard-error-port . g$745$25284) #293=(set-port-position! . g$745$25283) #294=(put-u8 . g$745$25282) #295=(put-string . g$745$25281) #296=(put-datum . g$745$25280) #297=(put-char . g$745$25279) #298=(put-bytevector . g$745$25278) #299=(port? . g$745$25277) #300=(port-transcoder . g$745$25276) #301=(port-position . g$745$25275) #302=(port-has-set-port-position!? . g$745$25274) #303=(port-has-port-position? . g$745$25273) #304=(port-eof? . g$745$25272) #305=(output-port-buffer-mode . g$745$25271) #306=(open-string-output-port . g$745$25270) #307=(open-string-input-port . g$745$25269) #308=(open-file-output-port . g$745$25268) #309=(open-file-input/output-port . g$745$25267) #310=(open-file-input-port . g$745$25266) #311=(open-bytevector-output-port . g$745$25265) #312=(open-bytevector-input-port . g$745$25264) #313=(native-transcoder . g$745$25263) #314=(native-eol-style . g$745$25262) #315=(make-transcoder . g$745$25261) #316=(latin-1-codec . g$745$25260) #317=(make-i/o-write-error . g$745$25259) #318=(make-i/o-read-error . g$745$25258) #319=(make-i/o-port-error . g$745$25257) #320=(make-i/o-invalid-position-error . g$745$25256) #321=(make-i/o-filename-error . g$745$25255) #322=(make-i/o-file-protection-error . g$745$25254) #323=(make-i/o-file-is-read-only-error . g$745$25253) #324=(make-i/o-file-does-not-exist-error . g$745$25252) #325=(make-i/o-file-already-exists-error . g$745$25251) #326=(make-i/o-error . g$745$25250) #327=(make-i/o-encoding-error . g$745$25249) #328=(make-i/o-decoding-error . g$745$25248) #329=(make-custom-textual-output-port . g$745$25247) #330=(make-custom-textual-input/output-port . g$745$25246) #331=(make-custom-textual-input-port . g$745$25245) #332=(make-custom-binary-output-port . g$745$25244) #333=(make-custom-binary-input/output-port . g$745$25243) #334=(make-custom-binary-input-port . g$745$25242) #335=(make-bytevector . g$745$25241) #336=(lookahead-u8 . g$745$25240) #337=(lookahead-char . g$745$25239) #338=(i/o-write-error? . g$745$25238) #339=(i/o-read-error? . g$745$25237) #340=(i/o-port-error? . g$745$25236) #341=(i/o-invalid-position-error? . g$745$25235) #342=(i/o-filename-error? . g$745$25234) #343=(i/o-file-protection-error? . g$745$25233) #344=(i/o-file-is-read-only-error? . g$745$25232) #345=(i/o-file-does-not-exist-error? . g$745$25231) #346=(i/o-file-already-exists-error? . g$745$25230) #347=(i/o-error? . g$745$25229) #348=(i/o-error-port . g$745$25228) #349=(i/o-error-filename . g$745$25227) #350=(i/o-encoding-error? . g$745$25226) #351=(i/o-encoding-error-char . g$745$25225) #352=(i/o-decoding-error? . g$745$25224) #353=(get-u8 . g$745$25223) #354=(get-string-n! . g$745$25222) #355=(get-string-n . g$745$25221) #356=(get-string-all . g$745$25220) #357=(get-line . g$745$25219) #358=(get-datum . g$745$25218) #359=(get-char . g$745$25217) #360=(get-bytevector-some . g$745$25216) #361=(get-bytevector-n! . g$745$25215) #362=(get-bytevector-n . g$745$25214) #363=(get-bytevector-all . g$745$25213) #364=(flush-output-port . g$745$25212) #365=(close-port . g$745$25211) #366=(exit . g$745$25203) #367=(command-line . g$745$25202) #368=(remove . g$745$25197) #369=(remv . g$745$25196) #370=(remp . g$745$25195) #371=(remq . g$745$25194) #372=(partition . g$745$25193) #71# #72# #373=(memp . g$745$25190) #73# #374=(exists . g$745$25188) #375=(for-all . g$745$25187) #376=(fold-right . g$745$25186) #377=(fold-left . g$745$25185) #378=(find . g$745$25184) #379=(filter . g$745$25183) #380=(cons* . g$745$25182) #74# #75# #381=(assp . g$745$25179) #76# #382=(call-with-string-output-port . g$745$25177) #383=(call-with-port . g$745$25176) #384=(call-with-bytevector-output-port . g$745$25175) #385=(bytevector->string . g$745$25174) #386=(buffer-mode? . g$745$25173) #387=(binary-port? . g$745$25172) #388=(with-exception-handler . g$745$25171) #389=(raise-continuable . g$745$25170) #390=(raise . g$745$25169) #391=(make-enumeration . g$745$25168) #392=(enum-set=? . g$745$25167) #393=(enum-set-universe . g$745$25166) #394=(enum-set-union . g$745$25165) #395=(enum-set-subset? . g$745$25164) #396=(enum-set-projection . g$745$25163) #397=(enum-set-member? . g$745$25162) #398=(enum-set-intersection . g$745$25161) #399=(enum-set-indexer . g$745$25160) #400=(enum-set-difference . g$745$25159) #401=(enum-set-constructor . g$745$25158) #402=(enum-set-complement . g$745$25157) #403=(enum-set->list . g$745$25156) #404=(who-condition? . g$745$25155) #405=(warning? . g$745$25154) #406=(violation? . g$745$25153) #407=(undefined-violation? . g$745$25152) #408=(syntax-violation? . g$745$25151) #409=(syntax-violation-subform . g$745$25150) #410=(syntax-violation-form . g$745$25149) #411=(syntax-violation . g$745$25148) #412=(simple-conditions . g$745$25147) #413=(serious-condition? . g$745$25146) #414=(non-continuable-violation? . g$745$25145) #415=(&non-continuable . g$745$25144) #416=(message-condition? . g$745$25143) #417=(make-who-condition . g$745$25142) #418=(make-warning . g$745$25141) #419=(make-violation . g$745$25140) #420=(make-undefined-violation . g$745$25139) #421=(make-syntax-violation . g$745$25138) #422=(make-serious-condition . g$745$25137) #423=(make-non-continuable-violation . g$745$25136) #424=(make-message-condition . g$745$25135) #425=(make-lexical-violation . g$745$25134) #426=(make-irritants-condition . g$745$25133) #427=(make-implementation-restriction-violation . g$745$25132) #428=(make-error . g$745$25131) #429=(make-assertion-violation . g$745$25130) #430=(lexical-violation? . g$745$25129) #431=(irritants-condition? . g$745$25128) #432=(implementation-restriction-violation? . g$745$25127) #433=(&implementation-restriction . g$745$25126) #434=(error? . g$745$25125) #435=(condition-who . g$745$25124) #436=(condition-predicate . g$745$25123) #437=(condition-message . g$745$25122) #438=(condition-irritants . g$745$25121) #439=(condition-accessor . g$745$25120) #440=(condition . g$745$25119) #441=(assertion-violation? . g$745$25118) #442=(condition? . g$745$25117) #443=(utf32->string . g$745$25116) #444=(utf16->string . g$745$25115) #445=(utf8->string . g$745$25114) #446=(uint-list->bytevector . g$745$25113) #447=(u8-list->bytevector . g$745$25112) #448=(string->utf8 . g$745$25111) #449=(string->utf32 . g$745$25110) #450=(string->utf16 . g$745$25109) #451=(sint-list->bytevector . g$745$25108) #452=(native-endianness . g$745$25107) #453=(bytevector? . g$745$25106) #454=(bytevector=? . g$745$25105) #455=(bytevector-uint-set! . g$745$25104) #456=(bytevector-uint-ref . g$745$25103) #457=(bytevector-u8-set! . g$745$25102) #458=(bytevector-u8-ref . g$745$25101) #459=(bytevector-u64-set! . g$745$25100) #460=(bytevector-u64-ref . g$745$25099) #461=(bytevector-u64-native-set! . g$745$25098) #462=(bytevector-u64-native-ref . g$745$25097) #463=(bytevector-u32-set! . g$745$25096) #464=(bytevector-u32-ref . g$745$25095) #465=(bytevector-u32-native-set! . g$745$25094) #466=(bytevector-u32-native-ref . g$745$25093) #467=(bytevector-u16-set! . g$745$25092) #468=(bytevector-u16-ref . g$745$25091) #469=(bytevector-u16-native-set! . g$745$25090) #470=(bytevector-u16-native-ref . g$745$25089) #471=(bytevector-sint-set! . g$745$25088) #472=(bytevector-sint-ref . g$745$25087) #473=(bytevector-s8-set! . g$745$25086) #474=(bytevector-s8-ref . g$745$25085) #475=(bytevector-s64-set! . g$745$25084) #476=(bytevector-s64-ref . g$745$25083) #477=(bytevector-s64-native-set! . g$745$25082) #478=(bytevector-s64-native-ref . g$745$25081) #479=(bytevector-s32-set! . g$745$25080) #480=(bytevector-s32-ref . g$745$25079) #481=(bytevector-s32-native-set! . g$745$25078) #482=(bytevector-s32-native-ref . g$745$25077) #483=(bytevector-s16-set! . g$745$25076) #484=(bytevector-s16-ref . g$745$25075) #485=(bytevector-s16-native-set! . g$745$25074) #486=(bytevector-s16-native-ref . g$745$25073) #487=(bytevector-length . g$745$25072) #488=(bytevector-ieee-single-ref . g$745$25071) #489=(bytevector-ieee-single-native-set! . g$745$25070) #490=(bytevector-ieee-single-native-ref . g$745$25069) #491=(bytevector-ieee-double-ref . g$745$25068) #492=(bytevector-ieee-double-native-set! . g$745$25067) #493=(bytevector-ieee-double-native-ref . g$745$25066) #494=(bytevector-fill! . g$745$25065) #495=(bytevector-copy! . g$745$25064) #496=(bytevector-copy . g$745$25063) #497=(bytevector->uint-list . g$745$25062) #498=(bytevector->u8-list . g$745$25061) #499=(bytevector->sint-list . g$745$25060) #500=(no-nans-violation? . g$745$25059) #501=(no-infinities-violation? . g$745$25058) #502=(make-no-nans-violation . g$745$25057) #503=(make-no-infinities-violation . g$745$25056) #504=(real->flonum . g$745$25055) #505=(flzero? . g$745$25054) #506=(fltruncate . g$745$25053) #507=(fltan . g$745$25052) #508=(flsqrt . g$745$25051) #509=(flsin . g$745$25050) #510=(flround . g$745$25049) #511=(flpositive? . g$745$25048) #512=(flonum? . g$745$25047) #513=(flodd? . g$745$25046) #514=(flnumerator . g$745$25045) #515=(flnegative? . g$745$25044) #516=(flnan? . g$745$25043) #517=(flmod0 . g$745$25042) #518=(flmod . g$745$25041) #519=(flmin . g$745$25040) #520=(flmax . g$745$25039) #521=(fllog . g$745$25038) #522=(flinteger? . g$745$25037) #523=(flinfinite? . g$745$25036) #524=(flfloor . g$745$25035) #525=(flfinite? . g$745$25034) #526=(flexpt . g$745$25033) #527=(flexp . g$745$25032) #528=(fleven? . g$745$25031) #529=(fldiv0-and-mod0 . g$745$25030) #530=(fldiv0 . g$745$25029) #531=(fldiv-and-mod . g$745$25028) #532=(fldiv . g$745$25027) #533=(fldenominator . g$745$25026) #534=(flcos . g$745$25025) #535=(flceiling . g$745$25024) #536=(flatan . g$745$25023) #537=(flasin . g$745$25022) #538=(flacos . g$745$25021) #539=(flabs . g$745$25020) #540=(fl>? . g$745$25019) #541=(fl>=? . g$745$25018) #542=(fl=? . g$745$25017) #543=(fl<? . g$745$25016) #544=(fl<=? . g$745$25015) #545=(fl/ . g$745$25014) #546=(fl- . g$745$25013) #547=(fl+ . g$745$25012) #548=(fl* . g$745$25011) #549=(fixnum->flonum . g$745$25010) #550=(fxzero? . g$745$25009) #551=(fxxor . g$745$25008) #552=(fxrotate-bit-field . g$745$25007) #553=(fxreverse-bit-field . g$745$25006) #554=(fxpositive? . g$745$25005) #555=(fxodd? . g$745$25004) #556=(fxnot . g$745$25003) #557=(fxnegative? . g$745$25002) #558=(fxmod0 . g$745$25001) #559=(fxmod . g$745$25000) #560=(fxmin . g$745$24999) #561=(fxmax . g$745$24998) #562=(fxlength . g$745$24997) #563=(fxior . g$745$24996) #564=(fxif . g$745$24995) #565=(fxfirst-bit-set . g$745$24994) #566=(fxeven? . g$745$24993) #567=(fxdiv0-and-mod0 . g$745$24992) #568=(fxdiv0 . g$745$24991) #569=(fxdiv-and-mod . g$745$24990) #570=(fxdiv . g$745$24989) #571=(fxcopy-bit-field . g$745$24988) #572=(fxcopy-bit . g$745$24987) #573=(fxbit-set? . g$745$24986) #574=(fxbit-field . g$745$24985) #575=(fxbit-count . g$745$24984) #576=(fxarithmetic-shift-right . g$745$24983) #577=(fxarithmetic-shift-left . g$745$24982) #578=(fxarithmetic-shift . g$745$24981) #579=(fxand . g$745$24980) #580=(fx>? . g$745$24979) #581=(fx>=? . g$745$24978) #582=(fx=? . g$745$24977) #583=(fx<? . g$745$24976) #584=(fx<=? . g$745$24975) #585=(fx-/carry . g$745$24974) #586=(fx- . g$745$24973) #587=(fx+/carry . g$745$24972) #588=(fx+ . g$745$24971) #589=(fx*/carry . g$745$24970) #590=(fx* . g$745$24969) #591=(greatest-fixnum . g$745$24968) #592=(least-fixnum . g$745$24967) #593=(fixnum-width . g$745$24966) #594=(fixnum? . g$745$24965) #595=(bitwise-rotate-bit-field . g$745$24964) #596=(bitwise-reverse-bit-field . g$745$24963) #597=(bitwise-length . g$745$24962) #598=(bitwise-if . g$745$24961) #599=(bitwise-first-bit-set . g$745$24960) #600=(bitwise-copy-bit-field . g$745$24959) #601=(bitwise-copy-bit . g$745$24958) #602=(bitwise-bit-set? . g$745$24957) #603=(bitwise-bit-field . g$745$24956) #604=(bitwise-bit-count . g$745$24955) #605=(bitwise-xor . g$745$24954) #606=(bitwise-ior . g$745$24953) #607=(bitwise-and . g$745$24952) #608=(bitwise-not . g$745$24951) #609=(bitwise-arithmetic-shift-right . g$745$24950) #610=(bitwise-arithmetic-shift-left . g$745$24949) #611=(bitwise-arithmetic-shift . g$745$24948) #78# #79# #80# #81# #612=(vector-map . g$745$24943) #82# #613=(vector-for-each . g$745$24941) #83# #84# #85# #86# #87# #88# #89# #614=(symbol=? . g$745$24933) #90# #91# #92# #93# #94# #95# #96# #97# #98# #99# #615=(string-for-each . g$745$24922) #100# #101# #102# #103# #104# #105# #106# #107# #108# #109# #110# #616=(real-valued? . g$745$24910) #111# #112# #113# #617=(rational-valued? . g$745$24906) #114# #115# #116# #117# #118# #119# #120# #618=(null? . g$745$24898) #121# #122# #619=(nan? . g$745$24895) #123# #124# #125# #126# #127# #128# #129# #130# #131# #132# #133# #134# #135# #136# #137# #138# #139# #140# #620=(integer-valued? . g$745$24876) #141# #621=(infinite? . g$745$24874) #142# #622=(inexact . g$745$24872) #143# #144# #145# #146# #623=(finite? . g$745$24867) #147# #148# #149# #624=(exact-integer-sqrt . g$745$24863) #625=(exact . g$745$24862) #150# #626=(error . g$745$24860) #151# #152# #153# #154# #627=(div0-and-mod0 . g$745$24855) #628=(mod0 . g$745$24854) #629=(div0 . g$745$24853) #630=(div-and-mod . g$745$24852) #631=(mod . g$745$24851) #632=(div . g$745$24850) #155# #156# #157# #158# #159# #160# #161# #162# #163# #164# #165# #166# #167# #633=(call/cc . g$745$24836) #168# #169# #170# #171# #172# #173# #174# #175# #176# #177# #178# #179# #180# #181# #182# #183# #184# #185# #186# #187# #188# #189# #190# #191# #192# #193# #194# #195# #196# #197# #198# #199# #634=(boolean=? . g$745$24803) #200# #635=(assertion-violation . g$745$24801) #201# #202# #203# #204# #205# #206# #207# #208# #209# #210# #211# #212# #213# #214# #215# #636=(let*-values . g$745$24785) #637=(&no-nans . g$745$24784) #638=(&no-infinities . g$745$24783) #639=(&i/o-encoding . g$745$24782) #640=(&i/o-decoding . g$745$24781) #641=(&i/o-port . g$745$24780) #642=(&i/o-file-does-not-exist . g$745$24779) #643=(&i/o-file-already-exists . g$745$24778) #644=(&i/o-file-is-read-only . g$745$24777) #645=(&i/o-file-protection . g$745$24776) #646=(&i/o-filename . g$745$24775) #647=(&i/o-invalid-position . g$745$24774) #648=(&i/o-write . g$745$24773) #649=(&i/o-read . g$745$24772) #650=(&i/o . g$745$24771) #651=(&undefined . g$745$24770) #652=(&syntax . g$745$24769) #653=(&lexical . g$745$24768) #654=(&who . g$745$24765) #655=(&irritants . g$745$24764) #656=(&assertion . g$745$24763) #657=(&violation . g$745$24762) #658=(&error . g$745$24761) #659=(&serious . g$745$24760) #660=(&warning . g$745$24759) #661=(&message . g$745$24758) #662=(&condition . g$745$24757) #663=(define-condition-type . g$745$24756) #664=(define-enumeration . g$745$24755) #665=(define-record-type . g$745$24754) #666=(parent-rtd . g$745$24753) #667=(nongenerative . g$745$24752) #668=(opaque . g$745$24751) #669=(sealed . g$745$24750) #670=(protocol . g$745$24749) #671=(parent . g$745$24748) #672=(immutable . g$745$24747) #673=(mutable . g$745$24746) #674=(fields . g$745$24745) #675=(error-handling-mode . g$745$24744) #676=(file-options . g$745$24743) #677=(buffer-mode . g$745$24742) #678=(eol-style . g$745$24741) #679=(guard . g$745$24740) #680=(unsyntax-splicing . g$745$24737) #681=(unsyntax . g$745$24736) #0# #1# #682=(_ . g$745$24733) #683=(else . g$745$24732) #684=(=> . g$745$24731) #685=(... . g$745$24730) #686=(assert . g$745$24729) #687=(endianness . g$745$24728) #3# #4# #5# #6# #7# #8# #688=(identifier-syntax . g$745$24719) #689=(with-syntax . g$745$24718) #690=(quasisyntax . g$745$24717) #9# #10# #691=(record-constructor-descriptor . g$745$24712) #692=(record-type-descriptor . g$745$24711) #693=(let-values . g$745$24710) #11# #694=(unless . g$745$24707) #695=(when . g$745$24706) #12# #696=(letrec* . g$745$24704) #13# #697=(case-lambda . g$745$24701) #14# #698=(syntax . g$745$24699) #699=(syntax-case . g$745$24698) #15# #16# #17# #18# #19# #20# #21#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25404) (quote (rnrs r5rs)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#59# #60# #61# #62# #63# #64# #65# #66# #2#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25405) (quote (rnrs control)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#5# #694# #695# #697#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25406) (quote (rnrs eval)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#77# #700=(environment . g$745$14969))) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25407) (quote (rnrs mutable-pairs)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#69# #70#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25408) (quote (rnrs mutable-strings)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#67# #68#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25409) (quote (rnrs programs)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#366# #367#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25410) (quote (rnrs syntax-case)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#230# #231# #232# #233# #234# #235# #236# #411# #680# #681# #682# #685# #689# #690# #698# #699#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25411) (quote (rnrs files)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#254# #255# #317# #318# #319# #320# #321# #322# #323# #324# #325# #326# #338# #339# #340# #341# #342# #343# #344# #345# #346# #347# #348# #349# #641# #642# #643# #644# #645# #646# #647# #648# #649# #650#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25412) (quote (rnrs sorting)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#256# #257# #258#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25413) (quote (rnrs base)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#78# #79# #80# #81# #612# #82# #613# #83# #84# #85# #86# #87# #88# #89# #614# #90# #91# #92# #93# #94# #95# #96# #97# #98# #99# #615# #100# #101# #102# #103# #104# #105# #106# #107# #108# #109# #110# #616# #111# #112# #113# #617# #114# #115# #116# #117# #118# #119# #120# #618# #121# #122# #619# #123# #124# #125# #126# #127# #128# #129# #130# #131# #132# #133# #134# #135# #136# #137# #138# #139# #140# #620# #141# #621# #142# #622# #143# #144# #145# #146# #623# #147# #148# #149# #624# #625# #150# #626# #151# #152# #153# #154# #627# #628# #629# #630# #631# #632# #155# #156# #157# #158# #159# #160# #161# #162# #163# #164# #165# #166# #167# #633# #168# #169# #170# #171# #172# #173# #174# #175# #176# #177# #178# #179# #180# #181# #182# #183# #184# #185# #186# #187# #188# #189# #190# #191# #192# #193# #194# #195# #196# #197# #198# #199# #634# #200# #635# #201# #202# #203# #204# #205# #206# #207# #208# #209# #210# #211# #212# #213# #214# #215# #636# #0# #1# #682# #683# #684# #685# #686# #3# #4# #6# #7# #8# #688# #9# #10# #693# #11# #12# #696# #13# #14# #15# #16# #17# #18# #19# #20# #21#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25414) (quote (rnrs lists)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#368# #369# #370# #371# #372# #71# #72# #373# #73# #374# #375# #376# #377# #378# #379# #380# #74# #75# #381# #76#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25415) (quote (rnrs io simple)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#39# #40# #41# #42# #43# #44# #45# #46# #47# #48# #49# #50# #51# #52# #53# #280# #54# #281# #55# #56# #57# #58# #317# #318# #319# #320# #321# #322# #323# #324# #325# #326# #338# #339# #340# #341# #342# #343# #344# #345# #346# #347# #348# #349# #641# #642# #643# #644# #645# #646# #647# #648# #649# #650#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25416) (quote (rnrs bytevectors)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#335# #443# #444# #445# #446# #447# #448# #449# #450# #451# #452# #453# #454# #455# #456# #457# #458# #459# #460# #461# #462# #463# #464# #465# #466# #467# #468# #469# #470# #471# #472# #473# #474# #475# #476# #477# #478# #479# #480# #481# #482# #483# #484# #485# #486# #487# #488# #489# #490# #491# #492# #493# #494# #495# #496# #497# #498# #499# #687#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25417) (quote (rnrs unicode)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#218# #219# #220# #221# #222# #223# #224# #225# #22# #23# #24# #25# #26# #27# #28# #226# #29# #30# #227# #31# #228# #229# #32# #33# #34# #35# #36# #37# #38#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25418) (quote (rnrs exceptions)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#388# #389# #390# #679# #683# #684#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25419) (quote (rnrs arithmetic bitwise)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#595# #596# #597# #598# #599# #600# #601# #602# #603# #604# #605# #606# #607# #608# #609# #610# #611#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25420) (quote (rnrs arithmetic fixnums)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#550# #551# #552# #553# #554# #555# #556# #557# #558# #559# #560# #561# #562# #563# #564# #565# #566# #567# #568# #569# #570# #571# #572# #573# #574# #575# #576# #577# #578# #579# #580# #581# #582# #583# #584# #585# #586# #587# #588# #589# #590# #591# #592# #593# #594#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25421) (quote (rnrs arithmetic flonums)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#500# #501# #502# #503# #504# #505# #506# #507# #508# #509# #510# #511# #512# #513# #514# #515# #516# #517# #518# #519# #520# #521# #522# #523# #524# #525# #526# #527# #528# #529# #530# #531# #532# #533# #534# #535# #536# #537# #538# #539# #540# #541# #542# #543# #544# #545# #546# #547# #548# #549# #637# #638#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25422) (quote (rnrs hashtables)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#259# #260# #261# #262# #263# #264# #265# #266# #267# #268# #269# #270# #271# #272# #273# #274# #275# #276# #277# #278# #279#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25423) (quote (rnrs io ports)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#280# #54# #281# #55# #56# #57# #58# #282# #283# #284# #285# #286# #287# #288# #289# #290# #291# #292# #293# #294# #295# #296# #297# #298# #299# #300# #301# #302# #303# #304# #305# #306# #307# #308# #309# #310# #311# #312# #313# #314# #315# #316# #317# #318# #319# #320# #321# #322# #323# #324# #325# #326# #327# #328# #329# #330# #331# #332# #333# #334# #336# #337# #338# #339# #340# #341# #342# #343# #344# #345# #346# #347# #348# #349# #350# #351# #352# #353# #354# #355# #356# #357# #358# #359# #360# #361# #362# #363# #364# #365# #382# #383# #384# #385# #386# #387# #639# #640# #641# #642# #643# #644# #645# #646# #647# #648# #649# #650# #675# #676# #677# #678#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25424) (quote (rnrs enums)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#391# #392# #393# #394# #395# #396# #397# #398# #399# #400# #401# #402# #403# #664#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25425) (quote (rnrs conditions)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#404# #405# #406# #407# #408# #409# #410# #411# #412# #413# #414# #415# #416# #417# #418# #419# #420# #421# #422# #423# #424# #425# #426# #427# #428# #429# #430# #431# #432# #433# #434# #435# #436# #437# #438# #439# #440# #441# #442# #651# #652# #653# #654# #655# #656# #657# #658# #659# #660# #661# #662# #663#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25426) (quote (rnrs records inspection)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#244# #245# #246# #247# #248# #249# #250# #251# #252# #253#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25427) (quote (rnrs records procedural)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#237# #238# #239# #240# #241# #242# #243#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25428) (quote (rnrs records syntactic)) (quote #217#) (quote ()) (quote ()) (quote ()) (quote (#665# #666# #667# #668# #669# #670# #671# #672# #673# #674# #691# #692#)) (quote ()) values values (quote #t)) (g$745$13887 (quote g$745$25429) (quote (psyntax system $all)) (quote ()) (quote ()) (quote ()) (quote ()) (quote ((syntax-error . g$745$14997) (syntax-dispatch . g$745$14864) #701=(pretty-print . g$745$25397) #702=(eval-core . g$745$25396) #703=(set-symbol-value! . g$745$25395) #704=(symbol-value . g$745$25394) #705=(gensym . g$745$25393) #706=(void . g$745$25392) (load . g$745$25391) (interaction-environment . g$745$25390) (char-ready? . g$745$25389) #218# #219# #220# #221# #222# #223# #224# #225# #22# #23# #24# #25# #26# #27# #28# #226# #29# #30# #227# #31# #228# #229# #32# #33# #34# #35# #36# #37# #38# #230# #231# #232# #233# #234# #235# #236# #237# #238# #239# #240# #241# #242# #243# #244# #245# #246# #247# #248# #249# #250# #251# #252# #253# #254# #255# #256# #257# #258# #259# #260# #261# #262# #263# #264# #265# #266# #267# #268# #269# #270# #271# #272# #273# #274# #275# #276# #277# #278# #279# #39# #40# #41# #42# #43# #44# #45# #46# #47# #48# #49# #50# #51# #52# #53# #280# #54# #281# #55# #56# #57# #58# #282# #283# #284# #285# #286# #287# #288# #289# #290# #291# #292# #293# #294# #295# #296# #297# #298# #299# #300# #301# #302# #303# #304# #305# #306# #307# #308# #309# #310# #311# #312# #313# #314# #315# #316# #317# #318# #319# #320# #321# #322# #323# #324# #325# #326# #327# #328# #329# #330# #331# #332# #333# #334# #335# #336# #337# #338# #339# #340# #341# #342# #343# #344# #345# #346# #347# #348# #349# #350# #351# #352# #353# #354# #355# #356# #357# #358# #359# #360# #361# #362# #363# #364# #365# #59# #60# #61# #62# #63# #64# #65# #66# #366# #367# #67# #68# #69# #70# #368# #369# #370# #371# #372# #71# #72# #373# #73# #374# #375# #376# #377# #378# #379# #380# #74# #75# #381# #76# #382# #383# #384# #385# #386# #387# #388# #389# #390# #77# #700# #391# #392# #393# #394# #395# #396# #397# #398# #399# #400# #401# #402# #403# #404# #405# #406# #407# #408# #409# #410# #411# #412# #413# #414# #415# #416# #417# #418# #419# #420# #421# #422# #423# #424# #425# #426# #427# #428# #429# #430# #431# #432# #433# #434# #435# #436# #437# #438# #439# #440# #441# #442# #443# #444# #445# #446# #447# #448# #449# #450# #451# #452# #453# #454# #455# #456# #457# #458# #459# #460# #461# #462# #463# #464# #465# #466# #467# #468# #469# #470# #471# #472# #473# #474# #475# #476# #477# #478# #479# #480# #481# #482# #483# #484# #485# #486# #487# #488# #489# #490# #491# #492# #493# #494# #495# #496# #497# #498# #499# #500# #501# #502# #503# #504# #505# #506# #507# #508# #509# #510# #511# #512# #513# #514# #515# #516# #517# #518# #519# #520# #521# #522# #523# #524# #525# #526# #527# #528# #529# #530# #531# #532# #533# #534# #535# #536# #537# #538# #539# #540# #541# #542# #543# #544# #545# #546# #547# #548# #549# #550# #551# #552# #553# #554# #555# #556# #557# #558# #559# #560# #561# #562# #563# #564# #565# #566# #567# #568# #569# #570# #571# #572# #573# #574# #575# #576# #577# #578# #579# #580# #581# #582# #583# #584# #585# #586# #587# #588# #589# #590# #591# #592# #593# #594# #595# #596# #597# #598# #599# #600# #601# #602# #603# #604# #605# #606# #607# #608# #609# #610# #611# #78# #79# #80# #81# #612# #82# #613# #83# #84# #85# #86# #87# #88# #89# #614# #90# #91# #92# #93# #94# #95# #96# #97# #98# #99# #615# #100# #101# #102# #103# #104# #105# #106# #107# #108# #109# #110# #616# #111# #112# #113# #617# #114# #115# #116# #117# #118# #119# #120# #618# #121# #122# #619# #123# #124# #125# #126# #127# #128# #129# #130# #131# #132# #133# #134# #135# #136# #137# #138# #139# #140# #620# #141# #621# #142# #622# #143# #144# #145# #146# #623# #147# #148# #149# #624# #625# #150# #626# #151# #152# #153# #154# #627# #628# #629# #630# #631# #632# #155# #156# #157# #158# #159# #160# #161# #162# #163# #164# #165# #166# #167# #633# #168# #169# #170# #171# #172# #173# #174# #175# #176# #177# #178# #179# #180# #181# #182# #183# #184# #185# #186# #187# #188# #189# #190# #191# #192# #193# #194# #195# #196# #197# #198# #199# #634# #200# #635# #201# #202# #203# #204# #205# #206# #207# #208# #209# #210# #211# #212# #213# #214# #215# #636# #637# #638# #639# #640# #641# #642# #643# #644# #645# #646# #647# #648# #649# #650# #651# #652# #653# (&implementation . g$745$24767) (&non . g$745$24766) #654# #655# #656# #657# #658# #659# #660# #661# #662# #663# #664# #665# #666# #667# #668# #669# #670# #671# #672# #673# #674# #675# #676# #677# #678# #679# (trace-define . g$745$24739) (trace-lambda . g$745$24738) #680# #681# #0# #1# #682# #683# #684# #685# #686# #687# #2# (time . g$745$24726) #3# #4# #5# #6# #7# #8# #688# #689# #690# #9# #10# (include . g$745$24714) (define-struct . g$745$24713) #691# #692# #693# #11# (parameterize . g$745$24708) #694# #695# #12# #696# #13# (type-descriptor . g$745$24702) #697# #14# #698# #699# #15# (foreign-call . g$745$24696) #16# #17# #18# (import . g$745$24692) #19# #216# #20# #21#)) (quote ((g$745$14997 core-prim . syntax-error) (g$745$14864 core-prim . syntax-dispatch) (g$745$25397 core-prim . pretty-print) (g$745$25396 core-prim . eval-core) (g$745$25395 core-prim . set-symbol-value!) (g$745$25394 core-prim . symbol-value) (g$745$25393 core-prim . gensym) (g$745$25392 core-prim . void) (g$745$25391 core-prim . load) (g$745$25390 core-prim . interaction-environment) (g$745$25389 core-prim . char-ready?) (g$745$25388 core-prim . string-upcase) (g$745$25387 core-prim . string-titlecase) (g$745$25386 core-prim . string-normalize-nfkd) (g$745$25385 core-prim . string-normalize-nfkc) (g$745$25384 core-prim . string-normalize-nfd) (g$745$25383 core-prim . string-normalize-nfc) (g$745$25382 core-prim . string-foldcase) (g$745$25381 core-prim . string-downcase) (g$745$25380 core-prim . string-ci>?) (g$745$25379 core-prim . string-ci>=?) (g$745$25378 core-prim . string-ci=?) (g$745$25377 core-prim . string-ci<?) (g$745$25376 core-prim . string-ci<=?) (g$745$25375 core-prim . char-whitespace?) (g$745$25374 core-prim . char-upper-case?) (g$745$25373 core-prim . char-title-case?) (g$745$25372 core-prim . char-numeric?) (g$745$25371 core-prim . char-lower-case?) (g$745$25370 core-prim . char-general-category) (g$745$25369 core-prim . char-upcase) (g$745$25368 core-prim . char-titlecase) (g$745$25367 core-prim . char-foldcase) (g$745$25366 core-prim . char-downcase) (g$745$25365 core-prim . char-ci>?) (g$745$25364 core-prim . char-ci>=?) (g$745$25363 core-prim . char-ci=?) (g$745$25362 core-prim . char-ci<?) (g$745$25361 core-prim . char-ci<=?) (g$745$25360 core-prim . char-alphabetic?) (g$745$14406 core-prim . make-variable-transformer) (g$745$14999 core-prim . identifier?) (g$745$14991 core-prim . generate-temporaries) (g$745$14993 core-prim . free-identifier=?) (g$745$15003 core-prim . syntax->datum) (g$745$15001 core-prim . datum->syntax) (g$745$14995 core-prim . bound-identifier=?) (g$745$25359 core-prim . record-type-descriptor?) (g$745$25358 core-prim . record-predicate) (g$745$25357 core-prim . record-mutator) (g$745$25356 core-prim . record-constructor) (g$745$25355 core-prim . record-accessor) (g$745$25354 core-prim . make-record-type-descriptor) (g$745$25353 core-prim . make-record-constructor-descriptor) (g$745$25352 core-prim . record?) (g$745$25351 core-prim . record-type-uid) (g$745$25350 core-prim . record-type-sealed?) (g$745$25349 core-prim . record-type-parent) (g$745$25348 core-prim . record-type-opaque?) (g$745$25347 core-prim . record-type-name) (g$745$25346 core-prim . record-type-generative?) (g$745$25345 core-prim . record-type-field-names) (g$745$25344 core-prim . record-rtd) (g$745$25343 core-prim . record-field-mutable?) (g$745$25342 core-prim . delete-file) (g$745$25341 core-prim . file-exists?) (g$745$25340 core-prim . vector-sort!) (g$745$25339 core-prim . vector-sort) (g$745$25338 core-prim . list-sort) (g$745$25337 core-prim . symbol-hash) (g$745$25336 core-prim . string-ci-hash) (g$745$25335 core-prim . string-hash) (g$745$25334 core-prim . equal-hash) (g$745$25333 core-prim . hashtable-equivalence-function) (g$745$25332 core-prim . make-hashtable) (g$745$25331 core-prim . hashtable-hash-function) (g$745$25330 core-prim . make-eqv-hashtable) (g$745$25329 core-prim . make-eq-hashtable) (g$745$25328 core-prim . hashtable?) (g$745$25327 core-prim . hashtable-update!) (g$745$25326 core-prim . hashtable-size) (g$745$25325 core-prim . hashtable-set!) (g$745$25324 core-prim . hashtable-ref) (g$745$25323 core-prim . hashtable-mutable?) (g$745$25322 core-prim . hashtable-keys) (g$745$25321 core-prim . hashtable-entries) (g$745$25320 core-prim . hashtable-delete!) (g$745$25319 core-prim . hashtable-copy) (g$745$25318 core-prim . hashtable-contains?) (g$745$25317 core-prim . hashtable-clear!) (g$745$25316 core-prim . call-with-output-file) (g$745$25315 core-prim . call-with-input-file) (g$745$25314 core-prim . write-char) (g$745$25313 core-prim . write) (g$745$25312 core-prim . with-output-to-file) (g$745$25311 core-prim . with-input-from-file) (g$745$25310 core-prim . read-char) (g$745$25309 core-prim . read) (g$745$25308 core-prim . peek-char) (g$745$25307 core-prim . open-output-file) (g$745$25306 core-prim . open-input-file) (g$745$25305 core-prim . newline) (g$745$25304 core-prim . display) (g$745$25303 core-prim . close-output-port) (g$745$25302 core-prim . close-input-port) (g$745$25301 core-prim . eof-object?) (g$745$25300 core-prim . eof-object) (g$745$25299 core-prim . current-error-port) (g$745$25298 core-prim . current-output-port) (g$745$25297 core-prim . current-input-port) (g$745$25296 core-prim . output-port?) (g$745$25295 core-prim . input-port?) (g$745$25294 core-prim . utf-8-codec) (g$745$25293 core-prim . utf-16-codec) (g$745$25292 core-prim . transcoder-error-handling-mode) (g$745$25291 core-prim . transcoder-eol-style) (g$745$25290 core-prim . transcoder-codec) (g$745$25289 core-prim . transcoded-port) (g$745$25288 core-prim . textual-port?) (g$745$25287 core-prim . string->bytevector) (g$745$25286 core-prim . standard-output-port) (g$745$25285 core-prim . standard-input-port) (g$745$25284 core-prim . standard-error-port) (g$745$25283 core-prim . set-port-position!) (g$745$25282 core-prim . put-u8) (g$745$25281 core-prim . put-string) (g$745$25280 core-prim . put-datum) (g$745$25279 core-prim . put-char) (g$745$25278 core-prim . put-bytevector) (g$745$25277 core-prim . port?) (g$745$25276 core-prim . port-transcoder) (g$745$25275 core-prim . port-position) (g$745$25274 core-prim . port-has-set-port-position!?) (g$745$25273 core-prim . port-has-port-position?) (g$745$25272 core-prim . port-eof?) (g$745$25271 core-prim . output-port-buffer-mode) (g$745$25270 core-prim . open-string-output-port) (g$745$25269 core-prim . open-string-input-port) (g$745$25268 core-prim . open-file-output-port) (g$745$25267 core-prim . open-file-input/output-port) (g$745$25266 core-prim . open-file-input-port) (g$745$25265 core-prim . open-bytevector-output-port) (g$745$25264 core-prim . open-bytevector-input-port) (g$745$25263 core-prim . native-transcoder) (g$745$25262 core-prim . native-eol-style) (g$745$25261 core-prim . make-transcoder) (g$745$25260 core-prim . latin-1-codec) (g$745$25259 core-prim . make-i/o-write-error) (g$745$25258 core-prim . make-i/o-read-error) (g$745$25257 core-prim . make-i/o-port-error) (g$745$25256 core-prim . make-i/o-invalid-position-error) (g$745$25255 core-prim . make-i/o-filename-error) (g$745$25254 core-prim . make-i/o-file-protection-error) (g$745$25253 core-prim . make-i/o-file-is-read-only-error) (g$745$25252 core-prim . make-i/o-file-does-not-exist-error) (g$745$25251 core-prim . make-i/o-file-already-exists-error) (g$745$25250 core-prim . make-i/o-error) (g$745$25249 core-prim . make-i/o-encoding-error) (g$745$25248 core-prim . make-i/o-decoding-error) (g$745$25247 core-prim . make-custom-textual-output-port) (g$745$25246 core-prim . make-custom-textual-input/output-port) (g$745$25245 core-prim . make-custom-textual-input-port) (g$745$25244 core-prim . make-custom-binary-output-port) (g$745$25243 core-prim . make-custom-binary-input/output-port) (g$745$25242 core-prim . make-custom-binary-input-port) (g$745$25241 core-prim . make-bytevector) (g$745$25240 core-prim . lookahead-u8) (g$745$25239 core-prim . lookahead-char) (g$745$25238 core-prim . i/o-write-error?) (g$745$25237 core-prim . i/o-read-error?) (g$745$25236 core-prim . i/o-port-error?) (g$745$25235 core-prim . i/o-invalid-position-error?) (g$745$25234 core-prim . i/o-filename-error?) (g$745$25233 core-prim . i/o-file-protection-error?) (g$745$25232 core-prim . i/o-file-is-read-only-error?) (g$745$25231 core-prim . i/o-file-does-not-exist-error?) (g$745$25230 core-prim . i/o-file-already-exists-error?) (g$745$25229 core-prim . i/o-error?) (g$745$25228 core-prim . i/o-error-port) (g$745$25227 core-prim . i/o-error-filename) (g$745$25226 core-prim . i/o-encoding-error?) (g$745$25225 core-prim . i/o-encoding-error-char) (g$745$25224 core-prim . i/o-decoding-error?) (g$745$25223 core-prim . get-u8) (g$745$25222 core-prim . get-string-n!) (g$745$25221 core-prim . get-string-n) (g$745$25220 core-prim . get-string-all) (g$745$25219 core-prim . get-line) (g$745$25218 core-prim . get-datum) (g$745$25217 core-prim . get-char) (g$745$25216 core-prim . get-bytevector-some) (g$745$25215 core-prim . get-bytevector-n!) (g$745$25214 core-prim . get-bytevector-n) (g$745$25213 core-prim . get-bytevector-all) (g$745$25212 core-prim . flush-output-port) (g$745$25211 core-prim . close-port) (g$745$25210 core-prim . scheme-report-environment) (g$745$25209 core-prim . quotient) (g$745$14971 core-prim . null-environment) (g$745$25208 core-prim . remainder) (g$745$25207 core-prim . modulo) (g$745$25206 core-prim . inexact->exact) (g$745$25205 core-prim . force) (g$745$25204 core-prim . exact->inexact) (g$745$25203 core-prim . exit) (g$745$25202 core-prim . command-line) (g$745$25201 core-prim . string-fill!) (g$745$25200 core-prim . string-set!) (g$745$25199 core-prim . set-cdr!) (g$745$25198 core-prim . set-car!) (g$745$25197 core-prim . remove) (g$745$25196 core-prim . remv) (g$745$25195 core-prim . remp) (g$745$25194 core-prim . remq) (g$745$25193 core-prim . partition) (g$745$25192 core-prim . memv) (g$745$25191 core-prim . memq) (g$745$25190 core-prim . memp) (g$745$25189 core-prim . member) (g$745$25188 core-prim . exists) (g$745$25187 core-prim . for-all) (g$745$25186 core-prim . fold-right) (g$745$25185 core-prim . fold-left) (g$745$25184 core-prim . find) (g$745$25183 core-prim . filter) (g$745$25182 core-prim . cons*) (g$745$25181 core-prim . assv) (g$745$25180 core-prim . assq) (g$745$25179 core-prim . assp) (g$745$25178 core-prim . assoc) (g$745$25177 core-prim . call-with-string-output-port) (g$745$25176 core-prim . call-with-port) (g$745$25175 core-prim . call-with-bytevector-output-port) (g$745$25174 core-prim . bytevector->string) (g$745$25173 core-prim . buffer-mode?) (g$745$25172 core-prim . binary-port?) (g$745$25171 core-prim . with-exception-handler) (g$745$25170 core-prim . raise-continuable) (g$745$25169 core-prim . raise) (g$745$14977 core-prim . eval) (g$745$14969 core-prim . environment) (g$745$25168 core-prim . make-enumeration) (g$745$25167 core-prim . enum-set=?) (g$745$25166 core-prim . enum-set-universe) (g$745$25165 core-prim . enum-set-union) (g$745$25164 core-prim . enum-set-subset?) (g$745$25163 core-prim . enum-set-projection) (g$745$25162 core-prim . enum-set-member?) (g$745$25161 core-prim . enum-set-intersection) (g$745$25160 core-prim . enum-set-indexer) (g$745$25159 core-prim . enum-set-difference) (g$745$25158 core-prim . enum-set-constructor) (g$745$25157 core-prim . enum-set-complement) (g$745$25156 core-prim . enum-set->list) (g$745$25155 core-prim . who-condition?) (g$745$25154 core-prim . warning?) (g$745$25153 core-prim . violation?) (g$745$25152 core-prim . undefined-violation?) (g$745$25151 core-prim . syntax-violation?) (g$745$25150 core-prim . syntax-violation-subform) (g$745$25149 core-prim . syntax-violation-form) (g$745$25148 core-prim . syntax-violation) (g$745$25147 core-prim . simple-conditions) (g$745$25146 core-prim . serious-condition?) (g$745$25145 core-prim . non-continuable-violation?) (g$745$25144 core-prim . &non-continuable) (g$745$25143 core-prim . message-condition?) (g$745$25142 core-prim . make-who-condition) (g$745$25141 core-prim . make-warning) (g$745$25140 core-prim . make-violation) (g$745$25139 core-prim . make-undefined-violation) (g$745$25138 core-prim . make-syntax-violation) (g$745$25137 core-prim . make-serious-condition) (g$745$25136 core-prim . make-non-continuable-violation) (g$745$25135 core-prim . make-message-condition) (g$745$25134 core-prim . make-lexical-violation) (g$745$25133 core-prim . make-irritants-condition) (g$745$25132 core-prim . make-implementation-restriction-violation) (g$745$25131 core-prim . make-error) (g$745$25130 core-prim . make-assertion-violation) (g$745$25129 core-prim . lexical-violation?) (g$745$25128 core-prim . irritants-condition?) (g$745$25127 core-prim . implementation-restriction-violation?) (g$745$25126 core-prim . &implementation-restriction) (g$745$25125 core-prim . error?) (g$745$25124 core-prim . condition-who) (g$745$25123 core-prim . condition-predicate) (g$745$25122 core-prim . condition-message) (g$745$25121 core-prim . condition-irritants) (g$745$25120 core-prim . condition-accessor) (g$745$25119 core-prim . condition) (g$745$25118 core-prim . assertion-violation?) (g$745$25117 core-prim . condition?) (g$745$25116 core-prim . utf32->string) (g$745$25115 core-prim . utf16->string) (g$745$25114 core-prim . utf8->string) (g$745$25113 core-prim . uint-list->bytevector) (g$745$25112 core-prim . u8-list->bytevector) (g$745$25111 core-prim . string->utf8) (g$745$25110 core-prim . string->utf32) (g$745$25109 core-prim . string->utf16) (g$745$25108 core-prim . sint-list->bytevector) (g$745$25107 core-prim . native-endianness) (g$745$25106 core-prim . bytevector?) (g$745$25105 core-prim . bytevector=?) (g$745$25104 core-prim . bytevector-uint-set!) (g$745$25103 core-prim . bytevector-uint-ref) (g$745$25102 core-prim . bytevector-u8-set!) (g$745$25101 core-prim . bytevector-u8-ref) (g$745$25100 core-prim . bytevector-u64-set!) (g$745$25099 core-prim . bytevector-u64-ref) (g$745$25098 core-prim . bytevector-u64-native-set!) (g$745$25097 core-prim . bytevector-u64-native-ref) (g$745$25096 core-prim . bytevector-u32-set!) (g$745$25095 core-prim . bytevector-u32-ref) (g$745$25094 core-prim . bytevector-u32-native-set!) (g$745$25093 core-prim . bytevector-u32-native-ref) (g$745$25092 core-prim . bytevector-u16-set!) (g$745$25091 core-prim . bytevector-u16-ref) (g$745$25090 core-prim . bytevector-u16-native-set!) (g$745$25089 core-prim . bytevector-u16-native-ref) (g$745$25088 core-prim . bytevector-sint-set!) (g$745$25087 core-prim . bytevector-sint-ref) (g$745$25086 core-prim . bytevector-s8-set!) (g$745$25085 core-prim . bytevector-s8-ref) (g$745$25084 core-prim . bytevector-s64-set!) (g$745$25083 core-prim . bytevector-s64-ref) (g$745$25082 core-prim . bytevector-s64-native-set!) (g$745$25081 core-prim . bytevector-s64-native-ref) (g$745$25080 core-prim . bytevector-s32-set!) (g$745$25079 core-prim . bytevector-s32-ref) (g$745$25078 core-prim . bytevector-s32-native-set!) (g$745$25077 core-prim . bytevector-s32-native-ref) (g$745$25076 core-prim . bytevector-s16-set!) (g$745$25075 core-prim . bytevector-s16-ref) (g$745$25074 core-prim . bytevector-s16-native-set!) (g$745$25073 core-prim . bytevector-s16-native-ref) (g$745$25072 core-prim . bytevector-length) (g$745$25071 core-prim . bytevector-ieee-single-ref) (g$745$25070 core-prim . bytevector-ieee-single-native-set!) (g$745$25069 core-prim . bytevector-ieee-single-native-ref) (g$745$25068 core-prim . bytevector-ieee-double-ref) (g$745$25067 core-prim . bytevector-ieee-double-native-set!) (g$745$25066 core-prim . bytevector-ieee-double-native-ref) (g$745$25065 core-prim . bytevector-fill!) (g$745$25064 core-prim . bytevector-copy!) (g$745$25063 core-prim . bytevector-copy) (g$745$25062 core-prim . bytevector->uint-list) (g$745$25061 core-prim . bytevector->u8-list) (g$745$25060 core-prim . bytevector->sint-list) (g$745$25059 core-prim . no-nans-violation?) (g$745$25058 core-prim . no-infinities-violation?) (g$745$25057 core-prim . make-no-nans-violation) (g$745$25056 core-prim . make-no-infinities-violation) (g$745$25055 core-prim . real->flonum) (g$745$25054 core-prim . flzero?) (g$745$25053 core-prim . fltruncate) (g$745$25052 core-prim . fltan) (g$745$25051 core-prim . flsqrt) (g$745$25050 core-prim . flsin) (g$745$25049 core-prim . flround) (g$745$25048 core-prim . flpositive?) (g$745$25047 core-prim . flonum?) (g$745$25046 core-prim . flodd?) (g$745$25045 core-prim . flnumerator) (g$745$25044 core-prim . flnegative?) (g$745$25043 core-prim . flnan?) (g$745$25042 core-prim . flmod0) (g$745$25041 core-prim . flmod) (g$745$25040 core-prim . flmin) (g$745$25039 core-prim . flmax) (g$745$25038 core-prim . fllog) (g$745$25037 core-prim . flinteger?) (g$745$25036 core-prim . flinfinite?) (g$745$25035 core-prim . flfloor) (g$745$25034 core-prim . flfinite?) (g$745$25033 core-prim . flexpt) (g$745$25032 core-prim . flexp) (g$745$25031 core-prim . fleven?) (g$745$25030 core-prim . fldiv0-and-mod0) (g$745$25029 core-prim . fldiv0) (g$745$25028 core-prim . fldiv-and-mod) (g$745$25027 core-prim . fldiv) (g$745$25026 core-prim . fldenominator) (g$745$25025 core-prim . flcos) (g$745$25024 core-prim . flceiling) (g$745$25023 core-prim . flatan) (g$745$25022 core-prim . flasin) (g$745$25021 core-prim . flacos) (g$745$25020 core-prim . flabs) (g$745$25019 core-prim . fl>?) (g$745$25018 core-prim . fl>=?) (g$745$25017 core-prim . fl=?) (g$745$25016 core-prim . fl<?) (g$745$25015 core-prim . fl<=?) (g$745$25014 core-prim . fl/) (g$745$25013 core-prim . fl-) (g$745$25012 core-prim . fl+) (g$745$25011 core-prim . fl*) (g$745$25010 core-prim . fixnum->flonum) (g$745$25009 core-prim . fxzero?) (g$745$25008 core-prim . fxxor) (g$745$25007 core-prim . fxrotate-bit-field) (g$745$25006 core-prim . fxreverse-bit-field) (g$745$25005 core-prim . fxpositive?) (g$745$25004 core-prim . fxodd?) (g$745$25003 core-prim . fxnot) (g$745$25002 core-prim . fxnegative?) (g$745$25001 core-prim . fxmod0) (g$745$25000 core-prim . fxmod) (g$745$24999 core-prim . fxmin) (g$745$24998 core-prim . fxmax) (g$745$24997 core-prim . fxlength) (g$745$24996 core-prim . fxior) (g$745$24995 core-prim . fxif) (g$745$24994 core-prim . fxfirst-bit-set) (g$745$24993 core-prim . fxeven?) (g$745$24992 core-prim . fxdiv0-and-mod0) (g$745$24991 core-prim . fxdiv0) (g$745$24990 core-prim . fxdiv-and-mod) (g$745$24989 core-prim . fxdiv) (g$745$24988 core-prim . fxcopy-bit-field) (g$745$24987 core-prim . fxcopy-bit) (g$745$24986 core-prim . fxbit-set?) (g$745$24985 core-prim . fxbit-field) (g$745$24984 core-prim . fxbit-count) (g$745$24983 core-prim . fxarithmetic-shift-right) (g$745$24982 core-prim . fxarithmetic-shift-left) (g$745$24981 core-prim . fxarithmetic-shift) (g$745$24980 core-prim . fxand) (g$745$24979 core-prim . fx>?) (g$745$24978 core-prim . fx>=?) (g$745$24977 core-prim . fx=?) (g$745$24976 core-prim . fx<?) (g$745$24975 core-prim . fx<=?) (g$745$24974 core-prim . fx-/carry) (g$745$24973 core-prim . fx-) (g$745$24972 core-prim . fx+/carry) (g$745$24971 core-prim . fx+) (g$745$24970 core-prim . fx*/carry) (g$745$24969 core-prim . fx*) (g$745$24968 core-prim . greatest-fixnum) (g$745$24967 core-prim . least-fixnum) (g$745$24966 core-prim . fixnum-width) (g$745$24965 core-prim . fixnum?) (g$745$24964 core-prim . bitwise-rotate-bit-field) (g$745$24963 core-prim . bitwise-reverse-bit-field) (g$745$24962 core-prim . bitwise-length) (g$745$24961 core-prim . bitwise-if) (g$745$24960 core-prim . bitwise-first-bit-set) (g$745$24959 core-prim . bitwise-copy-bit-field) (g$745$24958 core-prim . bitwise-copy-bit) (g$745$24957 core-prim . bitwise-bit-set?) (g$745$24956 core-prim . bitwise-bit-field) (g$745$24955 core-prim . bitwise-bit-count) (g$745$24954 core-prim . bitwise-xor) (g$745$24953 core-prim . bitwise-ior) (g$745$24952 core-prim . bitwise-and) (g$745$24951 core-prim . bitwise-not) (g$745$24950 core-prim . bitwise-arithmetic-shift-right) (g$745$24949 core-prim . bitwise-arithmetic-shift-left) (g$745$24948 core-prim . bitwise-arithmetic-shift) (g$745$24947 core-prim . zero?) (g$745$24946 core-prim . vector?) (g$745$24945 core-prim . vector-set!) (g$745$24944 core-prim . vector-ref) (g$745$24943 core-prim . vector-map) (g$745$24942 core-prim . vector-length) (g$745$24941 core-prim . vector-for-each) (g$745$24940 core-prim . vector-fill!) (g$745$24939 core-prim . vector->list) (g$745$24938 core-prim . vector) (g$745$24937 core-prim . values) (g$745$24936 core-prim . truncate) (g$745$24935 core-prim . tan) (g$745$24934 core-prim . symbol?) (g$745$24933 core-prim . symbol=?) (g$745$24932 core-prim . symbol->string) (g$745$24931 core-prim . substring) (g$745$24930 core-prim . string?) (g$745$24929 core-prim . string>?) (g$745$24928 core-prim . string>=?) (g$745$24927 core-prim . string=?) (g$745$24926 core-prim . string<?) (g$745$24925 core-prim . string<=?) (g$745$24924 core-prim . string-ref) (g$745$24923 core-prim . string-length) (g$745$24922 core-prim . string-for-each) (g$745$24921 core-prim . string-copy) (g$745$24920 core-prim . string-append) (g$745$24919 core-prim . string->symbol) (g$745$24918 core-prim . string->number) (g$745$24917 core-prim . string->list) (g$745$24916 core-prim . string) (g$745$24915 core-prim . sqrt) (g$745$24914 core-prim . sin) (g$745$24913 core-prim . round) (g$745$24912 core-prim . reverse) (g$745$24911 core-prim . real?) (g$745$24910 core-prim . real-valued?) (g$745$24909 core-prim . real-part) (g$745$24908 core-prim . rationalize) (g$745$24907 core-prim . rational?) (g$745$24906 core-prim . rational-valued?) (g$745$24905 core-prim . procedure?) (g$745$24904 core-prim . positive?) (g$745$24903 core-prim . pair?) (g$745$24902 core-prim . odd?) (g$745$24901 core-prim . numerator) (g$745$24900 core-prim . number?) (g$745$24899 core-prim . number->string) (g$745$24898 core-prim . null?) (g$745$24897 core-prim . not) (g$745$24896 core-prim . negative?) (g$745$24895 core-prim . nan?) (g$745$24894 core-prim . min) (g$745$24893 core-prim . max) (g$745$24892 core-prim . map) (g$745$24891 core-prim . make-vector) (g$745$24890 core-prim . make-string) (g$745$24889 core-prim . make-rectangular) (g$745$24888 core-prim . make-polar) (g$745$24887 core-prim . magnitude) (g$745$24886 core-prim . log) (g$745$24885 core-prim . list?) (g$745$24884 core-prim . list-tail) (g$745$24883 core-prim . list-ref) (g$745$24882 core-prim . list->vector) (g$745$24881 core-prim . list->string) (g$745$24880 core-prim . list) (g$745$24879 core-prim . length) (g$745$24878 core-prim . lcm) (g$745$24877 core-prim . integer?) (g$745$24876 core-prim . integer-valued?) (g$745$24875 core-prim . integer->char) (g$745$24874 core-prim . infinite?) (g$745$24873 core-prim . inexact?) (g$745$24872 core-prim . inexact) (g$745$24871 core-prim . imag-part) (g$745$24870 core-prim . gcd) (g$745$24869 core-prim . for-each) (g$745$24868 core-prim . floor) (g$745$24867 core-prim . finite?) (g$745$24866 core-prim . expt) (g$745$24865 core-prim . exp) (g$745$24864 core-prim . exact?) (g$745$24863 core-prim . exact-integer-sqrt) (g$745$24862 core-prim . exact) (g$745$24861 core-prim . even?) (g$745$24860 core-prim . error) (g$745$24859 core-prim . eqv?) (g$745$24858 core-prim . equal?) (g$745$24857 core-prim . eq?) (g$745$24856 core-prim . dynamic-wind) (g$745$24855 core-prim . div0-and-mod0) (g$745$24854 core-prim . mod0) (g$745$24853 core-prim . div0) (g$745$24852 core-prim . div-and-mod) (g$745$24851 core-prim . mod) (g$745$24850 core-prim . div) (g$745$24849 core-prim . denominator) (g$745$24848 core-prim . cos) (g$745$24847 core-prim . cons) (g$745$24846 core-prim . complex?) (g$745$24845 core-prim . char?) (g$745$24844 core-prim . char>?) (g$745$24843 core-prim . char>=?) (g$745$24842 core-prim . char=?) (g$745$24841 core-prim . char<?) (g$745$24840 core-prim . char<=?) (g$745$24839 core-prim . char->integer) (g$745$24838 core-prim . ceiling) (g$745$24837 core-prim . call-with-values) (g$745$24836 core-prim . call/cc) (g$745$24835 core-prim . call-with-current-continuation) (g$745$24834 core-prim . cddddr) (g$745$24833 core-prim . cdddar) (g$745$24832 core-prim . cddadr) (g$745$24831 core-prim . cddaar) (g$745$24830 core-prim . cdaddr) (g$745$24829 core-prim . cdadar) (g$745$24828 core-prim . cdaadr) (g$745$24827 core-prim . cdaaar) (g$745$24826 core-prim . cadddr) (g$745$24825 core-prim . caddar) (g$745$24824 core-prim . cadadr) (g$745$24823 core-prim . cadaar) (g$745$24822 core-prim . caaddr) (g$745$24821 core-prim . caadar) (g$745$24820 core-prim . caaadr) (g$745$24819 core-prim . caaaar) (g$745$24818 core-prim . cdddr) (g$745$24817 core-prim . cddar) (g$745$24816 core-prim . cdadr) (g$745$24815 core-prim . cdaar) (g$745$24814 core-prim . caddr) (g$745$24813 core-prim . cadar) (g$745$24812 core-prim . caadr) (g$745$24811 core-prim . caaar) (g$745$24810 core-prim . cddr) (g$745$24809 core-prim . cdar) (g$745$24808 core-prim . cadr) (g$745$24807 core-prim . caar) (g$745$24806 core-prim . cdr) (g$745$24805 core-prim . car) (g$745$24804 core-prim . boolean?) (g$745$24803 core-prim . boolean=?) (g$745$24802 core-prim . atan) (g$745$24801 core-prim . assertion-violation) (g$745$24800 core-prim . asin) (g$745$24799 core-prim . apply) (g$745$24798 core-prim . append) (g$745$24797 core-prim . angle) (g$745$24796 core-prim . acos) (g$745$24795 core-prim . abs) (g$745$24794 core-prim . /) (g$745$24793 core-prim . *) (g$745$24792 core-prim . -) (g$745$24791 core-prim . +) (g$745$24790 core-prim . >=) (g$745$24789 core-prim . >) (g$745$24788 core-prim . =) (g$745$24787 core-prim . <=) (g$745$24786 core-prim . <) (g$745$24785 core-prim . let*-values) (g$745$24784 $core-rtd &no-nans-rtd &no-nans-rcd) (g$745$24783 $core-rtd &no-infinities-rtd &no-infinities-rcd) (g$745$24782 $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd) (g$745$24781 $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd) (g$745$24780 $core-rtd &i/o-port-rtd &i/o-port-rcd) (g$745$24779 $core-rtd &i/o-file-does-not-exist-rtd &i/o-file-does-not-exist-rcd) (g$745$24778 $core-rtd &i/o-file-already-exists-rtd &i/o-file-already-exists-rcd) (g$745$24777 $core-rtd &i/o-file-is-read-only-rtd &i/o-fie-is-read-only-rcd) (g$745$24776 $core-rtd &i/o-file-protection-rtd &i/o-file-protection-rcd) (g$745$24775 $core-rtd &i/o-filename-rtd &i/o-filename-rcd) (g$745$24774 $core-rtd &i/o-invalid-position-rtd &i/o-invalid-position-rcd) (g$745$24773 $core-rtd &i/o-write-rtd &i/o-write-rcd) (g$745$24772 $core-rtd &i/o-read-rtd &i/o-read-rcd) (g$745$24771 $core-rtd &i/o-rtd &i/o-rcd) (g$745$24770 $core-rtd &undefined-rtd &undefined-rcd) (g$745$24769 $core-rtd &syntax-rtd &syntax-rcd) (g$745$24768 $core-rtd &lexical-rtd &lexical-rcd) (g$745$24767 $core-rtd &implementation-restriction-rtd &implementation-restriction-rcd) (g$745$24766 $core-rtd &non-continuable-rtd &non-continuable-rcd) (g$745$24765 $core-rtd &who-rtd &who-rcd) (g$745$24764 $core-rtd &irritants-rtd &irritants-rcd) (g$745$24763 $core-rtd &assertion-rtd &assertion-rcd) (g$745$24762 $core-rtd &violation-rtd &violation-rcd) (g$745$24761 $core-rtd &error-rtd &error-rcd) (g$745$24760 $core-rtd &serious-rtd &serious-rcd) (g$745$24759 $core-rtd &warning-rtd &warning-rcd) (g$745$24758 $core-rtd &message-rtd &message-rcd) (g$745$24757 $core-rtd &condition-rtd &condition-rcd) (g$745$24756 macro . define-condition-type) (g$745$24755 macro . define-enumeration) (g$745$24754 macro . define-record-type) (g$745$24753 macro . parent-rtd) (g$745$24752 macro . nongenerative) (g$745$24751 macro . opaque) (g$745$24750 macro . sealed) (g$745$24749 macro . protocol) (g$745$24748 macro . parent) (g$745$24747 macro . immutable) (g$745$24746 macro . mutable) (g$745$24745 macro . fields) (g$745$24744 macro . error-handling-mode) (g$745$24743 macro . file-options) (g$745$24742 macro . buffer-mode) (g$745$24741 macro . eol-style) (g$745$24740 macro . guard) (g$745$24739 macro . trace-define) (g$745$24738 macro . trace-lambda) (g$745$24737 macro . unsyntax-splicing) (g$745$24736 macro . unsyntax) (g$745$24735 macro . unquote-splicing) (g$745$24734 macro . unquote) (g$745$24733 macro . _) (g$745$24732 macro . else) (g$745$24731 macro . =>) (g$745$24730 macro . ...) (g$745$24729 macro . assert) (g$745$24728 macro . endianness) (g$745$24727 macro . delay) (g$745$24726 macro . time) (g$745$24725 macro . or) (g$745$24724 macro . and) (g$745$24723 macro . do) (g$745$24722 macro . cond) (g$745$24721 macro . let*) (g$745$24720 macro . let) (g$745$24719 macro . identifier-syntax) (g$745$24718 macro . with-syntax) (g$745$24717 macro . quasisyntax) (g$745$24716 macro . quasiquote) (g$745$24715 macro . syntax-rules) (g$745$24714 macro . include) (g$745$24713 macro . define-struct) (g$745$24712 core-macro . record-constructor-descriptor) (g$745$24711 core-macro . record-type-descriptor) (g$745$24710 core-macro . let-values) (g$745$24709 core-macro . case) (g$745$24708 core-macro . parameterize) (g$745$24707 core-macro . unless) (g$745$24706 core-macro . when) (g$745$24705 core-macro . if) (g$745$24704 core-macro . letrec*) (g$745$24703 core-macro . letrec) (g$745$24702 core-macro . type-descriptor) (g$745$24701 core-macro . case-lambda) (g$745$24700 core-macro . lambda) (g$745$24699 core-macro . syntax) (g$745$24698 core-macro . syntax-case) (g$745$24697 core-macro . quote) (g$745$24696 core-macro . foreign-call) (g$745$24695 letrec-syntax) (g$745$24694 let-syntax) (g$745$24693 set!) (g$745$24692 import) (g$745$24691 begin) (g$745$24690 module) (g$745$24689 define-syntax) (g$745$24688 define))) values values (quote #f)) (g$745$13887 (quote g$745$25430) (quote (psyntax system $bootstrap)) (quote ()) (quote ()) (quote ()) (quote ()) (quote (#701# #702# #703# #704# #705# #706#)) (quote ()) values values (quote #f)))


(begin (define g$745$24686 (quote #f)) ((lambda (g$745$24671) (begin (set! g$745$24671 (lambda (g$745$24679) ((lambda (g$745$24681) (g$745$24480 g$745$24681)) (with-input-from-file g$745$24679 (lambda () (letrec ((g$745$24683 (lambda () ((lambda (g$745$24685) (if (eof-object? g$745$24685) (quote ()) (cons g$745$24685 (g$745$24683)))) (read))))) (g$745$24683))))))) (begin (set! g$745$24686 g$745$24671) (display (quote "r6rs psyntax ready\n")) ((lambda (g$745$24673) (begin (if (= (length g$745$24673) (quote 2)) (void) (begin (display (quote "provide a script name argument\n")) (exit (quote 17)))) ((lambda (g$745$24676 g$745$24677) (g$745$24671 (car g$745$24677))) (car g$745$24673) (cdr g$745$24673)))) (command-line)) (exit (quote 0))))) (quote #f)))


